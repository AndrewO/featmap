// Code generated by go-bindata.
// sources:
// 10_invites.down.sql
// 10_invites.up.sql
// 1_workspaces.down.sql
// 1_workspaces.up.sql
// 2_accounts.down.sql
// 2_accounts.up.sql
// 3_members.down.sql
// 3_members.up.sql
// 4_projects.down.sql
// 4_projects.up.sql
// 5_milestones.down.sql
// 5_milestones.up.sql
// 6_workflows.down.sql
// 6_workflows.up.sql
// 7_subworkflows.down.sql
// 7_subworkflows.up.sql
// 8_features.down.sql
// 8_features.up.sql
// 9_subscriptions.down.sql
// 9_subscriptions.up.sql
// DO NOT EDIT!

package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __10_invitesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xc8\xcc\x2b\xcb\x2c\x49\x2d\xb6\x56\x00\x04\x00\x00\xff\xff\xe5\xcb\x6e\x53\x14\x00\x00\x00")

func _10_invitesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_invitesDownSql,
		"10_invites.down.sql",
	)
}

func _10_invitesDownSql() (*asset, error) {
	bytes, err := _10_invitesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_invites.down.sql", size: 20, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __10_invitesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x41\x6f\xba\x40\x10\xc5\xef\x24\x7c\x87\x89\x27\x49\xbc\xfc\xbd\xfe\xd3\xc3\x16\x87\x76\x23\xee\xda\xdd\x25\x8d\xbd\x6c\x56\xd9\xa4\xa4\x80\x0d\xa0\x4d\xbf\x7d\x83\x60\xa4\x62\x95\x76\x4f\x2c\x6f\x7e\x79\x8f\x99\xc1\x17\x48\x14\x82\x22\xf7\x21\x42\x92\xef\x93\xca\x96\xae\x33\x76\x1d\x00\x80\x8f\x6d\xf1\x56\xbe\x9b\x8d\xd5\x49\x5c\xdf\x61\xb7\x6b\x1f\xce\x0f\xe3\x0a\x58\x14\x86\x93\x06\xec\x55\x0d\x05\x6d\x66\x92\xb4\xab\xef\x4d\xb1\x79\x35\xc5\x4d\x30\xb5\x7b\xfb\x27\x70\xb3\x8d\xed\xb0\xa8\xf9\xb6\x82\x7c\x97\xa6\x47\xb0\xb0\xa6\xb2\xb1\x5e\x7f\x76\xc0\x9e\xa6\x73\x93\xd9\x5f\xa4\x69\x41\x53\xb5\xba\xa2\x0b\x94\x8a\x2c\x96\xf0\x4c\xd5\xe3\xe1\x0a\x2f\x9c\xe1\xcf\x69\x74\xd3\xc3\xa1\x8e\xa7\x19\x37\x49\x07\x83\x3e\x67\x52\x09\x42\x99\x82\xd1\x72\xae\xdb\xdd\x19\xc1\x52\xd0\x05\x11\x2b\x98\xe3\x0a\xc6\xdd\x0d\x9a\x40\x12\x7b\x17\xe0\x88\x1d\x61\xfd\x6f\x04\x11\xa3\x4f\x11\x9e\x93\x87\x6f\xba\x01\x4f\x4f\x70\x3d\xd4\x4b\xd5\xc1\xbc\x6b\x15\x70\x81\xf4\x81\xf5\x93\x7a\x20\x30\x40\x81\xcc\x47\x79\x6a\x50\x09\xe3\x5a\xe2\x0c\x66\x18\xa2\x42\xf0\x89\xf4\xc9\x0c\xaf\xfb\x4c\xaf\xf8\x4c\x3a\x63\xfb\xe6\x99\xd9\x6c\x6d\x8b\xf2\x42\xff\xfa\xf6\xae\xe3\x35\x01\x0e\x0b\xd2\xfe\xb9\xf5\xe1\x74\x26\xef\x20\x20\xa1\xc4\xe6\xa5\xf7\xdf\x75\xbe\x02\x00\x00\xff\xff\x3c\xcc\x84\x32\xf0\x03\x00\x00")

func _10_invitesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_invitesUpSql,
		"10_invites.up.sql",
	)
}

func _10_invitesUpSql() (*asset, error) {
	bytes, err := _10_invitesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_invites.up.sql", size: 1008, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_workspacesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xcf\x2f\xca\x2e\x2e\x48\x4c\x4e\x2d\xb6\x06\x04\x00\x00\xff\xff\xb1\x4d\x80\x23\x16\x00\x00\x00")

func _1_workspacesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_workspacesDownSql,
		"1_workspaces.down.sql",
	)
}

func _1_workspacesDownSql() (*asset, error) {
	bytes, err := _1_workspacesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_workspaces.down.sql", size: 22, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_workspacesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd0\xcd\x4a\xc4\x30\x14\x05\xe0\x7d\xa1\xef\x70\xe8\xaa\x05\x37\xae\xc5\x45\x1c\x23\x86\x69\xd3\xda\xa6\xc8\xb8\x09\xd7\x36\x38\xc5\x98\x48\xda\x3a\x3e\xbe\x38\x1d\xf0\x67\x46\xbc\xbb\x24\xe7\x23\xdc\xb3\xaa\x39\x53\x1c\x8a\x5d\xe5\x1c\x3b\x1f\x9e\xc7\x57\xea\xcc\x18\x47\x69\x1c\x01\xc0\xd0\xe3\xd4\xcc\xf3\x1f\x0f\xb2\x54\x90\x6d\x9e\x9f\x2d\x3c\x71\xf4\x62\x92\xa3\xd4\x1b\x85\x6e\x4b\xe1\x5f\xde\x05\x43\x93\xe9\x35\x4d\x3f\x52\x4a\x14\xbc\x51\xac\xa8\x70\x2f\xd4\xed\xfe\x88\x87\x52\x72\x38\x3f\xc1\xcd\xd6\x1e\x38\x59\xeb\x77\xda\xbc\x4f\x26\x38\xb2\x7a\xdc\x52\x18\xdc\x13\x1e\xbd\xb7\x86\xdc\xf1\xef\xbf\xf8\xaa\x94\x8d\xaa\x99\x90\x0a\x49\xb5\xd6\x5f\xed\xe8\xf3\x04\x55\x2d\x0a\x56\x6f\xb0\xe6\x1b\xa4\x43\x9f\x9d\x30\xad\xfc\x66\x12\xb4\x52\xdc\xb5\x1c\xe9\xd2\x49\x16\x47\xd9\x42\xf6\x3b\x1c\xea\xfe\x9c\x52\x5c\x37\x97\xb8\x61\x79\xc3\x97\xcb\xec\x22\x8e\x3e\x02\x00\x00\xff\xff\x5c\x7f\x1f\x09\xa8\x01\x00\x00")

func _1_workspacesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_workspacesUpSql,
		"1_workspaces.up.sql",
	)
}

func _1_workspacesUpSql() (*asset, error) {
	bytes, err := _1_workspacesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_workspaces.up.sql", size: 424, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_accountsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\x4c\x4e\xce\x2f\xcd\x2b\x29\xb6\x06\x04\x00\x00\xff\xff\x8d\x98\xe7\xcd\x14\x00\x00\x00")

func _2_accountsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_accountsDownSql,
		"2_accounts.down.sql",
	)
}

func _2_accountsDownSql() (*asset, error) {
	bytes, err := _2_accountsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_accounts.down.sql", size: 20, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_accountsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\x41\x4f\x84\x30\x10\x85\xef\x9b\xec\x7f\x98\xec\x69\x49\xbc\xa8\x47\xe3\xa1\xae\x35\x36\x0b\x05\xa1\xc4\xac\x97\xa6\x42\xd5\xc6\xa5\xdd\x94\xa2\xf1\xdf\x1b\x41\x34\x08\x04\x36\xce\x0d\x78\xf3\xe5\xcd\x9b\x61\x13\x63\xc4\x30\x30\x74\xe5\x63\x10\x59\x66\x2a\xed\xca\xe5\x62\xbd\x5c\x00\x00\xa8\x1c\xc6\xaa\xaa\x46\x3e\xd2\x90\x01\x4d\x7d\xff\xa4\x41\x68\x51\xc8\x11\xc4\x9b\xb0\xd9\x8b\xb0\x93\x08\x59\x08\xb5\xff\x1f\xe2\x20\xca\xf2\xdd\xd8\x21\xc7\x73\x11\x99\x95\xc2\xc9\x9c\x0b\xd7\x53\x32\x12\xe0\x84\xa1\x20\x82\x7b\xc2\x6e\xeb\x47\x78\x08\x29\x1e\x1c\x84\x67\x46\x3f\x29\x5b\xc8\x8e\x99\x47\x63\xf6\x52\xe8\x79\x59\xb4\x08\xe1\x94\xd1\xbc\x94\xda\x71\x67\x8e\x8b\xb3\x8b\x78\x95\x1f\xb5\x72\xee\x52\x07\x10\x07\xa9\x73\xa5\x9f\x67\x0f\xd2\x6e\x84\x5b\x59\x4a\xf7\xe3\xe0\x18\x17\x9b\x90\x26\x2c\x46\x84\x32\x58\x45\x5b\xde\x5e\x2f\x3f\x5d\x41\x14\x93\x00\xc5\x3b\xd8\xe2\x1d\xac\x55\xee\x0d\x74\xa4\xb4\xd3\x91\x52\x72\x97\x62\x58\xd7\xa3\x4d\xe9\xcf\xfe\xe8\x7b\x69\x4e\x01\xce\x7f\x01\xfd\x20\xbc\xe5\xc2\x6b\xda\xeb\x73\xfa\xfe\x17\xbf\x2a\x24\xd7\xc9\x25\xdc\x20\x3f\xc1\xcd\x4b\xef\xe2\x33\x00\x00\xff\xff\x1c\x2c\x52\x45\xc1\x03\x00\x00")

func _2_accountsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_accountsUpSql,
		"2_accounts.up.sql",
	)
}

func _2_accountsUpSql() (*asset, error) {
	bytes, err := _2_accountsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_accounts.up.sql", size: 961, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_membersDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xc8\x4d\xcd\x4d\x4a\x2d\x2a\xb6\x06\x04\x00\x00\xff\xff\xb2\xb9\x72\xbb\x13\x00\x00\x00")

func _3_membersDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_membersDownSql,
		"3_members.down.sql",
	)
}

func _3_membersDownSql() (*asset, error) {
	bytes, err := _3_membersDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_members.down.sql", size: 19, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_membersUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x4f\x6f\xb2\x40\x10\xc6\xef\x26\x7e\x87\x27\x9e\x24\xf1\xf2\xbe\xd7\xa6\x87\x2d\x0e\xed\x46\xdc\xb5\xbb\x4b\x1a\x7b\x21\x5b\xd8\xa4\xa6\x28\x0d\x7f\xec\xd7\x6f\x04\x1a\x01\x4d\x63\xe7\xc6\x30\xbf\xf9\x85\x67\xf0\x15\x31\x43\x30\xec\x21\x24\xec\xdd\xfe\xcd\x15\xe5\x74\x32\x9f\x4e\x00\xe0\x2b\x2f\x3e\xca\x4f\x9b\xb8\x78\x97\xa2\xae\x77\x29\xae\x95\x90\x06\x22\x0a\xc3\x45\x0b\x0d\xa6\x6e\x85\x6c\x92\xe4\xf5\xa1\x8a\x9b\xe9\x5b\xa1\xa4\x70\xb6\x72\x69\x6c\x2b\x00\x86\xaf\x49\x1b\xb6\xde\xe0\x85\x9b\xa7\xe6\x11\xaf\x52\x10\x0e\x79\x85\x43\x9d\x65\x1d\x94\xb9\xa3\xcb\x7e\x16\x1e\x6d\x91\xbc\xdb\xe2\xd2\x34\x82\x7c\x29\xb4\x51\x8c\x0b\x83\xd9\x66\x15\x77\x39\xc5\xff\x66\xd8\x28\xbe\x66\x6a\x8b\x15\x6d\x31\xef\xe7\xb5\xc0\x2e\xf5\xae\xe0\xc1\x00\x0f\xa4\x22\xfe\x28\x2e\x71\x0f\x8a\x02\x52\x24\x7c\xd2\xe7\x3b\x94\x98\x9f\x5e\x49\x81\x25\x85\x64\x08\x3e\xd3\x3e\x5b\xd2\xef\x9e\xff\x23\xcf\x39\xec\x81\xa5\x6b\xff\xc1\x11\x89\xfe\xb7\x44\x82\x3f\x47\x34\x4e\xa1\x27\x9b\x4e\xbc\x76\x47\x73\xa1\xee\x1f\x3b\x95\xe4\x4b\x7d\x8f\x80\x85\x9a\xda\xa6\x77\xf7\x1d\x00\x00\xff\xff\x9e\x72\x7d\xfd\x98\x02\x00\x00")

func _3_membersUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_membersUpSql,
		"3_members.up.sql",
	)
}

func _3_membersUpSql() (*asset, error) {
	bytes, err := _3_membersUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_members.up.sql", size: 664, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_projectsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x28\xca\xcf\x4a\x4d\x2e\x29\xb6\x06\x04\x00\x00\xff\xff\x92\x4b\xaa\xc3\x14\x00\x00\x00")

func _4_projectsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_projectsDownSql,
		"4_projects.down.sql",
	)
}

func _4_projectsDownSql() (*asset, error) {
	bytes, err := _4_projectsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_projects.down.sql", size: 20, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_projectsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xcd\x6e\xa3\x30\x14\x85\xf7\x48\xbc\xc3\x15\x2b\x90\xb2\x99\xd9\x8e\x66\xe1\x92\x4b\x8b\x42\x4c\x0a\x46\x55\xba\x41\x0e\xb8\xaa\x1b\x7e\x22\xe3\xf4\xe7\xed\xab\x84\x24\x85\x80\x9a\x54\xbd\x3b\xc3\xf9\x74\x0e\x87\x6b\x37\x42\xc2\x10\x18\xb9\x09\x10\x36\xaa\x7e\x11\x99\x6e\x4c\xc3\x36\x0d\x00\x80\xb7\x5a\xad\x9b\x0d\xcf\x44\x2a\x73\x38\xcd\x76\xdb\x3d\x75\x86\x86\x0c\x68\x12\x04\x93\x96\x1e\x57\x5d\x4b\x6b\xa9\x0b\x31\x10\xbd\x72\x95\x3d\x73\x75\x91\xb6\x72\xd1\x64\x4a\x6e\xb4\xac\x2b\xeb\x32\x5d\xd5\x1a\xaa\x6d\x51\x1c\xe8\x4c\x09\xae\x45\x9e\xae\x3e\xce\x93\x0f\x04\x69\xc5\x4b\xf1\xc3\x70\x47\x9a\xeb\xae\x88\xf9\x73\x8c\x19\x99\x2f\xe0\xc1\x67\x77\xfb\x23\x3c\x86\x14\xcf\xc3\x15\xbc\xd1\x69\x59\xe7\xf2\x49\x8a\xfc\x77\xf4\x29\xff\xb5\xc5\x88\x77\x2d\x54\xc5\x8b\xb4\x90\xd5\xba\x57\xcc\x10\x1d\x7e\xb7\x1b\xd2\x98\x45\xc4\xa7\x0c\xac\xc5\x2c\x3d\xae\x5b\xfa\xc7\x82\x45\xe4\xcf\x49\xb4\x84\x19\x2e\xc1\xee\xae\xdd\x04\x64\xee\x8c\xf0\x09\xed\xf1\x09\xf5\xef\x13\x04\xbb\x17\x70\x8c\xf3\xfa\xbe\x5e\x18\xa1\x7f\x4b\x87\xbe\x0e\x44\xe8\x61\x84\xd4\xc5\xf8\xeb\x1e\x34\x60\xef\x5e\x85\x14\xa6\x18\x20\x43\x70\x49\xec\x92\x29\x5e\x30\xfa\xfb\x8d\xd1\xa4\xb3\x4c\x3d\xd3\x52\x94\x2b\xa1\x9a\x91\x3a\x3a\xfe\x31\xb6\x0d\x9b\x86\xd3\x46\xd8\xff\xfd\xc3\xf5\xdd\x4d\xe8\x4f\xe3\xff\xe0\x91\x20\xc6\xf6\xa1\xf3\xcf\x34\x3e\x03\x00\x00\xff\xff\x83\xaf\xdd\x89\xf6\x03\x00\x00")

func _4_projectsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_projectsUpSql,
		"4_projects.up.sql",
	)
}

func _4_projectsUpSql() (*asset, error) {
	bytes, err := _4_projectsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_projects.up.sql", size: 1014, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_milestonesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xc8\xcd\xcc\x49\x2d\x2e\xc9\xcf\x4b\x2d\xb6\x56\x00\x04\x00\x00\xff\xff\xd7\xe8\xc3\x9c\x17\x00\x00\x00")

func _5_milestonesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_milestonesDownSql,
		"5_milestones.down.sql",
	)
}

func _5_milestonesDownSql() (*asset, error) {
	bytes, err := _5_milestonesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_milestones.down.sql", size: 23, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_milestonesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\xc1\x8e\x9b\x30\x10\x86\xef\x48\xbc\xc3\x88\x53\x90\x72\x69\x7b\xac\x7a\x70\xc9\xd0\xa2\x10\x93\x82\x51\xb5\xbd\x20\x2f\xb8\xaa\xbb\x80\x23\xdb\xb4\xea\xdb\x57\x09\xe9\x42\x00\xed\xb2\xdb\xb9\xd9\xfe\x7f\xcf\xe7\x61\x86\x20\x45\xc2\x10\x18\xf9\x18\x23\x34\xb2\x16\xc6\xaa\x56\x18\xd7\xd9\xb8\x0e\x00\xc0\x6f\xa5\x1f\xcc\x89\x97\xa2\x90\x15\x3c\x46\xd7\x8d\x57\xa3\xa0\x09\x03\x9a\xc7\xf1\xb6\x77\x9f\xb4\xfa\x29\x4a\x5b\xdc\xaa\xd7\xba\x97\x55\x6b\xdd\x9a\xb7\x0f\x73\xd1\x2f\xae\xcb\x1f\x5c\xcf\x0f\x5a\x65\xa1\xed\xea\xfa\xea\xb6\xd2\xd6\x62\xbd\x7b\x92\xdb\xab\x84\x29\xb5\x3c\x59\xa9\x5a\xef\xc5\xb9\x8d\xe5\xb6\x33\xaf\x25\x2f\xb5\xe0\x56\x54\xc5\xfd\x9f\xb1\xe8\x5c\xb5\x99\xa0\x68\x79\x23\x5e\xf8\xb4\x7f\x6e\x6e\xc7\x22\x16\x1d\x30\x63\xe4\x70\x84\xaf\x11\xfb\x7c\x59\xc2\xb7\x84\xe2\x14\xae\xe6\xc6\x16\x8d\xaa\xe4\x77\x29\xaa\xff\x73\x3f\xf2\xaf\x2e\x8c\xaa\xd5\x5c\xb5\xf6\xdd\x41\x42\x33\x96\x92\x88\x32\xf0\x8e\xfb\x62\x18\x15\x0f\x8e\x69\x74\x20\xe9\x1d\xec\xf1\x0e\x36\xe3\x81\xd9\x82\xac\xfc\x05\x7f\x4e\x47\xfe\xe2\x8d\x07\x39\x8d\xbe\xe4\x38\x35\x0f\xd3\xb3\xbd\x74\xf3\xd2\x55\xe1\x7e\x72\x55\x98\xa4\x18\x7d\xa2\x73\x18\x1f\x52\x0c\x31\x45\x1a\x60\x36\x8c\xb5\x81\xcd\xf9\x28\xa1\xb0\xc3\x18\x19\x42\x40\xb2\x80\xec\xf0\xd9\x54\x6f\x9f\x48\x35\x46\xbf\x49\x7b\xdd\x36\x0b\x65\x7a\x05\xc2\xbb\x27\x11\x86\x36\xbf\x41\x68\x44\x73\x2f\xf4\x33\x04\x19\xf6\xdf\xde\x75\xfc\x1e\xe2\xd2\x97\xd7\x5f\xe2\x39\x92\x68\x97\x7d\x80\x90\xc4\x19\xf6\x9b\xfe\x7b\xd7\xf9\x1b\x00\x00\xff\xff\x07\xf0\x08\xee\x4c\x05\x00\x00")

func _5_milestonesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_milestonesUpSql,
		"5_milestones.up.sql",
	)
}

func _5_milestonesUpSql() (*asset, error) {
	bytes, err := _5_milestonesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_milestones.up.sql", size: 1356, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_workflowsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xcf\x2f\xca\x4e\xcb\xc9\x2f\x2f\xb6\x56\x00\x04\x00\x00\xff\xff\xb2\x91\x57\xa8\x16\x00\x00\x00")

func _6_workflowsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_workflowsDownSql,
		"6_workflows.down.sql",
	)
}

func _6_workflowsDownSql() (*asset, error) {
	bytes, err := _6_workflowsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_workflows.down.sql", size: 22, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_workflowsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\xcd\xae\x9b\x30\x10\x85\xf7\x48\xbc\xc3\x88\x55\x90\xb2\x69\xbb\xac\xba\x70\xc9\xd0\xa2\x10\x93\x82\x51\x75\xbb\x41\xbe\xe0\xab\xd2\x00\x8e\x8c\xd3\xa8\x6f\x5f\x05\xd2\xf0\xab\x84\xa8\xb3\xf3\xf8\x1c\xcf\x67\xe7\x04\x27\x44\xc2\x10\x18\xf9\xec\x23\x9c\xa5\x3a\xbc\x15\xf2\x5c\x9b\xc6\xca\x34\x00\xa0\xe9\xd4\x47\x9e\x8a\x24\xcf\xe0\x56\xa7\x53\x7f\xd5\x2b\x1a\x30\xa0\xb1\xef\xaf\x5b\xf7\x51\xc9\x5f\x22\xd5\xc9\x50\xbd\xd4\x3d\xaf\x5a\xea\x56\xbc\x3a\x4c\x45\xbf\xb9\x4a\x7f\x72\x35\xdd\xa8\xa4\x86\xea\x54\x14\x57\xb7\xce\x75\x21\x96\xbb\x47\xb3\xad\x4c\xd4\xa9\xca\x8f\x3a\x97\x95\xf5\xf4\xec\x54\x09\xae\x45\x96\xbc\xfe\x19\xdf\x7b\x22\x48\x2a\x5e\x8a\x27\xe1\xfe\xb9\xb9\xee\x8b\x98\xb7\xc3\x88\x91\xdd\x1e\xbe\x7b\xec\x6b\xb3\x84\x1f\x01\xc5\x31\x5c\xc1\x6b\x9d\x94\x32\xcb\xdf\x72\x91\xfd\x9f\xfb\xc6\xbf\xf8\x61\x64\x21\xa7\xaa\xa5\xf7\x76\x02\x1a\xb1\x90\x78\x94\x81\xb5\xdf\x26\xb7\xac\x5b\xb0\x0f\xbd\x1d\x09\x5f\x60\x8b\x2f\xb0\xea\x27\x7e\x0d\x79\x66\xcf\xd8\x63\xda\xd9\x93\x77\x16\xc4\xd4\xfb\x16\xe3\xd8\xdb\xa5\x7f\xdd\xa4\x71\xee\x24\x77\x3b\x3c\xc9\x0d\x42\xf4\xbe\xd0\x29\x8a\x0d\x21\xba\x18\x22\x75\x30\xea\xfe\x95\x35\xac\x2e\x5b\x01\x85\x0d\xfa\xc8\x10\x1c\x12\x39\x64\x83\x8f\x26\xbd\xbf\x33\xa9\x0f\x3e\x98\x7a\x6d\xd7\x33\x6f\xf4\x3c\xc1\x87\xbb\x04\x5d\xc2\x07\x04\xa5\x28\x5f\x85\x7a\x00\x10\x61\xfb\xb3\x9b\x86\xdd\x32\x34\x91\xbc\x7e\xcf\x2e\x15\x78\x9b\xe8\x13\xb8\xc4\x8f\xb0\x6d\xda\x1f\x4d\xe3\x6f\x00\x00\x00\xff\xff\xc5\x31\xec\x70\x08\x05\x00\x00")

func _6_workflowsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_workflowsUpSql,
		"6_workflows.up.sql",
	)
}

func _6_workflowsUpSql() (*asset, error) {
	bytes, err := _6_workflowsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_workflows.up.sql", size: 1288, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_subworkflowsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x2e\x4d\x2a\xcf\x2f\xca\x4e\xcb\xc9\x2f\x2f\xb6\x56\x00\x04\x00\x00\xff\xff\xd1\xa4\x98\x7e\x19\x00\x00\x00")

func _7_subworkflowsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_subworkflowsDownSql,
		"7_subworkflows.down.sql",
	)
}

func _7_subworkflowsDownSql() (*asset, error) {
	bytes, err := _7_subworkflowsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_subworkflows.down.sql", size: 25, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_subworkflowsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\x4f\x6f\xa3\x30\x10\xc5\xef\x48\x7c\x87\x11\xa7\x20\xe5\xb2\xbb\xc7\xd5\x1e\xbc\x64\x68\x51\x88\x49\xc1\xa8\x4a\x2f\xc8\x01\x47\x45\xe1\x4f\xc4\x9f\x46\xfd\xf6\x15\x24\x4d\x00\xa3\x94\xb4\x73\xc3\x9e\x37\xef\x67\xeb\x19\xc3\x45\xc2\x10\x18\xf9\x6f\x23\x94\xf5\xf6\x98\x17\xfb\x5d\x92\x1f\x4b\x55\x99\xa9\x0a\x00\x40\xb3\x52\x1e\x78\x28\x82\x38\x82\x4b\xd5\x75\xf7\xab\x53\xd4\x61\x40\x7d\xdb\x9e\x5f\xd5\xcd\xbc\x9e\x78\xb2\x7a\xbc\x6b\xaa\xba\xe0\xd9\x5e\x6e\x7a\xe3\x45\xf8\xca\x0b\x79\x23\xcb\x2b\xc8\xea\x24\x39\xab\xab\xb8\x4a\xc4\x74\xf5\xc0\x5b\x8b\x44\x19\x16\xf1\xa1\x8a\xf3\x4c\xbb\xdb\x3b\x2c\x04\xaf\x44\x14\x6c\xdf\x87\xe7\x96\x1a\x82\x8c\xa7\xe2\x4e\xb8\x4f\x35\xaf\xba\x4d\xcc\x5a\xa1\xc7\xc8\x6a\x0d\xcf\x16\x7b\x6c\x3f\xe1\xc5\xa1\x38\x84\x4b\x78\x59\x05\x69\x1e\xc5\xbb\x58\x44\x3f\x53\x5f\xf8\x27\x5f\x4c\x9e\xe4\x72\xd7\xd4\x73\x1b\x0e\xf5\x98\x4b\x2c\xca\x40\x5b\x2f\x83\x6e\xdc\x35\x58\xbb\xd6\x8a\xb8\x1b\x58\xe2\x06\x66\xdd\xd0\xcf\x21\x8e\xf4\x91\x09\x3e\xed\x4d\x08\x7e\x69\xe0\x53\xeb\xc9\xc7\xa1\xbc\xf3\x06\xe6\x6d\x28\xc7\xa6\x99\x4b\x69\x9a\xe9\xb8\x68\x3d\x50\x99\x48\x07\x17\x4d\x74\x91\x1a\xe8\x5d\xdf\x67\x09\xb3\x66\xcb\xa1\xb0\x40\x1b\x19\x82\x41\x3c\x83\x2c\x70\x82\xd9\xef\x1b\x66\x3d\x7e\xc9\xb9\xd5\x8f\xdc\xd7\xb7\x30\xfe\xdc\xc4\xb8\x66\xbe\x47\x91\x8a\x74\x2b\x8a\x2f\x18\x3c\x3c\x05\x41\x55\xf4\x13\x46\x1b\xd2\xf3\x1f\xae\x29\xc7\x5a\x78\xff\xc0\x24\xb6\x87\xa7\x45\xfd\xaf\xaa\x7c\x04\x00\x00\xff\xff\xd6\x3d\x0b\x44\x1d\x05\x00\x00")

func _7_subworkflowsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_subworkflowsUpSql,
		"7_subworkflows.up.sql",
	)
}

func _7_subworkflowsUpSql() (*asset, error) {
	bytes, err := _7_subworkflowsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_subworkflows.up.sql", size: 1309, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_featuresDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\x4b\x4d\x2c\x29\x2d\x4a\x2d\xb6\x56\x00\x04\x00\x00\xff\xff\x83\x30\x27\x81\x15\x00\x00\x00")

func _8_featuresDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_featuresDownSql,
		"8_features.down.sql",
	)
}

func _8_featuresDownSql() (*asset, error) {
	bytes, err := _8_featuresDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_features.down.sql", size: 21, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_featuresUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\x4d\x8f\xda\x30\x10\x86\xef\x48\xfc\x87\x51\x4e\x20\x71\xe9\xc7\xad\xea\xc1\x0d\x43\x1b\x11\x1c\x9a\x18\x55\xdb\x4b\x64\x88\x51\xad\x0d\xf1\xca\x76\xba\xea\xbf\xaf\x42\x76\xb3\xce\x87\x20\xd0\xce\xcd\x99\x79\x66\xde\x8c\xfc\xda\x8f\x91\x30\x04\x46\xbe\x84\x08\x47\xc1\x6d\xa9\x85\x99\x4e\x66\xd3\x09\x00\xc0\xb3\xd2\x8f\xe6\x89\x1f\x44\x2a\x33\x68\xa2\x2c\xdd\x93\x13\x34\x62\x40\x77\x61\xb8\xa8\x69\x53\xee\xab\x06\xc7\x5c\x3d\x3b\xfc\x58\xfa\x24\x73\x61\xac\x2a\xee\x9b\x3d\x5c\x35\x96\xd6\xbc\x78\xec\x17\xfd\xe6\xfa\xf0\x8b\xeb\x7e\xa2\x50\x16\x8a\x32\xcf\x5f\x68\x2b\x6d\x2e\xee\xa6\xbd\x4c\x98\x83\x96\x4f\x56\xaa\xc2\xbb\x99\x36\x96\xdb\xd2\xdc\x3b\xfb\xa0\x05\xb7\x22\x4b\xf7\x7f\xdc\xa2\x6a\x6b\xbd\x82\xb4\xe0\x27\x71\xad\x7d\x67\xad\xaf\x34\xb7\x6e\x11\x0b\x36\x98\x30\xb2\xd9\xc2\x8f\x80\x7d\x3b\x1f\xe1\x67\x44\xb1\x2b\x2e\xe7\xc6\xa6\x27\x95\xc9\xa3\x14\xd9\xbf\xd1\x8d\xfe\xd1\x8b\x51\xb9\xea\x57\x8d\xfd\x6f\x3f\xa2\x09\x8b\x49\x40\x19\x78\xdb\x75\xfa\x6a\x33\x0f\xb6\x71\xb0\x21\xf1\x03\xac\xf1\x01\x66\xae\xd9\x16\x20\xb3\xf9\x00\xbd\xa3\x0d\x9d\xbe\xf3\x60\x47\x83\xef\x3b\xec\xa2\xae\x73\x16\x1d\x17\x2e\xce\x77\x7b\xa8\xf5\x6a\xdd\x6a\xbd\x8a\x62\x0c\xbe\xd2\xbe\xb4\x39\xc4\xb8\xc2\x18\xa9\x8f\xc9\xdb\x03\x61\x60\x56\xa5\x22\x0a\x4b\x0c\x91\x21\xf8\x24\xf1\xc9\x12\xaf\x0c\x7a\x7f\x61\x50\x57\x7a\x6b\xb0\x93\x32\x03\xab\xbb\x59\xc8\x87\x8b\x42\xdc\x8d\xb6\x64\x34\x89\xff\x22\xe2\xe3\x45\x11\x6f\xde\x6b\x4b\x10\xa7\xbd\xd0\x57\xe6\x27\x58\x5f\xc8\xe9\x64\x5e\x4b\x38\x9b\xe5\xe5\x95\xaf\x22\x0a\x96\xc9\x67\x58\x91\x30\xc1\xfa\xe3\xfc\xd3\x74\xf2\x37\x00\x00\xff\xff\x4f\xeb\x1d\x81\x1d\x06\x00\x00")

func _8_featuresUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_featuresUpSql,
		"8_features.up.sql",
	)
}

func _8_featuresUpSql() (*asset, error) {
	bytes, err := _8_featuresUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_features.up.sql", size: 1565, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_subscriptionsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x2e\x4d\x2a\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\x2b\xb6\x56\x00\x04\x00\x00\xff\xff\x66\x79\xcc\x22\x1a\x00\x00\x00")

func _9_subscriptionsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_subscriptionsDownSql,
		"9_subscriptions.down.sql",
	)
}

func _9_subscriptionsDownSql() (*asset, error) {
	bytes, err := _9_subscriptionsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_subscriptions.down.sql", size: 26, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_subscriptionsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xcd\xae\x9b\x30\x10\x85\xf7\x48\xbc\xc3\x28\x9b\x1b\xa4\x6c\xba\xae\xba\x70\xc9\xd0\xa2\x10\x93\x82\x51\x75\xbb\xb1\x1c\x6c\x54\xab\xfc\x44\xb6\xb9\x6d\xdf\xbe\xca\x3f\x09\x44\x4d\xd5\xd9\x19\xce\x77\x7c\x6c\xcf\x84\x19\x12\x86\xc0\xc8\xc7\x04\xc1\xf6\x5b\x5b\x1a\xbd\x73\xba\x6b\xad\xef\xcd\x7d\x0f\x00\xe0\x67\x67\x7e\xd8\x9d\x28\x15\xd7\x12\x2e\xd5\xf7\xc3\xd5\xa0\x68\xca\x80\x16\x49\xb2\x38\xd2\xd3\xaa\x67\xe9\x5a\xbd\xa9\x7a\x24\x7a\x13\xa6\xfc\x2e\xcc\x5f\xe9\xb6\x6f\xb6\xca\xf0\xae\xe2\x4a\x6a\xd7\x19\x7b\x10\xe9\xd6\x4d\x6e\x7d\x4f\x57\xa6\x6b\xb8\x14\x4e\xdd\x88\x58\xbc\xc6\x9c\x91\xf5\x06\xbe\xc6\xec\xf3\x61\x09\xdf\x52\x8a\xf7\xb4\xfa\xb5\xd3\x46\xec\x6f\x72\xe8\xf1\x2c\x5d\x1a\x25\x9c\x92\x7c\xfb\x9b\xb7\xa2\x51\xff\x78\xee\x33\x2d\xdc\x53\xc9\xdb\xce\x41\xdb\xd7\xf5\xf9\xce\x85\x75\xbc\xe9\xa4\xae\xb4\x92\xff\x47\x5f\xf2\x3f\x4c\x7e\x47\x5b\x27\x5c\x6f\x1f\xbd\xf7\x59\x0c\x52\x55\xa2\xaf\x1d\xbc\xbc\x9c\xb8\x30\xa5\x39\xcb\x48\x4c\x19\xcc\x36\x2b\x7e\xd3\xc8\x33\xd8\x64\xf1\x9a\x64\xaf\xb0\xc2\x57\x98\x0f\xdb\x79\x01\x5a\x06\x13\x16\x05\xbd\xb5\xe0\xef\x66\x50\xd0\xf8\x4b\x81\x63\x7e\x71\x6d\x94\x29\xab\x68\x35\xb6\x8a\xd2\x0c\xe3\x4f\x74\x9c\x27\x80\x0c\x23\xcc\x90\x86\x98\x5f\xe7\xce\xc2\x7c\xff\x2b\xa5\xb0\xc4\x04\x19\x42\x48\xf2\x90\x2c\xd1\xf7\x82\xe3\x7e\x87\x17\x39\x4d\xeb\xbe\xd2\x78\x99\x7f\x80\x88\x24\x39\x1e\x3f\x06\xef\x7d\xef\x4f\x00\x00\x00\xff\xff\x14\x50\xf2\xba\xea\x03\x00\x00")

func _9_subscriptionsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_subscriptionsUpSql,
		"9_subscriptions.up.sql",
	)
}

func _9_subscriptionsUpSql() (*asset, error) {
	bytes, err := _9_subscriptionsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_subscriptions.up.sql", size: 1002, mode: os.FileMode(511), modTime: time.Unix(1565093036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"10_invites.down.sql":      _10_invitesDownSql,
	"10_invites.up.sql":        _10_invitesUpSql,
	"1_workspaces.down.sql":    _1_workspacesDownSql,
	"1_workspaces.up.sql":      _1_workspacesUpSql,
	"2_accounts.down.sql":      _2_accountsDownSql,
	"2_accounts.up.sql":        _2_accountsUpSql,
	"3_members.down.sql":       _3_membersDownSql,
	"3_members.up.sql":         _3_membersUpSql,
	"4_projects.down.sql":      _4_projectsDownSql,
	"4_projects.up.sql":        _4_projectsUpSql,
	"5_milestones.down.sql":    _5_milestonesDownSql,
	"5_milestones.up.sql":      _5_milestonesUpSql,
	"6_workflows.down.sql":     _6_workflowsDownSql,
	"6_workflows.up.sql":       _6_workflowsUpSql,
	"7_subworkflows.down.sql":  _7_subworkflowsDownSql,
	"7_subworkflows.up.sql":    _7_subworkflowsUpSql,
	"8_features.down.sql":      _8_featuresDownSql,
	"8_features.up.sql":        _8_featuresUpSql,
	"9_subscriptions.down.sql": _9_subscriptionsDownSql,
	"9_subscriptions.up.sql":   _9_subscriptionsUpSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"10_invites.down.sql":      &bintree{_10_invitesDownSql, map[string]*bintree{}},
	"10_invites.up.sql":        &bintree{_10_invitesUpSql, map[string]*bintree{}},
	"1_workspaces.down.sql":    &bintree{_1_workspacesDownSql, map[string]*bintree{}},
	"1_workspaces.up.sql":      &bintree{_1_workspacesUpSql, map[string]*bintree{}},
	"2_accounts.down.sql":      &bintree{_2_accountsDownSql, map[string]*bintree{}},
	"2_accounts.up.sql":        &bintree{_2_accountsUpSql, map[string]*bintree{}},
	"3_members.down.sql":       &bintree{_3_membersDownSql, map[string]*bintree{}},
	"3_members.up.sql":         &bintree{_3_membersUpSql, map[string]*bintree{}},
	"4_projects.down.sql":      &bintree{_4_projectsDownSql, map[string]*bintree{}},
	"4_projects.up.sql":        &bintree{_4_projectsUpSql, map[string]*bintree{}},
	"5_milestones.down.sql":    &bintree{_5_milestonesDownSql, map[string]*bintree{}},
	"5_milestones.up.sql":      &bintree{_5_milestonesUpSql, map[string]*bintree{}},
	"6_workflows.down.sql":     &bintree{_6_workflowsDownSql, map[string]*bintree{}},
	"6_workflows.up.sql":       &bintree{_6_workflowsUpSql, map[string]*bintree{}},
	"7_subworkflows.down.sql":  &bintree{_7_subworkflowsDownSql, map[string]*bintree{}},
	"7_subworkflows.up.sql":    &bintree{_7_subworkflowsUpSql, map[string]*bintree{}},
	"8_features.down.sql":      &bintree{_8_featuresDownSql, map[string]*bintree{}},
	"8_features.up.sql":        &bintree{_8_featuresUpSql, map[string]*bintree{}},
	"9_subscriptions.down.sql": &bintree{_9_subscriptionsDownSql, map[string]*bintree{}},
	"9_subscriptions.up.sql":   &bintree{_9_subscriptionsUpSql, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
