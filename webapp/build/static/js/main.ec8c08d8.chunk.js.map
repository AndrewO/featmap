{"version":3,"sources":["store/application/actions.ts","api/index.ts","components/elements.tsx","pages/LogInPage.tsx","pages/SignUpPage.tsx","store/features/actions.ts","pages/LogOutPage.tsx","pages/VerifyEmailPage.tsx","components/ContextMenu.tsx","components/Header.tsx","pages/AccountPage.tsx","store/application/selectors.ts","pages/NotFound.tsx","components/EmptyCard.tsx","store/milestones/actions.ts","store/workflows/actions.ts","store/subworkflows/actions.ts","core/misc.ts","store/subworkflows/selectors.ts","components/CreateCardModal.tsx","store/features/selectors.ts","store/projects/actions.ts","components/Card.tsx","components/NewCard.tsx","components/NewDimCard.tsx","components/Board.tsx","store/milestones/selectors.ts","store/workflows/selectors.ts","components/EntityDetailsTitle.tsx","components/EntityDetailsDescription.tsx","components/EntityDetailsBody.tsx","components/EntityDetailsModal.tsx","store/projects/selectors.ts","pages/EntityDetailsPage.tsx","pages/ProjectPage.tsx","components/CreateProjectModal.tsx","pages/ProjectsPage.tsx","pages/WorkspaceSettingsPage.tsx","pages/WorkspacePage.tsx","components/CreateWorkspaceModal.tsx","pages/WorkspacesPage.tsx","components/Footer.tsx","pages/IndexPage.tsx","pages/ResetPasswordPage.tsx","pages/ResetPasswordWithKeyPage.tsx","components/Messages.tsx","pages/AcceptInvitePage.tsx","pages/ExternalEntityDetailsPage.tsx","pages/ExternalLinkPage.tsx","pages/ContactPage.tsx","pages/SuccessPage.tsx","pages/CancelPage.tsx","App.tsx","serviceWorker.ts","store/projects/reducers.ts","core/lexorank.ts","store/features/reducers.ts","store/workflows/reducers.ts","store/subworkflows/reducers.ts","store/milestones/reducers.ts","store/application/reducers.ts","store/index.ts","configureStore.ts","index.tsx"],"names":["AppActions","endpoint","process","REACT_APP_API_ENDPOINT","API_CHANGE_ALLOW_EXTERNAL_SHARING","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","workspaceId","value","wrap","_context","prev","next","fetch","method","headers","Accept","Content-Type","Workspace","credentials","body","JSON","stringify","abrupt","sent","stop","_x","_x2","apply","this","arguments","API_GET_EXTERNAL_LINK","_ref2","_callee2","code","_context2","_x3","API_ACCEPT_INVITE","_ref3","_callee3","_context3","_x4","API_GET_INVITE","_ref4","_callee4","_context4","_x5","API_SIGN_UP","_ref5","_callee5","data","_context5","_x6","API_LOG_IN","_ref6","_callee6","_context6","_x7","API_CHANGE_EMAIL","_ref7","_callee7","_context7","email","_x8","API_CHANGE_NAME","_ref8","_callee8","_context8","_x9","API_DELETE_ACCOUNT","_ref9","_callee9","_context9","API_LOG_OUT","_ref10","_callee10","_context10","API_CREATE_WORKSPACE","_ref11","_callee11","name","_context11","_x10","API_DELETE_WORKSPACE","_ref12","_callee12","id","_context12","_x11","API_FETCH_APP","_ref13","_callee13","_context13","API_VERIFY_EMAIL","_ref14","_callee14","key","_context14","_x12","API_RESEND_EMAIL","_ref15","_callee15","_context15","API_PASSWORD_RESET","_ref16","_callee16","_context16","_x13","API_SET_PASSWORD","_ref17","_callee17","_context17","_x14","API_GET_MEMBERS","_ref18","_callee18","_context18","_x15","API_LEAVE","_ref19","_callee19","_context19","_x16","API_UPDATE_MEMBER_LEVEL","_ref20","_callee20","memberId","level","_context20","_x17","_x18","_x19","API_DELETE_MEMBER","_ref21","_callee21","_context21","_x20","_x21","API_GET_INVITES","_ref22","_callee22","_context22","_x22","API_CREATE_INVITE","_ref23","_callee23","_context23","_x23","_x24","_x25","API_DELETE_INVITE","_ref24","_callee24","_context24","_x26","_x27","API_RESEND_INVITE","_ref25","_callee25","_context25","_x28","_x29","API_GET_PROJECTS","_ref26","_callee26","_context26","_x30","API_GET_PROJECT","_ref27","_callee27","projectId","_context27","_x31","_x32","API_CREATE_PROJECT","_ref28","_callee28","title","_context28","_x33","_x34","_x35","API_RENAME_PROJECT","_ref29","_callee29","_context29","_x36","_x37","_x38","API_DELETE_PROJECT","_ref30","_callee30","_context30","_x39","_x40","API_UPDATE_PROJECT_DESCRIPTION","_ref31","_callee31","description","_context31","_x41","_x42","_x43","API_CREATE_MILESTONE","_ref32","_callee32","_context32","_x44","_x45","_x46","_x47","API_MOVE_MILESTONE","_ref33","_callee33","index","_context33","_x48","_x49","_x50","API_DELETE_MILESTONE","_ref34","_callee34","_context34","_x51","_x52","API_RENAME_MILESTONE","_ref35","_callee35","_context35","_x53","_x54","_x55","API_UPDATE_MILESTONE_DESCRIPTION","_ref36","_callee36","_context36","_x56","_x57","_x58","API_OPEN_MILESTONE","_ref37","_callee37","_context37","_x59","_x60","API_CLOSE_MILESTONE","_ref38","_callee38","_context38","_x61","_x62","API_CHANGE_MILESTONE_COLOR","_ref39","_callee39","color","_context39","_x63","_x64","_x65","API_CREATE_FEATURE","_ref40","_callee40","milestoneId","subWorkflowId","_context40","_x66","_x67","_x68","_x69","_x70","API_MOVE_FEATURE","_ref41","_callee41","toSubWorkflowId","toMilestoneId","_context41","_x71","_x72","_x73","_x74","_x75","API_OPEN_FEATURE","_ref42","_callee42","_context42","_x76","_x77","API_CLOSE_FEATURE","_ref43","_callee43","_context43","_x78","_x79","API_DELETE_FEATURE","_ref44","_callee44","_context44","_x80","_x81","API_RENAME_FEATURE","_ref45","_callee45","_context45","_x82","_x83","_x84","API_UPDATE_FEATURE_DESCRIPTION","_ref46","_callee46","_context46","_x85","_x86","_x87","API_CHANGE_FEATURE_COLOR","_ref47","_callee47","_context47","_x88","_x89","_x90","API_CREATE_WORKFLOW","_ref48","_callee48","_context48","_x91","_x92","_x93","_x94","API_MOVE_WORKFLOW","_ref49","_callee49","_context49","_x95","_x96","_x97","API_DELETE_WORKFLOW","_ref50","_callee50","_context50","_x98","_x99","API_RENAME_WORKFLOW","_ref51","_callee51","_context51","_x100","_x101","_x102","API_UPDATE_WORKFLOW_DESCRIPTION","_ref52","_callee52","_context52","_x103","_x104","_x105","API_CHANGE_WORKFLOW_COLOR","_ref53","_callee53","_context53","_x106","_x107","_x108","API_CREATE_SUBWORKFLOW","_ref54","_callee54","workflowId","_context54","_x109","_x110","_x111","_x112","API_MOVE_SUBWORKFLOW","_ref55","_callee55","toWorkflowId","_context55","_x113","_x114","_x115","_x116","API_DELETE_SUBWORKFLOW","_ref56","_callee56","_context56","_x117","_x118","API_RENAME_SUBWORKFLOW","_ref57","_callee57","_context57","_x119","_x120","_x121","API_UPDATE_SUBWORKFLOW_DESCRIPTION","_ref58","_callee58","_context58","_x122","_x123","_x124","API_CHANGE_SUBWORKFLOW_COLOR","_ref59","_callee59","_context59","_x125","_x126","_x127","API_CONTACT","_ref60","_callee60","_context60","_x128","Button","props","react_default","createElement","type","submit","onClick","handleOnClick","className","small","noborder","primary","secondary","warning","icon","style","fontSize","iconColor","CardLayout","children","SignupSchema","Yup","shape","required","password","min","max","LogIn","history","formik_esm","initialValues","initialStatus","validationSchema","onSubmit","values","actions","setStatus","LoginApi","then","response","ok","json","push","setSubmitting","render","formikBag","status","field","form","assign","placeholder","touched","errors","elements_Button","react_router_dom","to","Component","workspaceName","matches","SignUp","SignUpApi","message","setFieldError","msg","ActionTypes","receiveApp","s","action","LOAD_APPLICATION","deleteMessage","DELETE_MESSAGE","newMessage","dispatch","uuid","m","CREATE_MESSAGE","Promise","setTimeout","getApp","mapDispatchToProps","resetApp","RESET_APPLICATION","LogoutPage","_this","resp","connect","VerifyEmailPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","match","params","setState","ContextMenu","handleClickOutside","expand","night","onClickOutside","Header","components_ContextMenu","account","WorkspacesPage","reallySureWarning","components_Header","application","emailConfirmationPending","elements_CardLayout","emailConfirmationSentTo","emailConfirmed","window","location","href","button","createSelector","getWorkspaceByName","workspaces","find","x","getMembership","memberships","NotFound","EmptyCard","createFeature","CREATE_FEATURE","loadFeatures","LOAD_FEATURES","updateFeature","UPDATE_FEATURE","deleteFeature","DELETE_FEATURE","createMilestone","CREATE_MILESTONE","loadMilestones","LOAD_MILESTONES","updateMilestone","UPDATE_MILESTONE","deleteMilestone","DELETE_MILESTONE","createWorkflow","CREATE_WORKFLOW","loadWorkflows","LOAD_WORKFLOWS","updateWorkflow","UPDATE_WORKFLOW","deleteWorkflow","DELETE_WORKFLOW","Roles","SubscriptionLevels","createSubWorkflow","CREATE_SUBWORKFLOW","loadSubWorkflows","LOAD_SUBWORKFLOWS","updateSubWorkflow","UPDATE_SUBWORKFLOW","deleteSubWorkflow","DELETE_SUBWORKFLOW","subWorkflows","sortSubWorkflows","items","mm","sort","b","rank","getSubWorkflow","xx","f","getSubWorkflowByWorkflow","filter","CardStatus","isEditor","EDITOR","ADMIN","OWNER","Color","memberLevelToTitle","Types","Colors","Array","WHITE","GREY","RED","ORANGE","YELLOW","GREEN","TEAL","BLUE","INDIGO","PURPLE","PINK","colorToBackgroundColorClass","NONE","colorToBorderColorClass","features","sortFeatures","ff","filterFeaturesOnMilestoneAndSubWorkflow","closedFeatures","CLOSED","getFeature","ProjectsActions","Schema","CreateCardModal","keydownHandler","event","keyCode","close","document","addEventListener","parentProps","Dialog","_Component2","_getPrototypeOf3","_len2","length","args","_key2","concat","inherits","createClass","_this3","t","Date","toISOString","WORKFLOW","optimisticWorkflow","kind","createdAt","createdBy","undefined","createdByName","lastModified","lastModifiedByName","demo","MILESTONE","optimisticMilestone","OPEN","SUBWORKFLOW","payload","optimisticSubMilestone","FEATURE","_parentProps$action$p","optimisticFeature","autoFocus","DialogWithClickOutside","OnClickOut","background","Card","link","bottomLink","bottomStatus","rightLink","NewCard","NewDimCard","moveFeature","MOVE_FEATURE","moveMilestone","MOVE_MILESTONE","moveSubWorkflow","MOVE_SUBWORKFLOW","moveWorkflow","MOVE_WORKFLOW","Board","openCreateFeatureModal","showCreateFeatureModal","createFeatureModalMilestoneId","createFeatureModalSubWorkflowId","closeCreateFeatureModal","handleMilestoneMove","onDragEnd","result","draggableId","destination","by","_this$getMilestoneAnd","getMilestoneAndSubWorkflowFromFeatureDroppableId","droppableId","rid","wid","fid","getFeatureFromDraggableId","ts","alert","isMilestoneDraggable","getMilestoneFromDraggableId","getWorkflowFromDraggableId","swid","getSubWorkflowFromDraggableId","getWorkflowFromDroppableId","showClosedMilestones","getListStyle","isDraggingOver","getItemStyle","isDragging","draggableStyle","objectSpread","res","split","showCreateMilestoneModal","showCreateWorkflowModal","showCreateSubWorkflowModal","createSubWorkflowWorkflowId","_this$props","workflows","milestones","isEmpty","viewOnly","react_beautiful_dnd_esm","onDragStart","components_CreateCardModal","target","direction","providedDroppable","snapshotDroppable","ref","innerRef","droppableProps","components_EmptyCard","map","w","isDragDisabled","providedDraggable","snapshotDraggable","draggableProps","dragHandleProps","components_Card","url","ss","components_NewCard","sw","closed","showClosedMilstones","components_NewDimCard","sortMilestones","getMilestone","filterMilestonesOnProject","sortWorkflows","getWorkflow","filterWorkflowsOnProject","createProject","p","CREATE_PROJECT","loadProjects","pp","LOAD_PROJECTS","updateProject","UPDATE_PROJECT","deleteProject","DELETE_PROJECT","EntityDetailsTitle","edit","submitForm","card","optimistic","app","handleFocus","ev","currentTarget","select","onFocus","EntityDetailsDescription","entity","rows","rel","react_markdown_default","source","linkTarget","EntityDetailsBody","urlRef","React","createRef","copyToClipboard","listener","e","clipboardData","setData","preventDefault","execCommand","removeEventListener","copySuccess","handleDelete","handleClose","handleOpen","handleChangeColor","editTitle","open","components_EntityDetailsTitle","components_EntityDetailsDescription","current","readOnly","REACT_APP_BASE_URL","queryCommandSupported","react_timeago_lib_default","date","EntityDetailsModal","Body","components_EntityDetailsBody","projects","sortProjectsByCreateDate","getTime","getProjectById","EntityDetailsPage","ws","member","ms","components_EntityDetailsModal","featureId","projectId2","ProjectPage","projectFound","loading","_this$props$match$par","queryString","parse","search","_this$props$match$par2","proj","allowExternalSharing","externalLink","components_Board","react_router","exact","path","component","CreateProjectModal","WorkspacePage","openProjectModal","showAddProjectModal","closeProjectModal","show","components_CreateProjectModal","pathname","WorkspaceSettingsPage","members","invites","showMemberDetails","isCompany","euVat","country","externalBillingEmail","loadMembers","loadInvites","_this4","subscriptions","getSubscription","MemberBox","_useState","useState","_useState2","slicedToArray","setShow","isMyself","accountId","PRO","onChange","checked","notFound","strict","ProjectsPage","CreateWorkspaceModal","showCreate","components_CreateWorkspaceModal","Footer","applicationReceived","Index","AccountPage","components_Footer","ResetPasswordPage","showSent","enableReinitialize","showDone","Messages","messages","AcceptInvitePage","invite","success","ExternalEntityDetailsPage","ExternalLinkPage","project","pages_ExternalEntityDetailsPage","ContactPage","topic","sender","SuccessPage","CancelPage","App","SignUpPage","LoginPage","ResetPasswordWithKeyPage","IndexPage","components_Messages","Boolean","hostname","initialState","reducer","toConsumableArray","alphabet","minChar","maxChar","Rank","i","prevChar","getChar","nextChar","midChar","mid","rebalance","prevIndex","findIndex","nextIndex","Math","floor","defaultChar","feature","featureList","_action$payload","prevRank","nextRank","ll","workflow","milestonesInitialState","milestone","applicationInitialState","combineReducers","fromProjects","fromFeatures","fromWorkflows","fromSubWorkflows","fromMilestones","fromApplication","router","connectRouter","createBrowserHistory","store","createStore","compose","applyMiddleware","routerMiddleware","ReactDOM","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec8c08d8.chunk.js","sourcesContent":["import { action } from 'typesafe-actions'\r\nimport { API_FETCH_APP, API_FETCH_APP_RESP } from '../../api'\r\nimport { IMessage, messageTypes } from './types';\r\nimport { Dispatch } from 'react';\r\nimport { AllActions } from '..';\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nexport enum AppActions {\r\n    LOAD_APPLICATION = 'LOAD_APPLICATION',\r\n    RESET_APPLICATION = 'RESET_APPLICATION',\r\n    CREATE_MESSAGE = 'CREATE_MESSAGE',\r\n    DELETE_MESSAGE = 'DELETE_MESSAGE'\r\n}\r\n\r\nexport interface receiveApp { type: AppActions.LOAD_APPLICATION, payload: API_FETCH_APP_RESP }\r\nexport interface resetApp { type: AppActions.RESET_APPLICATION, payload: {} }\r\nexport interface createMessage { type: AppActions.CREATE_MESSAGE, payload: IMessage }\r\nexport interface deleteMessage { type: AppActions.DELETE_MESSAGE, payload: string }\r\n\r\nexport const receiveApp = (s: API_FETCH_APP_RESP) => {\r\n    return action(AppActions.LOAD_APPLICATION, s)\r\n}\r\n\r\nexport const resetApp = () => action(AppActions.RESET_APPLICATION)\r\nexport const createMessage = (m: IMessage) => action(AppActions.CREATE_MESSAGE, m)\r\nexport const deleteMessage = (id: string) => action(AppActions.DELETE_MESSAGE, id)\r\n\r\nexport type Actions = receiveApp | resetApp | createMessage | deleteMessage\r\n\r\nexport const newMessage = (dispatch: Dispatch<AllActions>) => async (type: messageTypes, message: string) => {\r\n    const id = uuid()\r\n\r\n    dispatch(createMessage({ id, type, message }))\r\n\r\n    const del = new Promise(() => {\r\n        setTimeout(() => {\r\n            dispatch(deleteMessage(id))\r\n        }, 4000)\r\n    })\r\n\r\n    del.then()\r\n}\r\n\r\nexport const getApp = (dispatch: Dispatch<AllActions>) => async () => {\r\n    API_FETCH_APP()\r\n        .then(response => {\r\n            if (response.ok) {\r\n                response.json().then((data: API_FETCH_APP_RESP) => {\r\n                    dispatch(receiveApp(data))\r\n                })\r\n            }\r\n        }\r\n        )\r\n}\r\n\r\n\r\n\r\n\r\n","import { IWorkspace, IMembership, IAccount, IMessage, ISubscription } from '../store/application/types'\r\nimport { IProject } from '../store/projects/types'\r\nimport { IMilestone } from '../store/milestones/types';\r\nimport { IWorkflow } from '../store/workflows/types';\r\nimport { ISubWorkflow } from '../store/subworkflows/types';\r\nimport { IFeature } from '../store/features/types';\r\nimport { Color } from '../core/misc';\r\n\r\nconst endpoint = process.env.REACT_APP_API_ENDPOINT\r\n\r\nexport interface API_SIGN_UP_REQ {\r\n    workspaceName: string\r\n    name: string\r\n    email: string\r\n    password: string\r\n}\r\n\r\n\r\n\r\nexport const API_CHANGE_ALLOW_EXTERNAL_SHARING = async (workspaceId: string, value: boolean) => {\r\n\r\n    return await fetch(endpoint + \"/settings/allow-external-sharing\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId,\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ value })\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\nexport const API_GET_EXTERNAL_LINK = async (code: string) => {\r\n\r\n    return await fetch(endpoint + \"/link/\" + code, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\nexport const API_ACCEPT_INVITE = async (code: string) => {\r\n\r\n    return await fetch(endpoint + \"/users/invite/\" + code, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\nexport const API_GET_INVITE = async (code: string) => {\r\n\r\n    return await fetch(endpoint + \"/users/invite/\" + code, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\n\r\nexport const API_SIGN_UP = async (data: API_SIGN_UP_REQ) => {\r\n\r\n    return await fetch(endpoint + \"/users/signup\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(data)\r\n    });\r\n}\r\n\r\nexport interface API_LOG_IN_REQ {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport const API_LOG_IN = async (data: API_LOG_IN_REQ) => {\r\n\r\n    return await fetch(endpoint + \"/users/login\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(data)\r\n    });\r\n}\r\n\r\n\r\nexport interface API_CHANGE_EMAIL_REQ {\r\n    email: string\r\n}\r\n\r\nexport const API_CHANGE_EMAIL = async (data: API_CHANGE_EMAIL_REQ) => {\r\n\r\n    return await fetch(endpoint + \"/account/emailupdate/\" + data.email, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include'\r\n    }\r\n    )\r\n}\r\n\r\nexport interface API_CHANGE_NAME_REQ {\r\n    name: string\r\n}\r\n\r\nexport const API_CHANGE_NAME = async (data: API_CHANGE_NAME_REQ) => {\r\n\r\n    return await fetch(endpoint + \"/account/nameupdate\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(data)\r\n    }\r\n    )\r\n}\r\n\r\nexport const API_DELETE_ACCOUNT = async () => {\r\n    return await fetch(endpoint + \"/account/delete\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\n\r\nexport const API_LOG_OUT = async () => {\r\n\r\n    return await fetch(endpoint + \"/users/logout\", {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\nexport const API_CREATE_WORKSPACE = async (name: string) => {\r\n    return await fetch(endpoint + \"/account/workspaces\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ name })\r\n    });\r\n}\r\n\r\nexport const API_DELETE_WORKSPACE = async (id: string) => {\r\n    return await fetch(endpoint + \"/delete\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": id,\r\n        },\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\nexport interface API_FETCH_APP_RESP {\r\n    workspaces: IWorkspace[]\r\n    memberships: IMembership[]\r\n    account: IAccount\r\n    messages: IMessage[]\r\n    subscriptions: ISubscription[]\r\n}\r\n\r\nexport const API_FETCH_APP = async () => {\r\n\r\n    return await fetch(endpoint + \"/account/app\", {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\nexport const API_VERIFY_EMAIL = async (key: string) => {\r\n\r\n    return await fetch(endpoint + \"/users/verify/\" + key, {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\nexport const API_RESEND_EMAIL = async () => {\r\n\r\n    return await fetch(endpoint + \"/account/resend\", {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\nexport const API_PASSWORD_RESET = async (email: string) => {\r\n\r\n    return await fetch(endpoint + \"/users/reset/\" + email, {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n    });\r\n}\r\n\r\n\r\nexport interface API_NEW_PASSWORD_REQ {\r\n    key: string\r\n    password: string\r\n}\r\n\r\nexport const API_SET_PASSWORD = async (data: API_NEW_PASSWORD_REQ) => {\r\n\r\n    return await fetch(endpoint + \"/users/setpassword\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(data)\r\n    });\r\n}\r\n\r\n// MEMBERS MANAGEMENT\r\n\r\nexport const API_GET_MEMBERS = async (workspaceId: string) => {\r\n    return await fetch(endpoint + \"/members\", {\r\n        method: 'GET',\r\n        headers: {\r\n            \"Workspace\": workspaceId,\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n    });\r\n}\r\n\r\nexport const API_LEAVE = async (workspaceId: string) => {\r\n    return await fetch(endpoint + \"/leave\", {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Workspace\": workspaceId,\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n    });\r\n}\r\n\r\n\r\nexport const API_UPDATE_MEMBER_LEVEL = async (workspaceId: string, memberId: string, level: string) => {\r\n    return await fetch(endpoint + \"/members/\" + memberId + \"/level\", {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Workspace\": workspaceId,\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ level })\r\n    });\r\n}\r\n\r\nexport const API_DELETE_MEMBER = async (workspaceId: string, id: string) => {\r\n    return await fetch(endpoint + \"/members/\" + id, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            \"Workspace\": workspaceId,\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\n// INVITES\r\n\r\nexport const API_GET_INVITES = async (workspaceId: string) => {\r\n    return await fetch(endpoint + \"/invites\", {\r\n        method: 'GET',\r\n        headers: {\r\n            \"Workspace\": workspaceId,\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n    });\r\n}\r\n\r\nexport const API_CREATE_INVITE = async (workspaceId: string, email: string, level: string) => {\r\n    return await fetch(endpoint + \"/invites\", {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Workspace\": workspaceId,\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ email, level })\r\n    });\r\n}\r\n\r\nexport const API_DELETE_INVITE = async (workspaceId: string, id: string) => {\r\n    return await fetch(endpoint + \"/invites/\" + id, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            \"Workspace\": workspaceId,\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\nexport const API_RESEND_INVITE = async (workspaceId: string, id: string) => {\r\n    return await fetch(endpoint + \"/invites/\" + id + \"/resend\", {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Workspace\": workspaceId,\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\n\r\n// PROJECTS\r\n\r\nexport interface API_GET_PROJECTS_RESP {\r\n    projects: IProject[]\r\n}\r\n\r\nexport const API_GET_PROJECTS = async (workspaceId: string) => {\r\n    return await fetch(endpoint + \"/projects\", {\r\n        method: 'GET',\r\n        headers: {\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n    });\r\n}\r\n\r\nexport interface API_GET_PROJECT_RESP {\r\n    project: IProject\r\n    milestones: IMilestone[]\r\n    workflows: IWorkflow[]\r\n    subWorkflows: ISubWorkflow[]\r\n    features: IFeature[]\r\n}\r\n\r\nexport const API_GET_PROJECT = async (workspaceId: string, projectId: string) => {\r\n    return await fetch(endpoint + \"/projects/\" + projectId, {\r\n        method: 'GET',\r\n        headers: {\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n    });\r\n}\r\n\r\n\r\nexport const API_CREATE_PROJECT = async (workspaceId: string, projectId: string, title: string) => {\r\n    return await fetch(endpoint + \"/projects/\" + projectId, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ title })\r\n    });\r\n}\r\n\r\nexport const API_RENAME_PROJECT = async (workspaceId: string, projectId: string, title: string) => {\r\n    return await fetch(endpoint + \"/projects/\" + projectId + \"/rename\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ title })\r\n    });\r\n}\r\n\r\nexport const API_DELETE_PROJECT = async (workspaceId: string, id: string) => {\r\n    return await fetch(endpoint + \"/projects/\" + id, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\nexport const API_UPDATE_PROJECT_DESCRIPTION = async (workspaceId: string, id: string, description: string) => {\r\n    return await fetch(endpoint + \"/projects/\" + id + \"/description\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ description })\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Milestones\r\n\r\nexport const API_CREATE_MILESTONE = async (workspaceId: string, projectId: string, id: string, title: string) => {\r\n    return await fetch(endpoint + \"/milestones/\" + id, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ projectId, title })\r\n    });\r\n}\r\n\r\n\r\nexport const API_MOVE_MILESTONE = async (workspaceId: string, id: string, index: number) => {\r\n    return await fetch(endpoint + \"/milestones/\" + id + \"/move\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ index })\r\n    });\r\n}\r\n\r\n\r\nexport const API_DELETE_MILESTONE = async (workspaceId: string, id: string) => {\r\n    return await fetch(endpoint + \"/milestones/\" + id, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\nexport const API_RENAME_MILESTONE = async (workspaceId: string, id: string, title: string) => {\r\n    return await fetch(endpoint + \"/milestones/\" + id + \"/rename\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ title })\r\n    });\r\n}\r\n\r\nexport const API_UPDATE_MILESTONE_DESCRIPTION = async (workspaceId: string, id: string, description: string) => {\r\n    return await fetch(endpoint + \"/milestones/\" + id + \"/description\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ description })\r\n    });\r\n}\r\n\r\n\r\nexport const API_OPEN_MILESTONE = async (workspaceId: string, id: string) => {\r\n    return await fetch(endpoint + \"/milestones/\" + id + \"/open\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\nexport const API_CLOSE_MILESTONE = async (workspaceId: string, id: string) => {\r\n    return await fetch(endpoint + \"/milestones/\" + id + \"/close\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\nexport const API_CHANGE_MILESTONE_COLOR = async (workspaceId: string, id: string, color: Color) => {\r\n    return await fetch(endpoint + \"/milestones/\" + id + \"/color\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ color })\r\n    });\r\n}\r\n\r\n\r\n// FEATURES \r\n\r\nexport const API_CREATE_FEATURE = async (workspaceId: string, milestoneId: string, subWorkflowId: string, id: string, title: string) => {\r\n    return await fetch(endpoint + \"/features/\" + id, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ milestoneId, subWorkflowId, title })\r\n    });\r\n}\r\n\r\nexport const API_MOVE_FEATURE = async (workspaceId: string, id: string, toSubWorkflowId: string, toMilestoneId: string, index: number) => {\r\n    return await fetch(endpoint + \"/features/\" + id + \"/move\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ toSubWorkflowId, toMilestoneId, index })\r\n    });\r\n}\r\n\r\nexport const API_OPEN_FEATURE = async (workspaceId: string, id: string) => {\r\n    return await fetch(endpoint + \"/features/\" + id + \"/open\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\nexport const API_CLOSE_FEATURE = async (workspaceId: string, id: string) => {\r\n    return await fetch(endpoint + \"/features/\" + id + \"/close\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\nexport const API_DELETE_FEATURE = async (workspaceId: string, id: string) => {\r\n    return await fetch(endpoint + \"/features/\" + id, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\nexport const API_RENAME_FEATURE = async (workspaceId: string, id: string, title: string) => {\r\n    return await fetch(endpoint + \"/features/\" + id + \"/rename\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ title })\r\n    });\r\n}\r\n\r\nexport const API_UPDATE_FEATURE_DESCRIPTION = async (workspaceId: string, id: string, description: string) => {\r\n    return await fetch(endpoint + \"/features/\" + id + \"/description\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ description })\r\n    });\r\n}\r\n\r\nexport const API_CHANGE_FEATURE_COLOR = async (workspaceId: string, id: string, color: Color) => {\r\n    return await fetch(endpoint + \"/features/\" + id + \"/color\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ color })\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n// WORKFLOWS\r\n\r\n\r\nexport const API_CREATE_WORKFLOW = async (workspaceId: string, projectId: string, id: string, title: string) => {\r\n    return await fetch(endpoint + \"/workflows/\" + id, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ projectId, title })\r\n    });\r\n}\r\n\r\n\r\nexport const API_MOVE_WORKFLOW = async (workspaceId: string, id: string, index: number) => {\r\n    return await fetch(endpoint + \"/workflows/\" + id + \"/move\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ index })\r\n    });\r\n}\r\n\r\n\r\nexport const API_DELETE_WORKFLOW = async (workspaceId: string, id: string) => {\r\n    return await fetch(endpoint + \"/workflows/\" + id, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\nexport const API_RENAME_WORKFLOW = async (workspaceId: string, id: string, title: string) => {\r\n    return await fetch(endpoint + \"/workflows/\" + id + \"/rename\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ title })\r\n    });\r\n}\r\n\r\nexport const API_UPDATE_WORKFLOW_DESCRIPTION = async (workspaceId: string, id: string, description: string) => {\r\n    return await fetch(endpoint + \"/workflows/\" + id + \"/description\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ description })\r\n    });\r\n}\r\n\r\nexport const API_CHANGE_WORKFLOW_COLOR = async (workspaceId: string, id: string, color: Color) => {\r\n    return await fetch(endpoint + \"/workflows/\" + id + \"/color\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ color })\r\n    });\r\n}\r\n\r\n\r\n// SUBWORKFLOWS\r\n\r\n\r\nexport const API_CREATE_SUBWORKFLOW = async (workspaceId: string, workflowId: string, id: string, title: string) => {\r\n    return await fetch(endpoint + \"/subworkflows/\" + id, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ workflowId, title })\r\n    });\r\n}\r\n\r\n\r\nexport const API_MOVE_SUBWORKFLOW = async (workspaceId: string, id: string, toWorkflowId: string, index: number) => {\r\n    return await fetch(endpoint + \"/subworkflows/\" + id + \"/move\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ toWorkflowId, index })\r\n    });\r\n}\r\n\r\n\r\nexport const API_DELETE_SUBWORKFLOW = async (workspaceId: string, id: string) => {\r\n    return await fetch(endpoint + \"/subworkflows/\" + id, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include'\r\n    });\r\n}\r\n\r\nexport const API_RENAME_SUBWORKFLOW = async (workspaceId: string, id: string, title: string) => {\r\n    return await fetch(endpoint + \"/subworkflows/\" + id + \"/rename\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ title })\r\n    });\r\n}\r\n\r\nexport const API_UPDATE_SUBWORKFLOW_DESCRIPTION = async (workspaceId: string, id: string, description: string) => {\r\n    return await fetch(endpoint + \"/subworkflows/\" + id + \"/description\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ description })\r\n    });\r\n}\r\n\r\nexport const API_CHANGE_SUBWORKFLOW_COLOR = async (workspaceId: string, id: string, color: Color) => {\r\n    return await fetch(endpoint + \"/subworkflows/\" + id + \"/color\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            \"Workspace\": workspaceId\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ color })\r\n    });\r\n}\r\n\r\n\r\nexport interface API_CONTACT {\r\n    topic: string,\r\n    body: string\r\n    sender: string\r\n}\r\nexport const API_CONTACT = async (data: API_CONTACT) => {\r\n    return await fetch(endpoint + \"/users/contact\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data)\r\n    });\r\n}\r\n","\r\nimport React, { SFC, FunctionComponent } from 'react';\r\n\r\nexport const OldButton: SFC<{ title: string }> = (props) => (\r\n    <div className=\"p-2 flex-no-shrink whitespace-no-wrap  rounded  text-xs  font-bold bg-gray-200 uppercase \">{props.title}</div>\r\n)\r\n\r\n\r\nexport const Button: SFC<{ iconColor?: string, title?: string, small?: boolean, button?: boolean, secondary?: boolean, icon?: string, handleOnClick?: () => void, warning?: boolean, primary?: boolean, submit?: boolean, noborder?: boolean }> = (props) => (\r\n    <button type={(props.submit ? \"submit\" : \"button\")} onClick={props.handleOnClick}>\r\n        <div className={\" flex flex-no-shrink whitespace-no-wrap    font-medium items-center \" + (props.small ? \" p-1 \" : \" p-2 \") + (!props.noborder && \" border \") + (!props.primary && \" text-black  \") + (props.primary && \" text-white bg-green-400  border-green-400 \") + (props.secondary && \" bg-gray-200  border-gray-200 \") + (props.warning && \" border-red-500 text-red-500 font-semibold\")}>\r\n            {props.icon && <div className=\"flex\"><i style={{ fontSize: \"18px\" }} className={\"material-icons \" + (props.iconColor ? props.iconColor : \"\")} > {props.icon}</i ></div>}\r\n            <div className=\"flex ml-1 \">{props.title}</div>\r\n        </div>\r\n    </button>\r\n)\r\n\r\nexport const CardLayout: FunctionComponent<{ title?: string }> = props => {\r\n    return (\r\n        <div className=\"p-3 m-2 max-w-2xl bg-white rounded shadow\">\r\n            {props.title && <h4>{props.title}</h4>}\r\n            <div className=\"text-sm pt-1\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport * as Yup from 'yup';\r\nimport { Formik, FormikActions, FormikProps, Form, Field, FieldProps } from 'formik';\r\nimport { API_LOG_IN_REQ, API_LOG_IN as LoginApi } from '../api'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from '../components/elements';\r\n\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email('Email invalid.')\r\n        .required('Email required.'),\r\n    password: Yup.string()\r\n        .min(6, 'Password minimum 6 characters.')\r\n        .max(200, 'Password maximum 200 characters.')\r\n        .required('Password required.'),\r\n});\r\n\r\ninterface PropsFromState { }\r\ninterface RouterProps extends RouteComponentProps<{\r\n}> { }\r\ninterface PropsFromDispatch { }\r\ninterface SelfProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\nclass LogIn extends Component<Props> {\r\n    render() {\r\n        const { history } = this.props\r\n        return (\r\n            <div className=\"flex p-2  w-full  justify-center items-center flex-col \">\r\n                <div className=\"flex  p-3  max-w-xl w-full   items-center  flex-col  \">\r\n                    <div className=\"flex  p-2 flex-col items-baseline\">\r\n                        <div className=\"p-1 \"><h1 className={\"text-3xl font-medium\"}>Log in to Featmap</h1></div>\r\n                    </div>\r\n                    <div className=\"flex  p-2 flex-col items-baseline\">\r\n                        <div className=\"p-1 \">Enter your <b>email adress</b> and <b>password</b>.</div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Formik\r\n                            initialValues={{ email: '', password: '' }}\r\n                            initialStatus=\"\"\r\n\r\n                            validationSchema={SignupSchema}\r\n\r\n                            onSubmit={(values: API_LOG_IN_REQ, actions: FormikActions<API_LOG_IN_REQ>) => {\r\n                                actions.setStatus(\"\")\r\n                                LoginApi(values)\r\n                                    .then(response => {\r\n                                        if (response.ok) {\r\n                                            response.json().then(data => {\r\n                                                history.push(\"/\")\r\n                                            })\r\n                                        } else {\r\n                                            actions.setStatus(\"Email or password is incorrect.\")\r\n                                        }\r\n                                    })\r\n\r\n\r\n                                actions.setSubmitting(false)\r\n                            }}\r\n                            render={(formikBag: FormikProps<API_LOG_IN_REQ>) => (\r\n                                <Form>\r\n                                    <div className=\"p-1 text-red-500 text-xs font-bold\">{formikBag.status}</div>\r\n\r\n                                    <Field\r\n                                        name=\"email\"\r\n                                        render={({ field, form }: FieldProps<API_LOG_IN_REQ>) => (\r\n                                            <div className=\"flex  flex-row items-baseline\">\r\n                                                <div className=\"flex flex-col w-full\">\r\n                                                    <div><input type=\"text\" {...field} placeholder=\"Email\" id=\"email\" className=\"rounded p-2 border w-64 text-lg\t\"/></div>\r\n                                                    <div className=\"p-1 text-red-500 text-xs font-bold\">{form.touched.email && form.errors.email}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    <Field\r\n                                        name=\"password\"\r\n                                        render={({ field, form }: FieldProps<API_LOG_IN_REQ>) => (\r\n                                            <div className=\"flex flex-row items-baseline\">\r\n\r\n                                                <div className=\"flex flex-col w-full\">\r\n                                                    <div><input type=\"password\" {...field} placeholder=\"Password\" id=\"password\" className=\"rounded p-2 border w-64 text-lg\t\"/></div>\r\n                                                    <div className=\"p-1 text-red-500 text-xs font-bold\">{form.touched.password && form.errors.password}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    <div className=\"flex flex-row  items-baseline justify-center\">\r\n                                        <div className=\"  justify-center\">\r\n                                            <Button primary submit title=\"Log in\"/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </Form>\r\n                            )}\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex  p-2 flex-col \">\r\n                        <div className=\"p-1 text-center\">Not a member? <Link className=\"link\" to=\"/account/signup\">Create an account</Link></div>\r\n                        <div className=\"p-1 text-center \">Forgotten your password? <Link className=\"link\" to=\"/account/reset\">Reset password </Link></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogIn","import React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport * as Yup from 'yup';\r\nimport { Formik, FormikActions, FormikProps, Form, Field, FieldProps } from 'formik';\r\nimport { API_SIGN_UP_REQ, API_SIGN_UP as SignUpApi } from '../api'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from '../components/elements';\r\n\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n    workspaceName: Yup.string()\r\n        .matches(/^[a-z0-9]+$/, \"Lowercase alphanumerics only. Spaces not allowed.\")\r\n        .min(2, 'Minimum 2 characters.')\r\n        .max(200, 'Maximum 200 characters.')\r\n        .required('Required.'),\r\n    name: Yup.string()\r\n        .min(1, 'Minimum 1 characters.')\r\n        .max(200, 'Maximum 200 characters.')\r\n        .required('Required.'),\r\n\r\n    email: Yup.string()\r\n        .email('Invalid email adress.')\r\n        .required('Required.'),\r\n    password: Yup.string()\r\n        .min(6, 'Minimum 6 characters.')\r\n        .max(200, 'Maximum 200 characters.')\r\n        .required('Required.'),\r\n});\r\n\r\ninterface PropsFromState { }\r\ninterface RouterProps extends RouteComponentProps<{\r\n}> { }\r\ninterface PropsFromDispatch { }\r\ninterface SelfProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\nclass SignUp extends Component<Props> {\r\n    render() {\r\n        const { history } = this.props\r\n        return (\r\n            <div className=\"flex p-2  w-full  justify-center items-center flex-col \">\r\n                <div className=\"flex  p-3  max-w-xl w-full   items-center  flex-col  \">\r\n                    <div className=\"flex  p-2 flex-col items-baseline\">\r\n                        <div className=\"p-1 \"><h1 className={\"text-3xl font-medium\"}>Create a Featmap account</h1></div>\r\n                    </div>\r\n                    <div className=\"flex  p-2 flex-col items-baseline\">\r\n                        <div className=\"p-1 \">Enter the name of your <b>workspace</b>,  <b>work email adress</b> and <b>password</b>.</div>\r\n                    </div>\r\n\r\n                    <div className=\"flex max-w-xs\">\r\n                        <Formik\r\n                            initialValues={{ workspaceName: '', name: '', email: '', password: '' }}\r\n\r\n                            validationSchema={SignupSchema}\r\n\r\n                            onSubmit={(values: API_SIGN_UP_REQ, actions: FormikActions<API_SIGN_UP_REQ>) => {\r\n                                SignUpApi(values)\r\n                                    .then(response => {\r\n                                        if (response.ok) {\r\n                                            response.json().then(data => {\r\n                                                history.push(\"/\")\r\n                                            })\r\n                                        } else {\r\n                                            response.json().then(data => {\r\n                                                switch (data.message) {\r\n                                                    case \"email_invalid\": {\r\n                                                        actions.setFieldError(\"email\", \"Email is invalid.\")\r\n                                                        break\r\n                                                    }\r\n                                                    case \"workspace_invalid\": {\r\n                                                        actions.setFieldError(\"workspaceName\", \"Workspace is invalid.\")\r\n                                                        break\r\n                                                    }\r\n                                                    case \"name_invalid\": {\r\n                                                        actions.setFieldError(\"name\", \"Name is invalid.\")\r\n                                                        break\r\n                                                    }\r\n                                                    case \"password_invalid\": {\r\n                                                        actions.setFieldError(\"password\", \"Password is invalid.\")\r\n                                                        break\r\n                                                    }\r\n                                                    case \"email_taken\": {\r\n                                                        actions.setFieldError(\"email\", \"Email is already registered.\")\r\n                                                        break\r\n                                                    }\r\n                                                    case \"workspace_taken\": {\r\n                                                        actions.setFieldError(\"workspaceName\", \"Workspace name is already registrered.\")\r\n                                                        break\r\n                                                    }\r\n                                                    default: {\r\n                                                        break\r\n                                                    }\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    })\r\n\r\n\r\n                                actions.setSubmitting(false)\r\n                            }}\r\n                            render={(formikBag: FormikProps<API_SIGN_UP_REQ>) => (\r\n                                <Form>\r\n                                    {formikBag.status && formikBag.status.msg && <div>{formikBag.status.msg}</div>}\r\n                                    <Field\r\n                                        name=\"workspaceName\"\r\n                                        render={({ field, form }: FieldProps<API_SIGN_UP_REQ>) => (\r\n                                            <div className=\"flex flex-col    items-baseline sm:flex-row\">\r\n                                                <div className=\"text-lg font-bold p-1 whitespace-no-wrap text-right \">featmap.com /</div>\r\n                                                <div className=\" flex flex-col w-full\">\r\n                                                    <div><input type=\"text\" {...field} placeholder=\"workspace name\" id=\"workspaceName\" className=\"rounded p-2 border w-full text-lg\t\"/></div>\r\n                                                    <div className=\"m-1 text-red-500 text-xs font-bold\">{form.touched.workspaceName && form.errors.workspaceName && form.errors.workspaceName}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    <Field\r\n                                        name=\"name\"\r\n                                        render={({ field, form }: FieldProps<API_SIGN_UP_REQ>) => (\r\n                                            <div className=\"flex  flex-row items-baseline\">\r\n                                                <div className=\" flex flex-col w-full\">\r\n                                                    <div><input type=\"text\" {...field} placeholder=\"Name, e.g. John Smith\" id=\"name\" className=\" w-full rounded p-2 border  text-lg\t\"/></div>\r\n                                                    <div className=\"m-1 text-red-500 text-xs font-bold\">{form.touched.name && form.errors.name && form.errors.name}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    <Field\r\n                                        name=\"email\"\r\n                                        render={({ field, form }: FieldProps<API_SIGN_UP_REQ>) => (\r\n                                            <div className=\"flex  flex-row items-baseline\">\r\n\r\n                                                <div className=\"flex flex-col w-full\">\r\n                                                    <div><input type=\"text\" {...field} placeholder=\"Work email\" id=\"email\" className=\"rounded p-2 border w-full text-lg\t\"/></div>\r\n                                                    <div className=\"p-1 text-red-500 text-xs font-bold\">{form.touched.email && form.errors.email && form.errors.email}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    <Field\r\n                                        name=\"password\"\r\n                                        render={({ field, form }: FieldProps<API_SIGN_UP_REQ>) => (\r\n                                            <div className=\"flex flex-row items-baseline\">\r\n                                                <div className=\"flex flex-col w-full\">\r\n                                                    <div><input type=\"password\" {...field} placeholder=\"Password\" id=\"password\" className=\"rounded p-2 border w-full text-lg\t\"/></div>\r\n                                                    <div className=\"p-1 text-red-500 text-xs font-bold\">{form.touched.password && form.errors.password && form.errors.password}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    <div className=\"flex justify-center\">\r\n                                        <Button submit primary title=\"Create account\"/>\r\n                                    </div>\r\n\r\n                                </Form>\r\n                            )}\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex  p-2 flex-col \">\r\n                        <div className=\"p-1 text-center\">Already have an account? <Link className=\"link\" to=\"/account/login\">Login</Link></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp","import { IFeature } from \"./types\";\r\nimport { action } from 'typesafe-actions'\r\n\r\nexport enum ActionTypes {\r\n    CREATE_FEATURE = 'CREATE_FEATURE',\r\n    LOAD_FEATURES = 'LOAD_FEATURES',\r\n    UPDATE_FEATURE = 'UPDATE_FEATURE',\r\n    DELETE_FEATURE = 'DELETE_FEATURE',\r\n    MOVE_FEATURE = 'MOVE_FEATURE'\r\n}\r\n\r\nexport interface createFeature { type: ActionTypes.CREATE_FEATURE, payload: IFeature }\r\nexport const createFeature = (x: IFeature) => action(ActionTypes.CREATE_FEATURE, x)\r\n\r\nexport interface loadFeatures { type: ActionTypes.LOAD_FEATURES, payload: IFeature[] }\r\nexport const loadFeatures = (x: IFeature[]) => action(ActionTypes.LOAD_FEATURES, x)\r\n\r\nexport interface updateFeature { type: ActionTypes.UPDATE_FEATURE, payload: IFeature }\r\nexport const updateFeature = (x: IFeature) => action(ActionTypes.UPDATE_FEATURE, x)\r\n\r\nexport interface deleteFeature { type: ActionTypes.DELETE_FEATURE, payload: string }\r\nexport const deleteFeature = (x: string) => action(ActionTypes.DELETE_FEATURE, x)\r\n\r\ninterface moveFeaturePayload { id: string, toMilestoneId: string, toSubWorkflowId: string, index: number, ts: string, by: string }\r\nexport interface moveFeature { type: ActionTypes.MOVE_FEATURE, payload: moveFeaturePayload }\r\nexport const moveFeature = (x: moveFeaturePayload) => action(ActionTypes.MOVE_FEATURE, x)\r\n\r\nexport type Actions = createFeature | loadFeatures | updateFeature | deleteFeature | moveFeature","import React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { API_LOG_OUT } from '../api';\r\nimport { resetApp } from '../store/application/actions'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapDispatchToProps = {\r\n    resetApp: resetApp\r\n}\r\n\r\ninterface PropsFromState { }\r\ninterface RouterProps extends RouteComponentProps<{\r\n}> { }\r\ninterface PropsFromDispatch {\r\n    resetApp: typeof resetApp\r\n}\r\ninterface SelfProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\nclass LogoutPage extends Component<Props> {\r\n    componentDidMount() {\r\n        API_LOG_OUT().then(resp => {\r\n            if (resp.ok) {\r\n                this.props.resetApp()\r\n                this.props.history.push(\"/\")\r\n            }\r\n        }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return <div/>\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LogoutPage)","import React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { API_VERIFY_EMAIL } from '../api'\r\n\r\ninterface PropsFromState { }\r\ninterface RouterProps extends RouteComponentProps<{\r\n    key: string\r\n}> { }\r\ninterface PropsFromDispatch { }\r\ninterface SelfProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n    ok: boolean\r\n}\r\n\r\nclass VerifyEmailPage extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            ok: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        API_VERIFY_EMAIL(this.props.match.params.key).then(response => {\r\n            if (response.ok) {\r\n                this.setState({ ok: true })\r\n            }\r\n        }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return this.state.ok ?\r\n            <div className=\"p-2\">\r\n                <em>Email adress verified!</em>\r\n                <br /><br />\r\n                <Link className=\"link\" to=\"/\">Back to Featmap</Link>\r\n            </div>\r\n            :\r\n            \"Something went wrong\"\r\n    }\r\n}\r\n\r\nexport default VerifyEmailPage","import React, { Component } from 'react';\r\nimport onClickOutside from \"react-onclickoutside\";\r\n\r\ninterface Props {\r\n  icon: string\r\n  night?: boolean\r\n}\r\n\r\ninterface State {\r\n  expand: boolean\r\n}\r\n\r\nclass ContextMenu extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      expand: false\r\n    }\r\n  }\r\n\r\n  handleClickOutside = () => {\r\n    if (this.state.expand) {\r\n      this.setState({ expand: false })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"relative\">\r\n          <div className=\"flex items-center \">\r\n            <button onClick={() => this.setState((state) => { return { expand: !state.expand } })} className=\"flex text-sm p-1 rounded font-semibold \">\r\n              <i className={\"material-icons \" + (this.props.night ? \"text-white\" : \"\")}>{this.props.icon}</i>\r\n            </button>\r\n          </div>\r\n          <div onClick={() => this.setState((state) => { return { expand: !state.expand } })}>\r\n            {this.state.expand ?\r\n              <div>{this.props.children}</div>\r\n              :\r\n              \"\"\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default onClickOutside(ContextMenu);\r\n\r\n","import React, { Component } from 'react';\r\nimport { IAccount } from '../store/application/types';\r\nimport { Link } from 'react-router-dom'\r\nimport ContextMenu from './ContextMenu';\r\n\r\n\r\ninterface Props {\r\n  account: IAccount\r\n  workspaceName?: string\r\n}\r\n\r\ninterface State {\r\n  expand: false\r\n}\r\n\r\n\r\nclass Header extends Component<Props> {\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"bg-gray-200\">\r\n        <div className=\"flex items-center p-1 \">\r\n          <div className=\"flex text-lg   m-1 w-24 \">\r\n            <b><Link to=\"/\">Featmap</Link></b>\r\n\r\n          </div>\r\n          {this.props.workspaceName ?\r\n            <div className=\"text-sm \"><Link to={\"/\" + this.props.workspaceName}>Projects</Link></div>\r\n            :\r\n            null\r\n          }\r\n\r\n          <div className=\"flex flex-grow justify-end   \">\r\n            <div className=\"flex p-1  rounded items-center \">\r\n              <ContextMenu icon=\"account_circle\" >\r\n                <div className=\"rounded bg-white shadow-md absolute mt-8 top-0 right-0 min-w-full text-sm\" >\r\n                  <ul className=\"list-reset\">\r\n                    {this.props.workspaceName ?\r\n                      <li className=\"whitespace-no-wrap px-4 py-2 block text-gray-600\">\r\n                        Current workspace:  <b><Link to={\"/\" + this.props.workspaceName}>{this.props.workspaceName}</Link> </b> <Link className=\"p-1 flex-no-shrink font-bold rounded text-xs  bg-gray-300\" to=\"/account/workspaces\">Change </Link>\r\n                      </li>\r\n                      : null\r\n                    }\r\n                    {this.props.workspaceName ?\r\n                      <li className=\"whitespace-no-wrap px-4 py-2 block text-black hover:bg-gray-200 \">\r\n                        <Link to={\"/\" + this.props.workspaceName + \"/settings\"} >Workspace settings</Link>\r\n                      </li>\r\n                      : null\r\n                    }\r\n                    <li className=\"whitespace-no-wrap px-4 py-2 block text-black \">\r\n                      <Link to={\"/account/workspaces\"} >My workspaces</Link>\r\n                    </li>\r\n                    <li className=\"whitespace-no-wrap block text-black \">\r\n                      <hr className=\"border-b\"/>\r\n                    </li>\r\n                    <li className=\"whitespace-no-wrap px-4 py-2 block text-gray-600\">\r\n                      Logged in as <em>{this.props.account.email}</em>\r\n                    </li>\r\n\r\n                    <li ><Link className=\"whitespace-no-wrap px-4 py-2 block text-black hover:bg-gray-200\" to=\"/account/settings\">Account settings</Link> </li>\r\n                    <li ><Link className=\"whitespace-no-wrap px-4 py-2 block text-black hover:bg-gray-200\" to=\"/account/logout\">Log out</Link> </li>\r\n                  </ul>\r\n                </div>\r\n\r\n              </ContextMenu>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component, Dispatch } from 'react';\r\nimport { Button, CardLayout } from '../components/elements'\r\nimport Header from '../components/Header';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { AppState, AllActions } from '../store'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Formik, FormikActions, FormikProps, Form, Field, FieldProps } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { API_CHANGE_EMAIL_REQ, API_CHANGE_EMAIL, API_RESEND_EMAIL, API_CHANGE_NAME, API_CHANGE_NAME_REQ, API_DELETE_ACCOUNT } from '../api'\r\nimport { newMessage } from '../store/application/actions';\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AllActions>) => ({\r\n    newMessage: newMessage(dispatch)\r\n})\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n    state: state\r\n})\r\n\r\ninterface PropsFromState {\r\n    state: AppState\r\n}\r\ninterface RouterProps extends RouteComponentProps<{\r\n}> { }\r\ninterface PropsFromDispatch {\r\n    newMessage: ReturnType<typeof newMessage>\r\n}\r\ninterface OwnProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & OwnProps\r\n\r\ninterface State {\r\n    reallySureWarning: boolean\r\n}\r\n\r\nclass WorkspacesPage extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = { reallySureWarning: false }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header account={this.props.state.application.application.account!}/>\r\n                <div >\r\n                    <h3 className=\"p-2\">Account settings</h3>\r\n\r\n                    {this.props.state.application.application.account!.emailConfirmationPending &&\r\n                        <CardLayout title=\"\">\r\n                            <span className=\"text-red-500 text-xl\">⬤</span> <em>Email adress verfication missing</em>\r\n                            <hr/>\r\n                            <p> A mail has been sent to  <i>{this.props.state.application.application.account!.emailConfirmationSentTo}</i>, but we have not yet received verfication. </p>\r\n                            <hr/>\r\n\r\n                            <Formik\r\n                                initialValues={{}}\r\n                                initialStatus=\"\"\r\n\r\n                                onSubmit={(values: {}, actions: FormikActions<{}>) => {\r\n                                    actions.setStatus(\"\")\r\n                                    API_RESEND_EMAIL()\r\n                                        .then(response => {\r\n                                            if (response.ok) {\r\n                                                actions.setStatus(\"Mail sent.\")\r\n                                            } else {\r\n                                                actions.setStatus(\"Something went wrong.\")\r\n                                            }\r\n                                        })\r\n\r\n\r\n                                    actions.setSubmitting(false)\r\n                                }}\r\n                                render={(formikBag: FormikProps<{}>) => (\r\n                                    <Form>\r\n                                        <Field\r\n                                            name=\"email\"\r\n                                            render={({ field, form }: FieldProps<{}>) => (\r\n                                                <div>\r\n                                                    <div className=\"flex  flex-row items-baseline\">\r\n                                                        <div className=\" w-full text-xs\"><Button submit secondary title=\"Resend email\" /></div>\r\n                                                    </div>\r\n                                                    <div className=\"p-1 text-xs font-bold\">{formikBag.status}</div>\r\n                                                </div>\r\n                                            )}\r\n                                        />\r\n                                    </Form>\r\n                                )}\r\n                            />\r\n                        </CardLayout>\r\n                    }\r\n\r\n\r\n                    <CardLayout title=\"Email adress\">\r\n                        <p>Your email adress is {this.props.state.application.application.account!.email}</p>\r\n\r\n                        {this.props.state.application.application.account!.emailConfirmed ?\r\n                            <p><span className=\"text-green-500 text-xl \">⬤</span> The email adress is verified.. </p>\r\n                            :\r\n                            <p><span className=\"text-red-500 text-xl\">⬤</span> <em>The email adress is not verified.</em> </p>\r\n                        }\r\n\r\n                        <hr/>\r\n                        <div className=\"flex flex-row items-baseline\">\r\n                            <Formik\r\n                                initialValues={{ email: '' }}\r\n                                initialStatus=\"\"\r\n\r\n                                validationSchema={Yup.object().shape({\r\n                                    email: Yup.string()\r\n                                        .email('Invalid email adress.')\r\n                                        .required('Required.')\r\n                                })}\r\n\r\n                                onSubmit={(values: API_CHANGE_EMAIL_REQ, actions: FormikActions<API_CHANGE_EMAIL_REQ>) => {\r\n                                    actions.setStatus(\"\")\r\n                                    API_CHANGE_EMAIL(values)\r\n                                        .then(response => {\r\n                                            if (response.ok) {\r\n                                                actions.setStatus(\"An email has been sent to your new email with instructions.\")\r\n                                            } else {\r\n                                                actions.setStatus(\"Something went wrong.\")\r\n                                            }\r\n                                        })\r\n\r\n\r\n                                    actions.setSubmitting(false)\r\n                                }}\r\n                                render={(formikBag: FormikProps<API_CHANGE_EMAIL_REQ>) => (\r\n                                    <Form>\r\n                                        <Field\r\n                                            name=\"email\"\r\n                                            render={({ field, form }: FieldProps<API_CHANGE_EMAIL_REQ>) => (\r\n                                                <div className=\" \">\r\n                                                    <div className=\"flex  flex-row items-baseline\">\r\n\r\n                                                        <div className=\"flex flex-col w-full mr-1\">\r\n                                                            <div><input type=\"text\" {...field} placeholder=\"email\" id=\"email\" className=\"rounded p-1 border  \t\"/></div>\r\n                                                        </div>\r\n                                                        <span className=\"text-xs\"><Button submit title=\"Change email\" secondary small/></span>\r\n\r\n                                                    </div>\r\n                                                    <div className=\"p-1 text-red-500 text-xs font-bold\">{form.touched.email && form.errors.email}</div>\r\n\r\n                                                    <div className=\"p-1 text-xs font-bold\">{formikBag.status}</div>\r\n                                                </div>\r\n                                            )}\r\n                                        />\r\n                                    </Form>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                    </CardLayout>\r\n\r\n                    <CardLayout title=\"Name\">\r\n\r\n                        <p>Your name is {this.props.state.application.application.account!.name}. </p>\r\n\r\n                        <hr/>\r\n                        <div className=\"flex flex-row items-baseline\">\r\n                            <Formik\r\n                                initialValues={{ name: this.props.state.application.application.account!.name }}\r\n                                initialStatus=\"\"\r\n\r\n                                validationSchema={Yup.object().shape({\r\n                                    name: Yup.string()\r\n                                        .min(1, 'Minimum 1 characters.')\r\n                                        .max(200, 'Maximum 200 characters.')\r\n                                        .required('Required.'),\r\n                                })}\r\n\r\n                                onSubmit={(values: API_CHANGE_NAME_REQ, actions: FormikActions<API_CHANGE_NAME_REQ>) => {\r\n                                    actions.setStatus(\"\")\r\n                                    API_CHANGE_NAME(values)\r\n                                        .then(response => {\r\n                                            if (response.ok) {\r\n                                                actions.setStatus(\"Names is changed. Refresh your browser for it to take effect.\")\r\n                                            } else {\r\n                                                actions.setStatus(\"Something went wrong.\")\r\n                                            }\r\n                                        })\r\n\r\n\r\n                                    actions.setSubmitting(false)\r\n                                }}\r\n                                render={(formikBag: FormikProps<API_CHANGE_NAME_REQ>) => (\r\n                                    <Form>\r\n                                        <Field\r\n                                            name=\"name\"\r\n                                            render={({ field, form }: FieldProps<API_CHANGE_NAME_REQ>) => (\r\n                                                <div className=\" \">\r\n                                                    <div className=\"flex  flex-row items-center\">\r\n\r\n                                                        <div className=\"flex flex-col w-full mr-1\">\r\n                                                            <div><input type=\"text\" {...field} placeholder=\"name\" id=\"name\" className=\"rounded p-1 border \t\"/></div>\r\n                                                        </div>\r\n                                                        <div className=\" text-xs w-full\">\r\n                                                            <Button submit title=\"Change name\" secondary small />\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                    <div className=\"p-1 text-red-500 text-xs font-bold\">{form.touched.name && form.errors.name}</div>\r\n\r\n                                                    <div className=\"p-1 text-xs font-bold\">{formikBag.status}</div>\r\n                                                </div>\r\n                                            )}\r\n                                        />\r\n                                    </Form>\r\n                                )}\r\n                            />\r\n                        </div>\r\n\r\n                    </CardLayout>\r\n\r\n                    <CardLayout title=\"Password\">\r\n                        <p>To change your password, initiate a <Link className=\"link\" to={\"/account/reset?email=\" + this.props.state.application.application.account!.email}  >password reset</Link>.</p>\r\n                    </CardLayout>\r\n\r\n                    <CardLayout title=\"Delete account\">\r\n                        <p>By deleting your account, all your workspace memberships will be permanently deleted.</p>\r\n                        <Formik\r\n                            initialValues={{}}\r\n                            onSubmit={(values: {}, actions: FormikActions<{}>) => {\r\n                                API_DELETE_ACCOUNT()\r\n                                    .then((response) => {\r\n                                        if (response.ok) {\r\n                                            window.location.href = \"/\";\r\n                                        }\r\n                                        else {\r\n                                            response.json().then((data: any) => {\r\n                                                // noinspection JSIgnoredPromiseFromCall\r\n                                                this.props.newMessage('fail', data.message)\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                    )\r\n                            }}\r\n\r\n                            render={(formikBag: FormikProps<{}>) => (\r\n                                <Form>\r\n                                    <p className=\"text-xs\"><Button secondary button handleOnClick={() => this.setState({ reallySureWarning: true })} title=\"Delete account\" /> {this.state.reallySureWarning && <Button submit warning title=\"Yes, I am really sure!\" />} </p>\r\n                                </Form>\r\n                            )}\r\n                        />\r\n\r\n                    </CardLayout>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkspacesPage); ","import { AppState } from '..'\r\nimport { createSelector } from 'reselect'\r\nimport { IApplication } from './types';\r\n\r\nconst getApplicationState = ((state: AppState) => state.application)\r\n\r\nexport const application = createSelector([getApplicationState], s => {\r\n    return s.application\r\n})\r\n\r\nexport const getWorkspaceByName = (s: IApplication, name: string) => s.workspaces.find(x => x.name === name)\r\nexport const getMembership = (s: IApplication, workspaceId: string) => s.memberships.find(x => x.workspaceId === workspaceId)!\r\nexport const getSubscription = (s: IApplication, workspaceId: string) => s.subscriptions.find(x => x.workspaceId === workspaceId)!\r\nexport const getAccount = (s: IApplication) => s.account!\r\n","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"p-2\">Page not found</div>\r\n        );\r\n    }\r\n}\r\nexport default NotFound; ","import React, { Component } from 'react';\r\n\r\nclass EmptyCard extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"p-1 w-32 h-16  \">\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmptyCard;\r\n","import { IMilestone } from \"./types\";\r\nimport { action } from 'typesafe-actions'\r\n\r\nexport enum ActionTypes {\r\n    CREATE_MILESTONE = 'CREATE_MILESTONE',\r\n    LOAD_MILESTONES = 'LOAD_MILESTONE',\r\n    UPDATE_MILESTONE = 'UPDATE_MILESTONE',\r\n    DELETE_MILESTONE = 'DELETE_MILESTONE',\r\n    MOVE_MILESTONE = 'MOVE_MILESTONE',\r\n}\r\n\r\nexport interface createMilestone { type: ActionTypes.CREATE_MILESTONE, payload: IMilestone }\r\nexport const createMilestone = (x: IMilestone) => action(ActionTypes.CREATE_MILESTONE, x)\r\n\r\nexport interface loadMilestones { type: ActionTypes.LOAD_MILESTONES, payload: IMilestone[] }\r\nexport const loadMilestones = (x: IMilestone[]) => action(ActionTypes.LOAD_MILESTONES, x)\r\n\r\nexport interface updateMilestone { type: ActionTypes.UPDATE_MILESTONE, payload: IMilestone }\r\nexport const updateMilestone = (x: IMilestone) => action(ActionTypes.UPDATE_MILESTONE, x)\r\n\r\nexport interface deleteMilestone { type: ActionTypes.DELETE_MILESTONE, payload: string }\r\nexport const deleteMilestone = (x: string) => action(ActionTypes.DELETE_MILESTONE, x)\r\n\r\ninterface moveMilestonePayload { id: string, index: number, ts: string, by: string }\r\nexport interface moveMilestone { type: ActionTypes.MOVE_MILESTONE, payload: moveMilestonePayload }\r\nexport const moveMilestone = (x: moveMilestonePayload) => action(ActionTypes.MOVE_MILESTONE, x)\r\n\r\nexport type Actions = createMilestone | loadMilestones | updateMilestone | deleteMilestone | moveMilestone\r\n\r\n\r\n\r\n\r\n\r\n","import { IWorkflow } from \"./types\";\r\nimport { action } from 'typesafe-actions'\r\n\r\nexport enum ActionTypes {\r\n    CREATE_WORKFLOW = 'CREATE_WORKFLOW',\r\n    LOAD_WORKFLOWS = 'LOAD_WORKFLOWS',\r\n    UPDATE_WORKFLOW = 'UPDATE_WORKFLOW',\r\n    DELETE_WORKFLOW = 'DELETE_WORKFLOW',\r\n    MOVE_WORKFLOW = 'MOVE_WORKFLOW',\r\n}\r\n\r\nexport interface createWorkflow { type: ActionTypes.CREATE_WORKFLOW, payload: IWorkflow }\r\nexport const createWorkflow = (x: IWorkflow) => action(ActionTypes.CREATE_WORKFLOW, x)\r\n\r\nexport interface loadWorkflows { type: ActionTypes.LOAD_WORKFLOWS, payload: IWorkflow[] }\r\nexport const loadWorkflows = (x: IWorkflow[]) => action(ActionTypes.LOAD_WORKFLOWS, x)\r\n\r\nexport interface updateWorkflow { type: ActionTypes.UPDATE_WORKFLOW, payload: IWorkflow }\r\nexport const updateWorkflow = (x: IWorkflow) => action(ActionTypes.UPDATE_WORKFLOW, x)\r\n\r\nexport interface deleteWorkflow { type: ActionTypes.DELETE_WORKFLOW, payload: string }\r\nexport const deleteWorkflow = (x: string) => action(ActionTypes.DELETE_WORKFLOW, x)\r\n\r\ninterface moveWorkflowPayload { id: string, index: number, ts: string, by: string }\r\nexport interface moveWorkflow { type: ActionTypes.MOVE_WORKFLOW, payload: moveWorkflowPayload }\r\nexport const moveWorkflow = (x: moveWorkflowPayload) => action(ActionTypes.MOVE_WORKFLOW, x)\r\n\r\nexport type Actions = createWorkflow | loadWorkflows | updateWorkflow | deleteWorkflow | moveWorkflow\r\n\r\n\r\n\r\n\r\n\r\n","import { ISubWorkflow } from \"./types\";\r\nimport { action } from 'typesafe-actions'\r\n\r\nexport enum ActionTypes {\r\n    CREATE_SUBWORKFLOW = 'CREATE_SUBWORKFLOW',\r\n    LOAD_SUBWORKFLOWS = 'LOAD_SUBWORKFLOWS',\r\n    UPDATE_SUBWORKFLOW = 'UPDATE_SUBWORKFLOW',\r\n    DELETE_SUBWORKFLOW = 'DELETE_SUBWORKFLOW',\r\n    MOVE_SUBWORKFLOW = 'MOVE_SUBWORKFLOW',\r\n}\r\n\r\nexport interface createSubWorkflow { type: ActionTypes.CREATE_SUBWORKFLOW, payload: ISubWorkflow }\r\nexport const createSubWorkflow = (x: ISubWorkflow) => action(ActionTypes.CREATE_SUBWORKFLOW, x)\r\n\r\nexport interface loadSubWorkflows { type: ActionTypes.LOAD_SUBWORKFLOWS, payload: ISubWorkflow[] }\r\nexport const loadSubWorkflows = (x: ISubWorkflow[]) => action(ActionTypes.LOAD_SUBWORKFLOWS, x)\r\n\r\nexport interface updateSubWorkflow { type: ActionTypes.UPDATE_SUBWORKFLOW, payload: ISubWorkflow }\r\nexport const updateSubWorkflow = (x: ISubWorkflow) => action(ActionTypes.UPDATE_SUBWORKFLOW, x)\r\n\r\nexport interface deleteSubWorkflow { type: ActionTypes.DELETE_SUBWORKFLOW, payload: string }\r\nexport const deleteSubWorkflow = (x: string) => action(ActionTypes.DELETE_SUBWORKFLOW, x)\r\n\r\ninterface moveSubWorkflowPayload { id: string, toWorkflowId: string, index: number, ts: string, by: string }\r\nexport interface moveSubWorkflow { type: ActionTypes.MOVE_SUBWORKFLOW, payload: moveSubWorkflowPayload }\r\nexport const moveSubWorkflow = (x: moveSubWorkflowPayload) => action(ActionTypes.MOVE_SUBWORKFLOW, x)\r\n\r\nexport type Actions = createSubWorkflow | loadSubWorkflows | updateSubWorkflow | deleteSubWorkflow | moveSubWorkflow","\r\n\r\nexport enum Roles {\r\n    VIEWER = \"VIEWER\",\r\n    EDITOR = \"EDITOR\",\r\n    ADMIN = \"ADMIN\",\r\n    OWNER = \"OWNER\",\r\n}\r\n\r\nexport enum SubscriptionLevels {\r\n    TRIAL = \"TRIAL\",\r\n    BASIC = \"BASIC\",\r\n    PRO = \"PRO\",\r\n}\r\n\r\nexport const isEditor = (level: Roles) => {\r\n    return level === Roles.EDITOR || level === Roles.ADMIN || level === Roles.OWNER\r\n}\r\n\r\n\r\n\r\nexport const daysBetween = (fromDate: Date, toDate: Date) => {\r\n    const oneDay = 24 * 60 * 60 * 1000\r\n    return Math.round(Math.abs((fromDate.getTime() - toDate.getTime()) / (oneDay)));\r\n}\r\n\r\n\r\n\r\n\r\nexport enum CardStatus {\r\n    OPEN = \"OPEN\",\r\n    CLOSED = \"CLOSED\"\r\n}\r\n\r\n\r\nexport const subscriptionLevelToText = (level: SubscriptionLevels) => {\r\n    switch (level) {\r\n        case SubscriptionLevels.TRIAL: {\r\n            return \"Trial\"\r\n        }\r\n        case SubscriptionLevels.BASIC: {\r\n            return \"Basic\"\r\n        }\r\n        case SubscriptionLevels.PRO: {\r\n            return \"Pro\"\r\n        }\r\n\r\n        default: {\r\n            return \"Default\"\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const memberLevelToTitle = (level: string) => {\r\n    switch (level) {\r\n        case \"VIEWER\":\r\n            return \"Viewer\"\r\n        case \"EDITOR\":\r\n            return \"Editor\"\r\n        case \"ADMIN\":\r\n            return \"Admin\"\r\n        case \"OWNER\":\r\n            return \"Owner\"\r\n        default:\r\n            return \"\"\r\n    }\r\n}\r\n\r\nexport enum Color {\r\n    NONE = \"\",\r\n    WHITE = \"WHITE\",\r\n    GREY = \"GREY\",\r\n    RED = \"RED\",\r\n    ORANGE = \"ORANGE\",\r\n    YELLOW = \"YELLOW\",\r\n    GREEN = \"GREEN\",\r\n    TEAL = \"TEAL\",\r\n    BLUE = \"BLUE\",\r\n    INDIGO = \"INDIGO\",\r\n    PURPLE = \"PURPLE\",\r\n    PINK = \"PINK\"\r\n}\r\n\r\nexport const Colors = new Array<Color>(\r\n    Color.WHITE,\r\n    Color.GREY,\r\n    Color.RED,\r\n    Color.ORANGE,\r\n    Color.YELLOW,\r\n    Color.GREEN,\r\n    Color.TEAL,\r\n    Color.BLUE,\r\n    Color.INDIGO,\r\n    Color.PURPLE,\r\n    Color.PINK,\r\n);\r\n\r\n\r\nexport const colorToBackgroundColorClass = (color: Color) => {\r\n    switch (color) {\r\n        case Color.WHITE:\r\n            return \"bg-white\"\r\n        case Color.GREY:\r\n            return \"bg-gray-500\"\r\n        case Color.RED:\r\n            return \"bg-red-400\"\r\n        case Color.ORANGE:\r\n            return \"bg-orange-400\"\r\n        case Color.YELLOW:\r\n            return \"bg-yellow-500\"\r\n        case Color.GREEN:\r\n            return \"bg-green-400\"\r\n        case Color.TEAL:\r\n            return \"bg-teal-400\"\r\n        case Color.BLUE:\r\n            return \"bg-blue-400\"\r\n        case Color.INDIGO:\r\n            return \"bg-indigo-400\"\r\n        case Color.PURPLE:\r\n            return \"bg-purple-400\"\r\n        case Color.PINK:\r\n            return \"bg-pink-400\"\r\n        case Color.NONE:\r\n            return \"bg-white\"\r\n        default:\r\n            return \"bg-white\"\r\n    }\r\n}\r\n\r\nexport const colorToBorderColorClass = (color: Color) => {\r\n    switch (color) {\r\n        case Color.WHITE:\r\n            return \"border-gray-500\"\r\n        case Color.GREY:\r\n            return \"border-gray-500\"\r\n        case Color.RED:\r\n            return \"border-red-400\"\r\n        case Color.ORANGE:\r\n            return \"border-orange-400\"\r\n        case Color.YELLOW:\r\n            return \"border-yellow-500\"\r\n        case Color.GREEN:\r\n            return \"border-green-400\"\r\n        case Color.TEAL:\r\n            return \"border-teal-400\"\r\n        case Color.BLUE:\r\n            return \"border-blue-400\"\r\n        case Color.INDIGO:\r\n            return \"border-indigo-400\"\r\n        case Color.PURPLE:\r\n            return \"border-purple-400\"\r\n        case Color.PINK:\r\n            return \"border-pink-400\"\r\n        case Color.NONE:\r\n            return \"border-gray-500\"\r\n        default:\r\n            return \"border-gray-500\"\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const countries = [\r\n    {\r\n        \"Name\": \"Afghanistan\",\r\n        \"Code\": \"AF\"\r\n    },\r\n    {\r\n        \"Name\": \"Åland Islands\",\r\n        \"Code\": \"AX\"\r\n    },\r\n    {\r\n        \"Name\": \"Albania\",\r\n        \"Code\": \"AL\"\r\n    },\r\n    {\r\n        \"Name\": \"Algeria\",\r\n        \"Code\": \"DZ\"\r\n    },\r\n    {\r\n        \"Name\": \"American Samoa\",\r\n        \"Code\": \"AS\"\r\n    },\r\n    {\r\n        \"Name\": \"Andorra\",\r\n        \"Code\": \"AD\"\r\n    },\r\n    {\r\n        \"Name\": \"Angola\",\r\n        \"Code\": \"AO\"\r\n    },\r\n    {\r\n        \"Name\": \"Anguilla\",\r\n        \"Code\": \"AI\"\r\n    },\r\n    {\r\n        \"Name\": \"Antarctica\",\r\n        \"Code\": \"AQ\"\r\n    },\r\n    {\r\n        \"Name\": \"Antigua and Barbuda\",\r\n        \"Code\": \"AG\"\r\n    },\r\n    {\r\n        \"Name\": \"Argentina\",\r\n        \"Code\": \"AR\"\r\n    },\r\n    {\r\n        \"Name\": \"Armenia\",\r\n        \"Code\": \"AM\"\r\n    },\r\n    {\r\n        \"Name\": \"Aruba\",\r\n        \"Code\": \"AW\"\r\n    },\r\n    {\r\n        \"Name\": \"Australia\",\r\n        \"Code\": \"AU\"\r\n    },\r\n    {\r\n        \"Name\": \"Austria\",\r\n        \"Code\": \"AT\"\r\n    },\r\n    {\r\n        \"Name\": \"Azerbaijan\",\r\n        \"Code\": \"AZ\"\r\n    },\r\n    {\r\n        \"Name\": \"Bahamas\",\r\n        \"Code\": \"BS\"\r\n    },\r\n    {\r\n        \"Name\": \"Bahrain\",\r\n        \"Code\": \"BH\"\r\n    },\r\n    {\r\n        \"Name\": \"Bangladesh\",\r\n        \"Code\": \"BD\"\r\n    },\r\n    {\r\n        \"Name\": \"Barbados\",\r\n        \"Code\": \"BB\"\r\n    },\r\n    {\r\n        \"Name\": \"Belarus\",\r\n        \"Code\": \"BY\"\r\n    },\r\n    {\r\n        \"Name\": \"Belgium\",\r\n        \"Code\": \"BE\"\r\n    },\r\n    {\r\n        \"Name\": \"Belize\",\r\n        \"Code\": \"BZ\"\r\n    },\r\n    {\r\n        \"Name\": \"Benin\",\r\n        \"Code\": \"BJ\"\r\n    },\r\n    {\r\n        \"Name\": \"Bermuda\",\r\n        \"Code\": \"BM\"\r\n    },\r\n    {\r\n        \"Name\": \"Bhutan\",\r\n        \"Code\": \"BT\"\r\n    },\r\n    {\r\n        \"Name\": \"Bolivia, Plurinational State of\",\r\n        \"Code\": \"BO\"\r\n    },\r\n    {\r\n        \"Name\": \"Bonaire, Sint Eustatius and Saba\",\r\n        \"Code\": \"BQ\"\r\n    },\r\n    {\r\n        \"Name\": \"Bosnia and Herzegovina\",\r\n        \"Code\": \"BA\"\r\n    },\r\n    {\r\n        \"Name\": \"Botswana\",\r\n        \"Code\": \"BW\"\r\n    },\r\n    {\r\n        \"Name\": \"Bouvet Island\",\r\n        \"Code\": \"BV\"\r\n    },\r\n    {\r\n        \"Name\": \"Brazil\",\r\n        \"Code\": \"BR\"\r\n    },\r\n    {\r\n        \"Name\": \"British Indian Ocean Territory\",\r\n        \"Code\": \"IO\"\r\n    },\r\n    {\r\n        \"Name\": \"Brunei Darussalam\",\r\n        \"Code\": \"BN\"\r\n    },\r\n    {\r\n        \"Name\": \"Bulgaria\",\r\n        \"Code\": \"BG\"\r\n    },\r\n    {\r\n        \"Name\": \"Burkina Faso\",\r\n        \"Code\": \"BF\"\r\n    },\r\n    {\r\n        \"Name\": \"Burundi\",\r\n        \"Code\": \"BI\"\r\n    },\r\n    {\r\n        \"Name\": \"Cambodia\",\r\n        \"Code\": \"KH\"\r\n    },\r\n    {\r\n        \"Name\": \"Cameroon\",\r\n        \"Code\": \"CM\"\r\n    },\r\n    {\r\n        \"Name\": \"Canada\",\r\n        \"Code\": \"CA\"\r\n    },\r\n    {\r\n        \"Name\": \"Cape Verde\",\r\n        \"Code\": \"CV\"\r\n    },\r\n    {\r\n        \"Name\": \"Cayman Islands\",\r\n        \"Code\": \"KY\"\r\n    },\r\n    {\r\n        \"Name\": \"Central African Republic\",\r\n        \"Code\": \"CF\"\r\n    },\r\n    {\r\n        \"Name\": \"Chad\",\r\n        \"Code\": \"TD\"\r\n    },\r\n    {\r\n        \"Name\": \"Chile\",\r\n        \"Code\": \"CL\"\r\n    },\r\n    {\r\n        \"Name\": \"China\",\r\n        \"Code\": \"CN\"\r\n    },\r\n    {\r\n        \"Name\": \"Christmas Island\",\r\n        \"Code\": \"CX\"\r\n    },\r\n    {\r\n        \"Name\": \"Cocos (Keeling) Islands\",\r\n        \"Code\": \"CC\"\r\n    },\r\n    {\r\n        \"Name\": \"Colombia\",\r\n        \"Code\": \"CO\"\r\n    },\r\n    {\r\n        \"Name\": \"Comoros\",\r\n        \"Code\": \"KM\"\r\n    },\r\n    {\r\n        \"Name\": \"Congo\",\r\n        \"Code\": \"CG\"\r\n    },\r\n    {\r\n        \"Name\": \"Congo, the Democratic Republic of the\",\r\n        \"Code\": \"CD\"\r\n    },\r\n    {\r\n        \"Name\": \"Cook Islands\",\r\n        \"Code\": \"CK\"\r\n    },\r\n    {\r\n        \"Name\": \"Costa Rica\",\r\n        \"Code\": \"CR\"\r\n    },\r\n    {\r\n        \"Name\": \"Côte d'Ivoire\",\r\n        \"Code\": \"CI\"\r\n    },\r\n    {\r\n        \"Name\": \"Croatia\",\r\n        \"Code\": \"HR\"\r\n    },\r\n    {\r\n        \"Name\": \"Cuba\",\r\n        \"Code\": \"CU\"\r\n    },\r\n    {\r\n        \"Name\": \"Curaçao\",\r\n        \"Code\": \"CW\"\r\n    },\r\n    {\r\n        \"Name\": \"Cyprus\",\r\n        \"Code\": \"CY\"\r\n    },\r\n    {\r\n        \"Name\": \"Czech Republic\",\r\n        \"Code\": \"CZ\"\r\n    },\r\n    {\r\n        \"Name\": \"Denmark\",\r\n        \"Code\": \"DK\"\r\n    },\r\n    {\r\n        \"Name\": \"Djibouti\",\r\n        \"Code\": \"DJ\"\r\n    },\r\n    {\r\n        \"Name\": \"Dominica\",\r\n        \"Code\": \"DM\"\r\n    },\r\n    {\r\n        \"Name\": \"Dominican Republic\",\r\n        \"Code\": \"DO\"\r\n    },\r\n    {\r\n        \"Name\": \"Ecuador\",\r\n        \"Code\": \"EC\"\r\n    },\r\n    {\r\n        \"Name\": \"Egypt\",\r\n        \"Code\": \"EG\"\r\n    },\r\n    {\r\n        \"Name\": \"El Salvador\",\r\n        \"Code\": \"SV\"\r\n    },\r\n    {\r\n        \"Name\": \"Equatorial Guinea\",\r\n        \"Code\": \"GQ\"\r\n    },\r\n    {\r\n        \"Name\": \"Eritrea\",\r\n        \"Code\": \"ER\"\r\n    },\r\n    {\r\n        \"Name\": \"Estonia\",\r\n        \"Code\": \"EE\"\r\n    },\r\n    {\r\n        \"Name\": \"Ethiopia\",\r\n        \"Code\": \"ET\"\r\n    },\r\n    {\r\n        \"Name\": \"Falkland Islands (Malvinas)\",\r\n        \"Code\": \"FK\"\r\n    },\r\n    {\r\n        \"Name\": \"Faroe Islands\",\r\n        \"Code\": \"FO\"\r\n    },\r\n    {\r\n        \"Name\": \"Fiji\",\r\n        \"Code\": \"FJ\"\r\n    },\r\n    {\r\n        \"Name\": \"Finland\",\r\n        \"Code\": \"FI\"\r\n    },\r\n    {\r\n        \"Name\": \"France\",\r\n        \"Code\": \"FR\"\r\n    },\r\n    {\r\n        \"Name\": \"French Guiana\",\r\n        \"Code\": \"GF\"\r\n    },\r\n    {\r\n        \"Name\": \"French Polynesia\",\r\n        \"Code\": \"PF\"\r\n    },\r\n    {\r\n        \"Name\": \"French Southern Territories\",\r\n        \"Code\": \"TF\"\r\n    },\r\n    {\r\n        \"Name\": \"Gabon\",\r\n        \"Code\": \"GA\"\r\n    },\r\n    {\r\n        \"Name\": \"Gambia\",\r\n        \"Code\": \"GM\"\r\n    },\r\n    {\r\n        \"Name\": \"Georgia\",\r\n        \"Code\": \"GE\"\r\n    },\r\n    {\r\n        \"Name\": \"Germany\",\r\n        \"Code\": \"DE\"\r\n    },\r\n    {\r\n        \"Name\": \"Ghana\",\r\n        \"Code\": \"GH\"\r\n    },\r\n    {\r\n        \"Name\": \"Gibraltar\",\r\n        \"Code\": \"GI\"\r\n    },\r\n    {\r\n        \"Name\": \"Greece\",\r\n        \"Code\": \"GR\"\r\n    },\r\n    {\r\n        \"Name\": \"Greenland\",\r\n        \"Code\": \"GL\"\r\n    },\r\n    {\r\n        \"Name\": \"Grenada\",\r\n        \"Code\": \"GD\"\r\n    },\r\n    {\r\n        \"Name\": \"Guadeloupe\",\r\n        \"Code\": \"GP\"\r\n    },\r\n    {\r\n        \"Name\": \"Guam\",\r\n        \"Code\": \"GU\"\r\n    },\r\n    {\r\n        \"Name\": \"Guatemala\",\r\n        \"Code\": \"GT\"\r\n    },\r\n    {\r\n        \"Name\": \"Guernsey\",\r\n        \"Code\": \"GG\"\r\n    },\r\n    {\r\n        \"Name\": \"Guinea\",\r\n        \"Code\": \"GN\"\r\n    },\r\n    {\r\n        \"Name\": \"Guinea-Bissau\",\r\n        \"Code\": \"GW\"\r\n    },\r\n    {\r\n        \"Name\": \"Guyana\",\r\n        \"Code\": \"GY\"\r\n    },\r\n    {\r\n        \"Name\": \"Haiti\",\r\n        \"Code\": \"HT\"\r\n    },\r\n    {\r\n        \"Name\": \"Heard Island and McDonald Islands\",\r\n        \"Code\": \"HM\"\r\n    },\r\n    {\r\n        \"Name\": \"Holy See (Vatican City State)\",\r\n        \"Code\": \"VA\"\r\n    },\r\n    {\r\n        \"Name\": \"Honduras\",\r\n        \"Code\": \"HN\"\r\n    },\r\n    {\r\n        \"Name\": \"Hong Kong\",\r\n        \"Code\": \"HK\"\r\n    },\r\n    {\r\n        \"Name\": \"Hungary\",\r\n        \"Code\": \"HU\"\r\n    },\r\n    {\r\n        \"Name\": \"Iceland\",\r\n        \"Code\": \"IS\"\r\n    },\r\n    {\r\n        \"Name\": \"India\",\r\n        \"Code\": \"IN\"\r\n    },\r\n    {\r\n        \"Name\": \"Indonesia\",\r\n        \"Code\": \"ID\"\r\n    },\r\n    {\r\n        \"Name\": \"Iran, Islamic Republic of\",\r\n        \"Code\": \"IR\"\r\n    },\r\n    {\r\n        \"Name\": \"Iraq\",\r\n        \"Code\": \"IQ\"\r\n    },\r\n    {\r\n        \"Name\": \"Ireland\",\r\n        \"Code\": \"IE\"\r\n    },\r\n    {\r\n        \"Name\": \"Isle of Man\",\r\n        \"Code\": \"IM\"\r\n    },\r\n    {\r\n        \"Name\": \"Israel\",\r\n        \"Code\": \"IL\"\r\n    },\r\n    {\r\n        \"Name\": \"Italy\",\r\n        \"Code\": \"IT\"\r\n    },\r\n    {\r\n        \"Name\": \"Jamaica\",\r\n        \"Code\": \"JM\"\r\n    },\r\n    {\r\n        \"Name\": \"Japan\",\r\n        \"Code\": \"JP\"\r\n    },\r\n    {\r\n        \"Name\": \"Jersey\",\r\n        \"Code\": \"JE\"\r\n    },\r\n    {\r\n        \"Name\": \"Jordan\",\r\n        \"Code\": \"JO\"\r\n    },\r\n    {\r\n        \"Name\": \"Kazakhstan\",\r\n        \"Code\": \"KZ\"\r\n    },\r\n    {\r\n        \"Name\": \"Kenya\",\r\n        \"Code\": \"KE\"\r\n    },\r\n    {\r\n        \"Name\": \"Kiribati\",\r\n        \"Code\": \"KI\"\r\n    },\r\n    {\r\n        \"Name\": \"Korea, Democratic People's Republic of\",\r\n        \"Code\": \"KP\"\r\n    },\r\n    {\r\n        \"Name\": \"Korea, Republic of\",\r\n        \"Code\": \"KR\"\r\n    },\r\n    {\r\n        \"Name\": \"Kuwait\",\r\n        \"Code\": \"KW\"\r\n    },\r\n    {\r\n        \"Name\": \"Kyrgyzstan\",\r\n        \"Code\": \"KG\"\r\n    },\r\n    {\r\n        \"Name\": \"Lao People's Democratic Republic\",\r\n        \"Code\": \"LA\"\r\n    },\r\n    {\r\n        \"Name\": \"Latvia\",\r\n        \"Code\": \"LV\"\r\n    },\r\n    {\r\n        \"Name\": \"Lebanon\",\r\n        \"Code\": \"LB\"\r\n    },\r\n    {\r\n        \"Name\": \"Lesotho\",\r\n        \"Code\": \"LS\"\r\n    },\r\n    {\r\n        \"Name\": \"Liberia\",\r\n        \"Code\": \"LR\"\r\n    },\r\n    {\r\n        \"Name\": \"Libya\",\r\n        \"Code\": \"LY\"\r\n    },\r\n    {\r\n        \"Name\": \"Liechtenstein\",\r\n        \"Code\": \"LI\"\r\n    },\r\n    {\r\n        \"Name\": \"Lithuania\",\r\n        \"Code\": \"LT\"\r\n    },\r\n    {\r\n        \"Name\": \"Luxembourg\",\r\n        \"Code\": \"LU\"\r\n    },\r\n    {\r\n        \"Name\": \"Macao\",\r\n        \"Code\": \"MO\"\r\n    },\r\n    {\r\n        \"Name\": \"Macedonia, the Former Yugoslav Republic of\",\r\n        \"Code\": \"MK\"\r\n    },\r\n    {\r\n        \"Name\": \"Madagascar\",\r\n        \"Code\": \"MG\"\r\n    },\r\n    {\r\n        \"Name\": \"Malawi\",\r\n        \"Code\": \"MW\"\r\n    },\r\n    {\r\n        \"Name\": \"Malaysia\",\r\n        \"Code\": \"MY\"\r\n    },\r\n    {\r\n        \"Name\": \"Maldives\",\r\n        \"Code\": \"MV\"\r\n    },\r\n    {\r\n        \"Name\": \"Mali\",\r\n        \"Code\": \"ML\"\r\n    },\r\n    {\r\n        \"Name\": \"Malta\",\r\n        \"Code\": \"MT\"\r\n    },\r\n    {\r\n        \"Name\": \"Marshall Islands\",\r\n        \"Code\": \"MH\"\r\n    },\r\n    {\r\n        \"Name\": \"Martinique\",\r\n        \"Code\": \"MQ\"\r\n    },\r\n    {\r\n        \"Name\": \"Mauritania\",\r\n        \"Code\": \"MR\"\r\n    },\r\n    {\r\n        \"Name\": \"Mauritius\",\r\n        \"Code\": \"MU\"\r\n    },\r\n    {\r\n        \"Name\": \"Mayotte\",\r\n        \"Code\": \"YT\"\r\n    },\r\n    {\r\n        \"Name\": \"Mexico\",\r\n        \"Code\": \"MX\"\r\n    },\r\n    {\r\n        \"Name\": \"Micronesia, Federated States of\",\r\n        \"Code\": \"FM\"\r\n    },\r\n    {\r\n        \"Name\": \"Moldova, Republic of\",\r\n        \"Code\": \"MD\"\r\n    },\r\n    {\r\n        \"Name\": \"Monaco\",\r\n        \"Code\": \"MC\"\r\n    },\r\n    {\r\n        \"Name\": \"Mongolia\",\r\n        \"Code\": \"MN\"\r\n    },\r\n    {\r\n        \"Name\": \"Montenegro\",\r\n        \"Code\": \"ME\"\r\n    },\r\n    {\r\n        \"Name\": \"Montserrat\",\r\n        \"Code\": \"MS\"\r\n    },\r\n    {\r\n        \"Name\": \"Morocco\",\r\n        \"Code\": \"MA\"\r\n    },\r\n    {\r\n        \"Name\": \"Mozambique\",\r\n        \"Code\": \"MZ\"\r\n    },\r\n    {\r\n        \"Name\": \"Myanmar\",\r\n        \"Code\": \"MM\"\r\n    },\r\n    {\r\n        \"Name\": \"Namibia\",\r\n        \"Code\": \"NA\"\r\n    },\r\n    {\r\n        \"Name\": \"Nauru\",\r\n        \"Code\": \"NR\"\r\n    },\r\n    {\r\n        \"Name\": \"Nepal\",\r\n        \"Code\": \"NP\"\r\n    },\r\n    {\r\n        \"Name\": \"Netherlands\",\r\n        \"Code\": \"NL\"\r\n    },\r\n    {\r\n        \"Name\": \"New Caledonia\",\r\n        \"Code\": \"NC\"\r\n    },\r\n    {\r\n        \"Name\": \"New Zealand\",\r\n        \"Code\": \"NZ\"\r\n    },\r\n    {\r\n        \"Name\": \"Nicaragua\",\r\n        \"Code\": \"NI\"\r\n    },\r\n    {\r\n        \"Name\": \"Niger\",\r\n        \"Code\": \"NE\"\r\n    },\r\n    {\r\n        \"Name\": \"Nigeria\",\r\n        \"Code\": \"NG\"\r\n    },\r\n    {\r\n        \"Name\": \"Niue\",\r\n        \"Code\": \"NU\"\r\n    },\r\n    {\r\n        \"Name\": \"Norfolk Island\",\r\n        \"Code\": \"NF\"\r\n    },\r\n    {\r\n        \"Name\": \"Northern Mariana Islands\",\r\n        \"Code\": \"MP\"\r\n    },\r\n    {\r\n        \"Name\": \"Norway\",\r\n        \"Code\": \"NO\"\r\n    },\r\n    {\r\n        \"Name\": \"Oman\",\r\n        \"Code\": \"OM\"\r\n    },\r\n    {\r\n        \"Name\": \"Pakistan\",\r\n        \"Code\": \"PK\"\r\n    },\r\n    {\r\n        \"Name\": \"Palau\",\r\n        \"Code\": \"PW\"\r\n    },\r\n    {\r\n        \"Name\": \"Palestine, State of\",\r\n        \"Code\": \"PS\"\r\n    },\r\n    {\r\n        \"Name\": \"Panama\",\r\n        \"Code\": \"PA\"\r\n    },\r\n    {\r\n        \"Name\": \"Papua New Guinea\",\r\n        \"Code\": \"PG\"\r\n    },\r\n    {\r\n        \"Name\": \"Paraguay\",\r\n        \"Code\": \"PY\"\r\n    },\r\n    {\r\n        \"Name\": \"Peru\",\r\n        \"Code\": \"PE\"\r\n    },\r\n    {\r\n        \"Name\": \"Philippines\",\r\n        \"Code\": \"PH\"\r\n    },\r\n    {\r\n        \"Name\": \"Pitcairn\",\r\n        \"Code\": \"PN\"\r\n    },\r\n    {\r\n        \"Name\": \"Poland\",\r\n        \"Code\": \"PL\"\r\n    },\r\n    {\r\n        \"Name\": \"Portugal\",\r\n        \"Code\": \"PT\"\r\n    },\r\n    {\r\n        \"Name\": \"Puerto Rico\",\r\n        \"Code\": \"PR\"\r\n    },\r\n    {\r\n        \"Name\": \"Qatar\",\r\n        \"Code\": \"QA\"\r\n    },\r\n    {\r\n        \"Name\": \"Réunion\",\r\n        \"Code\": \"RE\"\r\n    },\r\n    {\r\n        \"Name\": \"Romania\",\r\n        \"Code\": \"RO\"\r\n    },\r\n    {\r\n        \"Name\": \"Russian Federation\",\r\n        \"Code\": \"RU\"\r\n    },\r\n    {\r\n        \"Name\": \"Rwanda\",\r\n        \"Code\": \"RW\"\r\n    },\r\n    {\r\n        \"Name\": \"Saint Barthélemy\",\r\n        \"Code\": \"BL\"\r\n    },\r\n    {\r\n        \"Name\": \"Saint Helena, Ascension and Tristan da Cunha\",\r\n        \"Code\": \"SH\"\r\n    },\r\n    {\r\n        \"Name\": \"Saint Kitts and Nevis\",\r\n        \"Code\": \"KN\"\r\n    },\r\n    {\r\n        \"Name\": \"Saint Lucia\",\r\n        \"Code\": \"LC\"\r\n    },\r\n    {\r\n        \"Name\": \"Saint Martin (French part)\",\r\n        \"Code\": \"MF\"\r\n    },\r\n    {\r\n        \"Name\": \"Saint Pierre and Miquelon\",\r\n        \"Code\": \"PM\"\r\n    },\r\n    {\r\n        \"Name\": \"Saint Vincent and the Grenadines\",\r\n        \"Code\": \"VC\"\r\n    },\r\n    {\r\n        \"Name\": \"Samoa\",\r\n        \"Code\": \"WS\"\r\n    },\r\n    {\r\n        \"Name\": \"San Marino\",\r\n        \"Code\": \"SM\"\r\n    },\r\n    {\r\n        \"Name\": \"Sao Tome and Principe\",\r\n        \"Code\": \"ST\"\r\n    },\r\n    {\r\n        \"Name\": \"Saudi Arabia\",\r\n        \"Code\": \"SA\"\r\n    },\r\n    {\r\n        \"Name\": \"Senegal\",\r\n        \"Code\": \"SN\"\r\n    },\r\n    {\r\n        \"Name\": \"Serbia\",\r\n        \"Code\": \"RS\"\r\n    },\r\n    {\r\n        \"Name\": \"Seychelles\",\r\n        \"Code\": \"SC\"\r\n    },\r\n    {\r\n        \"Name\": \"Sierra Leone\",\r\n        \"Code\": \"SL\"\r\n    },\r\n    {\r\n        \"Name\": \"Singapore\",\r\n        \"Code\": \"SG\"\r\n    },\r\n    {\r\n        \"Name\": \"Sint Maarten (Dutch part)\",\r\n        \"Code\": \"SX\"\r\n    },\r\n    {\r\n        \"Name\": \"Slovakia\",\r\n        \"Code\": \"SK\"\r\n    },\r\n    {\r\n        \"Name\": \"Slovenia\",\r\n        \"Code\": \"SI\"\r\n    },\r\n    {\r\n        \"Name\": \"Solomon Islands\",\r\n        \"Code\": \"SB\"\r\n    },\r\n    {\r\n        \"Name\": \"Somalia\",\r\n        \"Code\": \"SO\"\r\n    },\r\n    {\r\n        \"Name\": \"South Africa\",\r\n        \"Code\": \"ZA\"\r\n    },\r\n    {\r\n        \"Name\": \"South Georgia and the South Sandwich Islands\",\r\n        \"Code\": \"GS\"\r\n    },\r\n    {\r\n        \"Name\": \"South Sudan\",\r\n        \"Code\": \"SS\"\r\n    },\r\n    {\r\n        \"Name\": \"Spain\",\r\n        \"Code\": \"ES\"\r\n    },\r\n    {\r\n        \"Name\": \"Sri Lanka\",\r\n        \"Code\": \"LK\"\r\n    },\r\n    {\r\n        \"Name\": \"Sudan\",\r\n        \"Code\": \"SD\"\r\n    },\r\n    {\r\n        \"Name\": \"Suriname\",\r\n        \"Code\": \"SR\"\r\n    },\r\n    {\r\n        \"Name\": \"Svalbard and Jan Mayen\",\r\n        \"Code\": \"SJ\"\r\n    },\r\n    {\r\n        \"Name\": \"Swaziland\",\r\n        \"Code\": \"SZ\"\r\n    },\r\n    {\r\n        \"Name\": \"Sweden\",\r\n        \"Code\": \"SE\"\r\n    },\r\n    {\r\n        \"Name\": \"Switzerland\",\r\n        \"Code\": \"CH\"\r\n    },\r\n    {\r\n        \"Name\": \"Syrian Arab Republic\",\r\n        \"Code\": \"SY\"\r\n    },\r\n    {\r\n        \"Name\": \"Taiwan, Province of China\",\r\n        \"Code\": \"TW\"\r\n    },\r\n    {\r\n        \"Name\": \"Tajikistan\",\r\n        \"Code\": \"TJ\"\r\n    },\r\n    {\r\n        \"Name\": \"Tanzania, United Republic of\",\r\n        \"Code\": \"TZ\"\r\n    },\r\n    {\r\n        \"Name\": \"Thailand\",\r\n        \"Code\": \"TH\"\r\n    },\r\n    {\r\n        \"Name\": \"Timor-Leste\",\r\n        \"Code\": \"TL\"\r\n    },\r\n    {\r\n        \"Name\": \"Togo\",\r\n        \"Code\": \"TG\"\r\n    },\r\n    {\r\n        \"Name\": \"Tokelau\",\r\n        \"Code\": \"TK\"\r\n    },\r\n    {\r\n        \"Name\": \"Tonga\",\r\n        \"Code\": \"TO\"\r\n    },\r\n    {\r\n        \"Name\": \"Trinidad and Tobago\",\r\n        \"Code\": \"TT\"\r\n    },\r\n    {\r\n        \"Name\": \"Tunisia\",\r\n        \"Code\": \"TN\"\r\n    },\r\n    {\r\n        \"Name\": \"Turkey\",\r\n        \"Code\": \"TR\"\r\n    },\r\n    {\r\n        \"Name\": \"Turkmenistan\",\r\n        \"Code\": \"TM\"\r\n    },\r\n    {\r\n        \"Name\": \"Turks and Caicos Islands\",\r\n        \"Code\": \"TC\"\r\n    },\r\n    {\r\n        \"Name\": \"Tuvalu\",\r\n        \"Code\": \"TV\"\r\n    },\r\n    {\r\n        \"Name\": \"Uganda\",\r\n        \"Code\": \"UG\"\r\n    },\r\n    {\r\n        \"Name\": \"Ukraine\",\r\n        \"Code\": \"UA\"\r\n    },\r\n    {\r\n        \"Name\": \"United Arab Emirates\",\r\n        \"Code\": \"AE\"\r\n    },\r\n    {\r\n        \"Name\": \"United Kingdom\",\r\n        \"Code\": \"GB\"\r\n    },\r\n    {\r\n        \"Name\": \"United States\",\r\n        \"Code\": \"US\"\r\n    },\r\n    {\r\n        \"Name\": \"United States Minor Outlying Islands\",\r\n        \"Code\": \"UM\"\r\n    },\r\n    {\r\n        \"Name\": \"Uruguay\",\r\n        \"Code\": \"UY\"\r\n    },\r\n    {\r\n        \"Name\": \"Uzbekistan\",\r\n        \"Code\": \"UZ\"\r\n    },\r\n    {\r\n        \"Name\": \"Vanuatu\",\r\n        \"Code\": \"VU\"\r\n    },\r\n    {\r\n        \"Name\": \"Venezuela, Bolivarian Republic of\",\r\n        \"Code\": \"VE\"\r\n    },\r\n    {\r\n        \"Name\": \"Viet Nam\",\r\n        \"Code\": \"VN\"\r\n    },\r\n    {\r\n        \"Name\": \"Virgin Islands, British\",\r\n        \"Code\": \"VG\"\r\n    },\r\n    {\r\n        \"Name\": \"Virgin Islands, U.S.\",\r\n        \"Code\": \"VI\"\r\n    },\r\n    {\r\n        \"Name\": \"Wallis and Futuna\",\r\n        \"Code\": \"WF\"\r\n    },\r\n    {\r\n        \"Name\": \"Western Sahara\",\r\n        \"Code\": \"EH\"\r\n    },\r\n    {\r\n        \"Name\": \"Yemen\",\r\n        \"Code\": \"YE\"\r\n    },\r\n    {\r\n        \"Name\": \"Zambia\",\r\n        \"Code\": \"ZM\"\r\n    },\r\n    {\r\n        \"Name\": \"Zimbabwe\",\r\n        \"Code\": \"ZW\"\r\n    }\r\n]","import { AppState } from '..'\r\nimport { createSelector } from 'reselect'\r\nimport { ISubWorkflow } from './types';\r\n\r\nconst getSubWorkflowsState = ((state: AppState) => state.subWorkflows)\r\n\r\nexport const subWorkflows = createSelector([getSubWorkflowsState], s => {\r\n    return sortSubWorkflows(s.items)\r\n})\r\n\r\nexport const sortSubWorkflows = (mm: ISubWorkflow[]) => {\r\n    return mm.sort(function (a, b) {\r\n        return a.rank === b.rank ? 0 : +(a.rank > b.rank) || -1;\r\n    }\r\n    )\r\n}\r\n\r\nexport const getSubWorkflow = (xx: ISubWorkflow[], id: string) => {\r\n    return xx.find(f => f.id === id)!\r\n}\r\n\r\nexport const getSubWorkflowByWorkflow = (xx: ISubWorkflow[], id: string) => {\r\n    return xx.filter(f => f.workflowId === id)\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { AppState } from '../store'\r\nimport { application } from '../store/application/selectors'\r\nimport { createWorkflow, updateWorkflow, deleteWorkflow } from '../store/workflows/actions';\r\nimport { createSubWorkflow, updateSubWorkflow, deleteSubWorkflow } from '../store/subworkflows/actions';\r\nimport { createMilestone, updateMilestone, deleteMilestone } from '../store/milestones/actions';\r\nimport { createFeature, updateFeature, deleteFeature } from '../store/features/actions';\r\nimport { Formik, FormikActions, FormikProps, Form, Field, FieldProps } from 'formik';\r\nimport { API_CREATE_WORKFLOW, API_CREATE_MILESTONE, API_CREATE_SUBWORKFLOW, API_CREATE_FEATURE } from \"../api\";\r\nimport { v4 as uuid } from 'uuid'\r\nimport * as Yup from 'yup';\r\nimport { IApplication } from '../store/application/types';\r\nimport { IMilestone } from '../store/milestones/types';\r\nimport OnClickOut from 'react-onclickoutside';\r\nimport { IWorkflow } from '../store/workflows/types';\r\nimport { ISubWorkflow } from '../store/subworkflows/types';\r\nimport { IFeature } from '../store/features/types';\r\nimport { Button } from './elements';\r\nimport { CardStatus, Color } from '../core/misc';\r\n\r\nexport enum Types {\r\n  MILESTONE = \"MILESTONE\",\r\n  WORKFLOW = \"WORKFLOW\",\r\n  SUBWORKFLOW = \"SUBWORKFLOW\",\r\n  FEATURE = \"FEATURE\"\r\n}\r\n\r\nexport interface newMilestone { type: Types.MILESTONE, payload: {} }\r\nexport interface newWorkflow { type: Types.WORKFLOW, payload: {} }\r\nexport interface newSubWorkflow { type: Types.SUBWORKFLOW, payload: { workflowId: string } }\r\nexport interface newFeature { type: Types.FEATURE, payload: { subWorkflowId: string, milestoneId: string } }\r\n\r\nexport type Actions = newMilestone | newWorkflow | newSubWorkflow | newFeature\r\n\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  application: application(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  createWorkflow,\r\n  updateWorkflow,\r\n  deleteWorkflow,\r\n  createMilestone,\r\n  updateMilestone,\r\n  deleteMilestone,\r\n  createSubWorkflow,\r\n  updateSubWorkflow,\r\n  deleteSubWorkflow,\r\n  createFeature,\r\n  updateFeature,\r\n  deleteFeature\r\n}\r\n\r\ninterface PropsFromState {\r\n  application: IApplication\r\n}\r\n\r\ninterface PropsFromDispatch {\r\n  createWorkflow: typeof createWorkflow\r\n  updateWorkflow: typeof updateWorkflow\r\n  deleteWorkflow: typeof deleteWorkflow\r\n  createMilestone: typeof createMilestone\r\n  updateMilestone: typeof updateMilestone\r\n  deleteMilestone: typeof deleteMilestone\r\n  createSubWorkflow: typeof createSubWorkflow\r\n  updateSubWorkflow: typeof updateSubWorkflow\r\n  deleteSubWorkflow: typeof deleteSubWorkflow\r\n  createFeature: typeof createFeature\r\n  updateFeature: typeof updateFeature\r\n  deleteFeature: typeof deleteFeature\r\n}\r\ninterface SelfProps {\r\n  action: Actions,\r\n  workspaceId: string,\r\n  projectId: string,\r\n  close: () => void\r\n  demo: boolean\r\n}\r\ntype Props = PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n}\r\n\r\nconst Schema = Yup.object().shape({\r\n  title: Yup.string()\r\n    .min(1, 'Minimum 1 characters.')\r\n    .max(200, 'Maximum 200 characters.')\r\n    .required('Required.')\r\n});\r\n\r\n\r\ninterface formValues {\r\n  title: string\r\n}\r\n\r\nclass CreateCardModal extends Component<Props, State> {\r\n  keydownHandler = (event: KeyboardEvent) => {\r\n    if (event.keyCode === 27) {\r\n      this.props.close()\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.keydownHandler, false);\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const parentProps = this.props\r\n\r\n\r\n    const Dialog = class Dialog extends Component<{ close: () => void }>  {\r\n\r\n      handleClickOutside = () => {\r\n        this.props.close()\r\n      }\r\n\r\n      render() {\r\n\r\n\r\n        return (\r\n          <div className=\"bg-white p-3 w-full  max-w-xs\">\r\n\r\n            <Formik\r\n              initialValues={{ title: '' }}\r\n\r\n              validationSchema={Schema}\r\n\r\n              onSubmit={(values: formValues, actions: FormikActions<formValues>) => {\r\n                const t = new Date().toISOString()\r\n\r\n                switch (parentProps.action.type) {\r\n                  case Types.WORKFLOW: {\r\n                    const id = uuid()\r\n                    const optimisticWorkflow: IWorkflow = {\r\n                      kind: \"workflow\",\r\n                      id: id,\r\n                      workspaceId: parentProps.workspaceId,\r\n                      projectId: parentProps.projectId,\r\n                      rank: \"\",\r\n                      title: values.title,\r\n                      description: \"\",\r\n                      createdAt: t,\r\n                      createdBy: parentProps.application.account === undefined ? \"\" : parentProps.application.account.id,\r\n                      createdByName: parentProps.application.account === undefined ? \"demo\" : parentProps.application.account.name,\r\n                      lastModified: t,\r\n                      lastModifiedByName: parentProps.application.account === undefined ? \"demo\" : parentProps.application.account.name,\r\n                      color: Color.WHITE\r\n                    }\r\n                    parentProps.createWorkflow(optimisticWorkflow)\r\n\r\n                    if (!parentProps.demo) {\r\n                      API_CREATE_WORKFLOW(parentProps.workspaceId, parentProps.projectId, id, values.title)\r\n                        .then(response => {\r\n                          if (response.ok) {\r\n                            response.json().then((data: IWorkflow) => {\r\n                              parentProps.updateWorkflow(data)\r\n                            })\r\n                          } else {\r\n                            parentProps.deleteWorkflow(id)\r\n                          }\r\n                        })\r\n                    }\r\n\r\n\r\n                    this.props.close()\r\n                    actions.setSubmitting(false)\r\n                    break\r\n                  }\r\n                  case Types.MILESTONE: {\r\n                    const id = uuid()\r\n\r\n                    const optimisticMilestone: IMilestone = {\r\n                      kind: \"milestone\",\r\n                      id: id,\r\n                      workspaceId: parentProps.workspaceId,\r\n                      projectId: parentProps.projectId,\r\n                      rank: \"\",\r\n                      title: values.title,\r\n                      description: \"\",\r\n                      status: CardStatus.OPEN,\r\n                      createdAt: t,\r\n                      createdBy: parentProps.application.account === undefined ? \"\" : parentProps.application.account.id,\r\n                      createdByName: parentProps.application.account === undefined ? \"demo\" : parentProps.application.account.name,\r\n                      lastModified: t,\r\n                      lastModifiedByName: parentProps.application.account === undefined ? \"demo\" : parentProps.application.account.name,\r\n                      color: Color.NONE\r\n                    }\r\n                    parentProps.createMilestone(optimisticMilestone)\r\n\r\n                    if (!parentProps.demo) {\r\n                      API_CREATE_MILESTONE(parentProps.workspaceId, parentProps.projectId, id, values.title)\r\n                        .then(response => {\r\n                          if (response.ok) {\r\n                            response.json().then((data: IMilestone) => {\r\n                              parentProps.updateMilestone(data)\r\n                            })\r\n                          } else {\r\n                            parentProps.deleteMilestone(id)\r\n                          }\r\n                        })\r\n                    }\r\n\r\n                    this.props.close()\r\n                    actions.setSubmitting(false)\r\n                    break\r\n                  }\r\n                  case Types.SUBWORKFLOW: {\r\n                    const id = uuid()\r\n\r\n                    const { workflowId } = parentProps.action.payload\r\n\r\n\r\n                    const optimisticSubMilestone: ISubWorkflow = {\r\n                      kind: \"subworkflow\",\r\n                      id: id,\r\n                      workspaceId: parentProps.workspaceId,\r\n                      workflowId: workflowId,\r\n                      rank: \"\",\r\n                      title: values.title,\r\n                      description: \"\",\r\n                      createdAt: t,\r\n                      createdBy: parentProps.application.account === undefined ? \"\" : parentProps.application.account.id,\r\n                      createdByName: parentProps.application.account === undefined ? \"demo\" : parentProps.application.account.name,\r\n                      lastModified: t,\r\n                      lastModifiedByName: parentProps.application.account === undefined ? \"demo\" : parentProps.application.account.name,\r\n                      color: Color.NONE\r\n                    }\r\n                    parentProps.createSubWorkflow(optimisticSubMilestone)\r\n\r\n                    if (!parentProps.demo) {\r\n                      API_CREATE_SUBWORKFLOW(parentProps.workspaceId, workflowId, id, values.title)\r\n                        .then(response => {\r\n                          if (response.ok) {\r\n                            response.json().then((data: ISubWorkflow) => {\r\n                              parentProps.updateSubWorkflow(data)\r\n                            })\r\n                          } else {\r\n                            parentProps.deleteSubWorkflow(id)\r\n                          }\r\n                        })\r\n                    }\r\n                    this.props.close()\r\n                    actions.setSubmitting(false)\r\n                    break\r\n                  }\r\n                  case Types.FEATURE: {\r\n                    const id = uuid()\r\n                    const { subWorkflowId, milestoneId } = parentProps.action.payload\r\n                    const optimisticFeature: IFeature = {\r\n                      kind: \"feature\",\r\n                      id: id,\r\n                      workspaceId: parentProps.workspaceId,\r\n                      subWorkflowId: subWorkflowId,\r\n                      milestoneId: milestoneId,\r\n                      rank: \"\",\r\n                      title: values.title,\r\n                      description: \"\",\r\n                      status: CardStatus.OPEN,\r\n                      createdAt: t,\r\n                      createdBy: parentProps.application.account === undefined ? \"\" : parentProps.application.account.id,\r\n                      createdByName: parentProps.application.account === undefined ? \"demo\" : parentProps.application.account.name,\r\n                      lastModified: t,\r\n                      lastModifiedByName: parentProps.application.account === undefined ? \"demo\" : parentProps.application.account.name,\r\n                      color: Color.NONE\r\n                    }\r\n                    parentProps.createFeature(optimisticFeature)\r\n\r\n                    if (!parentProps.demo) {\r\n                      API_CREATE_FEATURE(parentProps.workspaceId, milestoneId, subWorkflowId, id, values.title)\r\n                        .then(response => {\r\n                          if (response.ok) {\r\n                            response.json().then((data: IFeature) => {\r\n                              parentProps.updateFeature(data)\r\n                            })\r\n                          } else {\r\n                            parentProps.deleteFeature(id)\r\n                          }\r\n                        })\r\n                    }\r\n                    this.props.close()\r\n                    actions.setSubmitting(false)\r\n                    break\r\n                  }\r\n                  default:\r\n                }\r\n              }\r\n              }\r\n\r\n              render={(formikBag: FormikProps<formValues>) => (\r\n                <Form>\r\n                  {formikBag.status && formikBag.status.msg && <div>{formikBag.status.msg}</div>}\r\n\r\n                  <div className=\"flex flex-col \">\r\n                    <div className=\"mb-2\"> New card </div>\r\n\r\n                    <div>\r\n\r\n                      <Field\r\n                        name=\"title\"\r\n                        render={({ field, form }: FieldProps<formValues>) => (\r\n\r\n                          <div className=\"flex flex-col\">\r\n                            <div><input autoFocus type=\"text\" {...field} placeholder=\"Title\" id=\"title\" className=\"rounded p-2 border w-full\t\"/></div>\r\n                            <div className=\"p-1 text-red-500 text-xs font-bold\">{form.touched.title && form.errors.title}</div>\r\n                          </div>\r\n\r\n                        )}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-end\">\r\n                      <div className=\"flex flex-row\">\r\n\r\n                        <div className=\"mr-1\">\r\n                          <Button primary submit title=\"Create\"/>\r\n                        </div>\r\n                        <div>\r\n                          <Button title=\"Cancel\" handleOnClick={this.props.close}/>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </Form>\r\n              )}\r\n            />\r\n          </div>\r\n        )\r\n\r\n      }\r\n\r\n    }\r\n\r\n    const DialogWithClickOutside = OnClickOut(Dialog)\r\n\r\n    return (\r\n      <div style={{ background: ' rgba(0,0,0,.75)' }} className=\"fixed p-10 z-10 top-0 left-0 w-full h-full flex items-start justify-center bg-gray-100 text-sm\">\r\n        <DialogWithClickOutside close={this.props.close}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCardModal)\r\n","import { AppState } from '..'\r\nimport { createSelector } from 'reselect'\r\nimport { IFeature } from './types';\r\nimport { CardStatus } from '../../core/misc';\r\n\r\nconst getFeaturesState = ((state: AppState) => state.features)\r\n\r\nexport const features = createSelector([getFeaturesState], s => {\r\n    return sortFeatures(s.items)\r\n})\r\n\r\nexport const sortFeatures = (ff: IFeature[]): IFeature[] => {\r\n    return ff.sort(function (a, b) {\r\n        return a.rank === b.rank ? 0 : +(a.rank > b.rank) || -1;\r\n    }\r\n    )\r\n}\r\n\r\nexport const filterFeaturesOnMilestoneAndSubWorkflow = (ff: IFeature[], milestoneId: string, subWorkflowId: string) => {\r\n    return ff.filter(f => f.milestoneId === milestoneId).filter(x => x.subWorkflowId === subWorkflowId)\r\n}\r\n\r\nexport const filterFeaturesOnMilestone = (ff: IFeature[], milestoneId: string) => {\r\n    return ff.filter(f => f.milestoneId === milestoneId)\r\n}\r\n\r\nexport const closedFeatures = (ff: IFeature[]) => {\r\n    return ff.filter(f => f.status === CardStatus.CLOSED)\r\n}\r\n\r\nexport const getFeature = (ff: IFeature[], id: string) => {\r\n    return ff.find(f => f.id === id)!\r\n}\r\n\r\n\r\n","import { IProject } from \"./types\";\r\nimport { action } from 'typesafe-actions'\r\nimport { v4 as uuid } from 'uuid'\r\nimport { Dispatch } from \"react\";\r\nimport { API_GET_PROJECTS, API_CREATE_PROJECT } from \"../../api\";\r\nimport { AllActions } from \"..\";\r\n\r\nexport enum ProjectsActions {\r\n    CREATE_PROJECT = 'CREATE_PROJECT',\r\n    LOAD_PROJECTS = 'LOAD_PROJECTS',\r\n    UPDATE_PROJECT = 'UPDATE_PROJECT',\r\n    DELETE_PROJECT = 'DELETE_PROJECT'\r\n}\r\n\r\nexport interface createProject { type: ProjectsActions.CREATE_PROJECT, payload: IProject }\r\nexport const createProject = (p: IProject) => action(ProjectsActions.CREATE_PROJECT, p)\r\n\r\nexport interface loadProjects { type: ProjectsActions.LOAD_PROJECTS, payload: IProject[] }\r\nexport const loadProjects = (pp: IProject[]) => action(ProjectsActions.LOAD_PROJECTS, pp)\r\n\r\nexport interface updateProject { type: ProjectsActions.UPDATE_PROJECT, payload: IProject }\r\nexport const updateProject = (p: IProject) => action(ProjectsActions.UPDATE_PROJECT, p)\r\n\r\nexport interface deleteProject { type: ProjectsActions.DELETE_PROJECT, payload: string }\r\nexport const deleteProject = (id: string) => action(ProjectsActions.DELETE_PROJECT, id)\r\n\r\n\r\nexport type Actions = loadProjects | createProject | updateProject | deleteProject\r\n\r\n\r\nexport const loadProjectsRequest = (dispatch: Dispatch<AllActions>) => {\r\n    return (workspaceId: string) => {\r\n\r\n        return API_GET_PROJECTS(workspaceId)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    response.json().then((data: IProject[]) => {\r\n                        dispatch(loadProjects(data))\r\n                    })\r\n                }\r\n            }\r\n            )\r\n    }\r\n}\r\n\r\n\r\nexport const createProjectRequest = (dispatch: Dispatch<AllActions>) => {\r\n    return (workspaceId: string, title: string) => {\r\n\r\n        const projectId = uuid()\r\n\r\n        return API_CREATE_PROJECT(workspaceId, projectId, title)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    response.json().then((data: IProject) => {\r\n                        dispatch(createProject(data))\r\n                    })\r\n                }\r\n            }\r\n            )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Color, colorToBorderColorClass } from '../core/misc';\r\n\r\ntype Props = {\r\n  title: string\r\n  link: string\r\n  status?: string\r\n  small?: boolean\r\n  color?: Color\r\n  rightLink?: () => void\r\n  bottomLink?: () => void\r\n  bottomStatus?: string\r\n};\r\n\r\ntype State = {};\r\n\r\nclass Card extends Component<Props, State> {\r\n  render() {\r\n\r\n    const color = this.props.color && (this.props.color !== Color.WHITE) ? this.props.color : null\r\n\r\n    return (\r\n\r\n      <div className={\"flex flex-row flex-no-shrink w-32 text-xs bg-white  overflow-hidden border  rounded \" + (this.props.small ? \" \" : \" h-16 \") + (color ? \" border-l-4 \" + colorToBorderColorClass(color) + \" \" : \" \" + colorToBorderColorClass(Color.WHITE) + \" \")}>\r\n\r\n        <div className=\"flex flex-col flex-grow\">\r\n\r\n          <Link className=\"flex-grow p-1\" to={this.props.link}>\r\n            <span className={this.props.status === \"CLOSED\" ? \"line-through\" : \"\"}> {this.props.title} </span>\r\n          </Link>\r\n          {this.props.bottomLink &&\r\n            <div className=\" flex justify-center \">\r\n              <div className=\"font-bold text-lg \"><button className=\" hover:text-gray-800 text-gray-500\" onClick={this.props.bottomLink}>+</button></div>\r\n            </div>\r\n          }\r\n          {this.props.bottomStatus &&\r\n            <div className=\" flex p-1 \">\r\n              <div style={{ fontSize: \"9px\" }}>{this.props.bottomStatus}</div>\r\n            </div>\r\n          }\r\n\r\n        </div>\r\n        {this.props.rightLink &&\r\n          <div className=\"flex items-center p-1\">\r\n            <div className=\"font-bold text-lg \"><button className=\" hover:text-gray-800 text-gray-500\" onClick={this.props.rightLink}>+</button></div>\r\n          </div>\r\n        }\r\n\r\n\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\n\r\nclass NewCard extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"p-1 w-32 h-16  border border-dashed border-gray-800 rounded items-center justify-center \">\r\n        <div className=\"flex h-full\">\r\n          {this.props.children}\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewCard;\r\n","import React, { Component } from 'react';\r\n\r\nclass NewDimCard extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"flex p-1 w-32 h-16  border border-dashed border-gray-200 rounded items-center justify-center \">\r\n        <div className=\"flex\">\r\n          {this.props.children}\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewDimCard;\r\n","import { Button } from './elements'\r\nimport React, { Component } from 'react';\r\nimport EmptyCard from './EmptyCard';\r\nimport { IWorkflow } from '../store/workflows/types';\r\nimport { moveFeature, updateFeature } from '../store/features/actions';\r\nimport { moveMilestone, updateMilestone } from '../store/milestones/actions';\r\nimport { moveWorkflow, updateWorkflow } from '../store/workflows/actions';\r\nimport { moveSubWorkflow, updateSubWorkflow } from '../store/subworkflows/actions';\r\nimport { AppState } from '../store'\r\nimport { getSubWorkflowByWorkflow } from '../store/subworkflows/selectors';\r\nimport { filterFeaturesOnMilestoneAndSubWorkflow, filterFeaturesOnMilestone, closedFeatures } from '../store/features/selectors';\r\nimport { application } from '../store/application/selectors';\r\nimport { connect } from 'react-redux'\r\nimport { IFeature } from '../store/features/types';\r\nimport { ISubWorkflow } from '../store/subworkflows/types';\r\nimport { IMilestone } from '../store/milestones/types';\r\nimport { DraggableProvided, DraggableStateSnapshot, DroppableProvided, DroppableStateSnapshot, DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd';\r\nimport { IApplication } from '../store/application/types';\r\nimport CreateCardModal from './CreateCardModal';\r\nimport Card from './Card';\r\nimport { Types } from './CreateCardModal';\r\nimport { API_MOVE_MILESTONE, API_MOVE_FEATURE, API_MOVE_SUBWORKFLOW, API_MOVE_WORKFLOW } from '../api';\r\nimport NewCard from './NewCard';\r\nimport { CardStatus } from '../core/misc';\r\nimport NewDimCard from './NewDimCard';\r\n\r\n\r\ninterface SelfProps {\r\n  projectId: string\r\n  workspaceId: string\r\n  milestones: IMilestone[]\r\n  subWorkflows: ISubWorkflow[]\r\n  workflows: IWorkflow[]\r\n  features: IFeature[]\r\n  url: string,\r\n  viewOnly: boolean\r\n  showClosedMilstones: boolean\r\n  demo: boolean\r\n}\r\n\r\ninterface PropsFromState {\r\n  application: IApplication\r\n}\r\n\r\ninterface PropsFromDispatch {\r\n  moveFeature: typeof moveFeature\r\n  moveMilestone: typeof moveMilestone\r\n  updateMilestone: typeof updateMilestone\r\n  moveSubWorkflow: typeof moveSubWorkflow\r\n  updateSubWorkflow: typeof updateSubWorkflow\r\n  moveWorkflow: typeof moveWorkflow\r\n  updateWorkflow: typeof updateWorkflow\r\n}\r\n\r\ninterface State {\r\n  showCreateFeatureModal: boolean\r\n  createFeatureModalMilestoneId: string\r\n  createFeatureModalSubWorkflowId: string\r\n  showCreateMilestoneModal: boolean\r\n  showCreateWorkflowModal: boolean\r\n  showCreateSubWorkflowModal: boolean\r\n  createSubWorkflowWorkflowId: string\r\n  showClosedMilestones: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  application: application(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  moveFeature,\r\n  updateMilestone,\r\n  moveMilestone,\r\n  moveSubWorkflow,\r\n  updateSubWorkflow,\r\n  moveWorkflow,\r\n  updateWorkflow,\r\n}\r\n\r\ntype Props = PropsFromState & PropsFromDispatch & SelfProps\r\n\r\nclass Board extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      showCreateFeatureModal: false,\r\n      createFeatureModalMilestoneId: \"\",\r\n      createFeatureModalSubWorkflowId: \"\",\r\n      showCreateMilestoneModal: false,\r\n      showCreateWorkflowModal: false,\r\n      showCreateSubWorkflowModal: false,\r\n      createSubWorkflowWorkflowId: \"\",\r\n      showClosedMilestones: false\r\n    };\r\n  }\r\n\r\n  // Features\r\n  openCreateFeatureModal = (milestoneId: string, subWorkflowId: string) => {\r\n    this.setState(state => ({\r\n      showCreateFeatureModal: !state.showCreateFeatureModal,\r\n      createFeatureModalMilestoneId: milestoneId,\r\n      createFeatureModalSubWorkflowId: subWorkflowId\r\n    }))\r\n  }\r\n  closeCreateFeatureModal = () => {\r\n    this.setState(state => ({\r\n      showCreateFeatureModal: false\r\n    }))\r\n  }\r\n\r\n  handleMilestoneMove = (id: string, workspaceId: string, index: number) => {\r\n\r\n  }\r\n  // Common\r\n\r\n  onDragEnd = (result: DropResult): void => {\r\n\r\n    const { draggableId, type, destination } = result;\r\n\r\n    const t = new Date().toISOString()\r\n    const by = this.props.application.account === undefined ? \"demo\" : this.props.application.account!.name\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n\r\n    switch (type) {\r\n      case \"FEATURE\": {\r\n        const { rid, wid } = this.getMilestoneAndSubWorkflowFromFeatureDroppableId(destination.droppableId)\r\n\r\n        const fid = this.getFeatureFromDraggableId(draggableId)\r\n\r\n        this.props.moveFeature({ id: fid, toMilestoneId: rid, toSubWorkflowId: wid, index: destination.index, ts: t, by: by }) // optimisic move\r\n\r\n        if (this.props.demo) {\r\n          return\r\n        }\r\n        API_MOVE_FEATURE(this.props.workspaceId, fid, wid, rid, destination.index)\r\n          .then(response => {\r\n            if (response.ok) {\r\n              response.json().then((data: IFeature) => {\r\n                updateFeature(data)\r\n              })\r\n            } else {\r\n              alert(\"Something went wrong when moving feature.\")\r\n            }\r\n          }\r\n          )\r\n        break\r\n      }\r\n\r\n      case \"MILESTONE\": {\r\n        // A milestone move is also triggered when a feature is moved, we need to ignore it. This is due to an issue with the drag-and-drop framework.\r\n        if (!this.isMilestoneDraggable(draggableId)) {\r\n          return\r\n        }\r\n        const milestoneId = this.getMilestoneFromDraggableId(draggableId)\r\n        this.props.moveMilestone({ id: milestoneId, index: destination.index, ts: t, by: by }) // optimisic move\r\n\r\n        if (this.props.demo) {\r\n          return\r\n        }\r\n        API_MOVE_MILESTONE(this.props.workspaceId, milestoneId, destination.index)\r\n          .then(response => {\r\n            if (response.ok) {\r\n              response.json().then((data: IMilestone) => {\r\n                updateMilestone(data)\r\n              })\r\n            } else {\r\n              alert(\"Something went wrong when moving milestone.\")\r\n            }\r\n          }\r\n          )\r\n        break\r\n      }\r\n\r\n      case \"WORKFLOW\": {\r\n        const wid = this.getWorkflowFromDraggableId(draggableId)\r\n        this.props.moveWorkflow({ id: wid, index: destination.index, ts: t, by: by }) // optimisic move\r\n\r\n        if (this.props.demo) {\r\n          return\r\n        }\r\n        API_MOVE_WORKFLOW(this.props.workspaceId, wid, destination.index)\r\n          .then(response => {\r\n            if (response.ok) {\r\n              response.json().then((data: IWorkflow) => {\r\n                updateWorkflow(data)\r\n              })\r\n            } else {\r\n              alert(\"Something went wrong when moving card.\")\r\n            }\r\n          }\r\n          )\r\n\r\n        break\r\n      }\r\n\r\n      case \"SUBWORKFLOW\": {\r\n        const swid = this.getSubWorkflowFromDraggableId(draggableId)\r\n        const wid = this.getWorkflowFromDroppableId(destination.droppableId)\r\n        this.props.moveSubWorkflow({ id: swid, toWorkflowId: wid, index: destination.index, ts: t, by: by }) // optimisic move\r\n\r\n        if (this.props.demo) {\r\n          return\r\n        }\r\n        API_MOVE_SUBWORKFLOW(this.props.workspaceId, swid, wid, destination.index)\r\n          .then(response => {\r\n            if (response.ok) {\r\n              response.json().then((data: ISubWorkflow) => {\r\n                updateSubWorkflow(data)\r\n              })\r\n            } else {\r\n              alert(\"Something went wrong when moving card.\")\r\n            }\r\n          }\r\n          )\r\n\r\n        break\r\n      }\r\n\r\n      default:\r\n    }\r\n\r\n    this.setState({ showClosedMilestones: false })\r\n  }\r\n\r\n  getListStyle = (isDraggingOver: boolean): {} => ({\r\n    background: isDraggingOver ? '#DAE1E7' : '',\r\n  });\r\n\r\n  getItemStyle = (isDragging: boolean, draggableStyle: any): {} => ({\r\n    background: isDragging ? '#51D88A' : '',\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle\r\n  });\r\n\r\n  getMilestoneAndSubWorkflowFromFeatureDroppableId = (id: string): { rid: string; wid: string } => {\r\n    const res = id.split(\"*\")\r\n    return { rid: res[1], wid: res[2] }\r\n  }\r\n\r\n  getFeatureFromDraggableId = (id: string): string => {\r\n    const res = id.split(\"*\", 2)\r\n    return res[1]\r\n  }\r\n\r\n  isMilestoneDraggable = (id: string): boolean => {\r\n    const res = id.split(\"*\")\r\n    return res[0] === \"m\"\r\n  }\r\n\r\n  getMilestoneFromDraggableId = (id: string): string => {\r\n    const res = id.split(\"*\", 2)\r\n    return res[1]\r\n  }\r\n\r\n  getSubWorkflowFromDraggableId = (id: string): string => {\r\n    const res = id.split(\"*\", 2)\r\n    return res[1]\r\n  }\r\n\r\n  getWorkflowFromDraggableId = (id: string): string => {\r\n    const res = id.split(\"*\", 2)\r\n    return res[1]\r\n  }\r\n\r\n  getWorkflowFromDroppableId = (id: string): string => {\r\n    const res = id.split(\"*\")\r\n    return res[1]\r\n  }\r\n\r\n\r\n  render() {\r\n    const { projectId, features, workflows, milestones, subWorkflows } = this.props\r\n\r\n    const isEmpty = workflows.length === 0 && milestones.length === 0\r\n\r\n    const viewOnly = this.props.viewOnly && !this.props.demo\r\n\r\n    return (\r\n      <div className=\"z-0   \">\r\n\r\n        <DragDropContext onDragStart={() => this.setState({ showClosedMilestones: true })} onDragEnd={this.onDragEnd}>\r\n          <div >\r\n            {this.state.showCreateMilestoneModal ? <CreateCardModal demo={this.props.demo} action={{ type: Types.MILESTONE, payload: {} }} workspaceId={this.props.workspaceId} projectId={projectId} close={() => this.setState({ showCreateMilestoneModal: false })} /> : null}\r\n            {this.state.showCreateWorkflowModal ? <CreateCardModal demo={this.props.demo} action={{ type: Types.WORKFLOW, payload: {} }} workspaceId={this.props.workspaceId} projectId={projectId} close={() => this.setState({ showCreateWorkflowModal: false })} /> : null}\r\n            {this.state.showCreateSubWorkflowModal ? <CreateCardModal demo={this.props.demo} action={{ type: Types.SUBWORKFLOW, payload: { workflowId: this.state.createSubWorkflowWorkflowId } }} workspaceId={this.props.workspaceId} projectId={projectId} close={() => this.setState({ showCreateSubWorkflowModal: false })} /> : null}\r\n            {this.state.showCreateFeatureModal ? <CreateCardModal demo={this.props.demo} action={{ type: Types.FEATURE, payload: { subWorkflowId: this.state.createFeatureModalSubWorkflowId, milestoneId: this.state.createFeatureModalMilestoneId } }} workspaceId={this.props.workspaceId} projectId={projectId} close={() => this.setState({ showCreateFeatureModal: false })} /> : null}\r\n            {\r\n              isEmpty?\r\n\r\n                  viewOnly ?\r\n                      <div className={\"p-2\"}>\r\n                        This story map is empty.\r\n                      </div>\r\n                      :\r\n\r\n                  <div className={\"p-2\"}>\r\n                    <p>\r\n                      <Button primary title=\"Add goal\" icon=\"add\" noborder handleOnClick={() => this.setState({ showCreateWorkflowModal: true })} />\r\n                    </p>\r\n                    <p>This board is empty, please start by adding a <b>user goal</b>. If you are new to user story mapping, have a look at <em><a className=\"link\" target={\"_blank\"} href={\"http://www.featmap.com/storymapping\"}>An introduction to story mapping</a></em> or an <a className=\"link\" target={\"_blank\"} href={\"https://app.featmap.com/link/e31ddff9-7138-4db7-b340-af0c2217b417?demo=1\"}>example story map</a>.</p>\r\n\r\n                  </div>\r\n\r\n                  :\r\n                  <div>\r\n                    <Droppable droppableId={\"w\"} type=\"WORKFLOW\" direction=\"horizontal\">\r\n                      {(providedDroppable: DroppableProvided, snapshotDroppable: DroppableStateSnapshot) => {\r\n\r\n                        return (\r\n                            <div className=\"flex\">\r\n                              <div className=\"flex    border-b-2    \"\r\n                                   ref={providedDroppable.innerRef}\r\n                                   {...providedDroppable.droppableProps}\r\n                                   style={this.getListStyle(snapshotDroppable.isDraggingOver)}>\r\n                                <div className=\"flex flex-row w-full\">\r\n                                  <div className=\" p-1 pr-2\">\r\n                                    <EmptyCard />\r\n                                  </div>\r\n\r\n                                  {workflows.map((w, index) => {\r\n                                        return [\r\n                                          <Draggable\r\n                                              isDragDisabled={viewOnly}\r\n                                              key={w.id}\r\n                                              draggableId={\"w*\" + w.id}\r\n                                              index={index}>\r\n                                            {(providedDraggable: DraggableProvided, snapshotDraggable: DraggableStateSnapshot) => (\r\n                                                <div key={w.id} className=\"bug flex p-1  \"\r\n                                                     ref={providedDraggable.innerRef}\r\n                                                     {...providedDraggable.draggableProps}\r\n                                                     {...providedDraggable.dragHandleProps}\r\n                                                     style={this.getItemStyle(\r\n                                                         snapshotDraggable.isDragging,\r\n                                                         providedDraggable.draggableProps.style\r\n                                                     )}>\r\n\r\n\r\n                                                  <div className=\"flex flex-col bg-gray-100\">\r\n                                                    <div className=\"flex flex-grow m-1 \"><Card color={w.color} title={w.title} link={this.props.url + \"/w/\" + w.id} /></div>\r\n                                                    <div className=\"flex flex-row fm-paren\">\r\n                                                      <Droppable key={\"w\" + w.id} droppableId={\"sw*\" + w.id} type=\"SUBWORKFLOW\" direction=\"horizontal\">\r\n                                                        {(providedDroppable: DroppableProvided, snapshotDroppable: DroppableStateSnapshot) => {\r\n                                                          {\r\n                                                            const ss = getSubWorkflowByWorkflow(subWorkflows, w.id)\r\n                                                            return (\r\n                                                                <div className=\"flex flex-row\"\r\n                                                                     ref={providedDroppable.innerRef}\r\n                                                                     {...providedDroppable.droppableProps}\r\n                                                                     style={this.getListStyle(snapshotDroppable.isDraggingOver)}>\r\n\r\n                                                                  {ss.length === 0 ?\r\n                                                                      <div className=\"text-xs p-1\">\r\n                                                                        {viewOnly ?\r\n                                                                            <EmptyCard/>\r\n                                                                            :\r\n                                                                            <NewCard>\r\n                                                                              <Button title=\"Add activity\" icon=\"add\" noborder handleOnClick={() => this.setState({ showCreateSubWorkflowModal: true, createSubWorkflowWorkflowId: w.id })} />\r\n                                                                            </NewCard>}\r\n                                                                      </div>\r\n                                                                      : null}\r\n\r\n                                                                  {ss.map((sw, index) => {\r\n                                                                    return [\r\n                                                                      <Draggable\r\n                                                                          isDragDisabled={viewOnly}\r\n                                                                          key={sw.id}\r\n                                                                          draggableId={\"sw*\" + sw.id}\r\n                                                                          index={index}>\r\n                                                                        {(providedDraggable: DraggableProvided, snapshotDraggable: DraggableStateSnapshot) => (\r\n                                                                            <div>\r\n                                                                              <div className=\"bug flex p-1 \"\r\n                                                                                   ref={providedDraggable.innerRef}\r\n                                                                                   {...providedDraggable.draggableProps}\r\n                                                                                   {...providedDraggable.dragHandleProps}\r\n                                                                                   style={this.getItemStyle(\r\n                                                                                       snapshotDraggable.isDragging,\r\n                                                                                       providedDraggable.draggableProps.style\r\n                                                                                   )}>\r\n                                                                                <div className=\"flex  w-full\">\r\n                                                                                  <Card color={sw.color} title={sw.title} link={this.props.url + \"/sw/\" + sw.id} rightLink={index === ss.length - 1 && !viewOnly ? () => this.setState({ showCreateSubWorkflowModal: true, createSubWorkflowWorkflowId: w.id }) : undefined} />\r\n                                                                                </div>\r\n\r\n                                                                              </div>\r\n                                                                              {providedDraggable.placeholder}\r\n                                                                            </div>\r\n                                                                        )}\r\n                                                                      </Draggable>\r\n\r\n                                                                    ]\r\n                                                                  })}\r\n                                                                  {providedDroppable.placeholder}\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                          }\r\n                                                        }\r\n                                                        }\r\n                                                      </Droppable>\r\n                                                    </div>\r\n                                                  </div>\r\n\r\n\r\n                                                </div>\r\n                                            )}\r\n                                          </Draggable>\r\n\r\n                                        ]\r\n                                      }\r\n                                  )}\r\n                                  {providedDroppable.placeholder}\r\n\r\n                                  <div className=\"text-xs p-2\">\r\n                                    {!viewOnly &&\r\n                                    <NewCard>\r\n                                      <Button title=\"Add goal\" icon=\"add\" noborder handleOnClick={() => this.setState({ showCreateWorkflowModal: true })} />\r\n                                    </NewCard>}\r\n                                  </div>\r\n\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                        )\r\n\r\n                      }\r\n                      }\r\n                    </Droppable>\r\n\r\n                    <Droppable droppableId={\"dm\"} type=\"MILESTONE\">\r\n                      {(providedDroppable: DroppableProvided, snapshotDroppable: DroppableStateSnapshot) => {\r\n\r\n                        return (\r\n                            <div className=\"flex\">\r\n                              <div className=\"flex flex-col \"\r\n                                   ref={providedDroppable.innerRef}\r\n                                   {...providedDroppable.droppableProps}\r\n                                   style={this.getListStyle(snapshotDroppable.isDraggingOver)}>\r\n                                {\r\n                                  milestones\r\n                                      .map((m, index) => {\r\n                                            const closed = !this.props.showClosedMilstones && m.status === CardStatus.CLOSED\r\n                                            return [\r\n                                              <Draggable\r\n                                                  isDragDisabled={viewOnly}\r\n                                                  key={m.id}\r\n                                                  draggableId={\"m*\" + m.id}\r\n                                                  index={index}>\r\n                                                {(providedDraggable: DraggableProvided, snapshotDraggable: DraggableStateSnapshot) => (\r\n                                                    <div key={m.id} className={\"flex bug p-1   \"}\r\n                                                         ref={providedDraggable.innerRef}\r\n                                                         {...providedDraggable.draggableProps}\r\n                                                         {...providedDraggable.dragHandleProps}\r\n                                                         style={this.getItemStyle(\r\n                                                             snapshotDraggable.isDragging,\r\n                                                             providedDraggable.draggableProps.style\r\n                                                         )}>\r\n\r\n                                                      <div className={\"flex  bg-gray-100 pb-1  border-b border-dashed  \"}>\r\n                                                        {\r\n                                                          closed ?\r\n                                                              <div className={\"flex  w-full  p-1  \"}>\r\n                                                                <div className=\"\">\r\n                                                                  <Card small color={m.color} status={m.status} title={m.title} link={this.props.url + \"/m/\" + m.id} />\r\n                                                                </div>\r\n\r\n                                                              </div>\r\n\r\n                                                              :\r\n                                                              <div className={\"flex  w-full  \"}>\r\n                                                                <div className=\"p-1\">\r\n                                                                  {\r\n\r\n                                                                    (() => {\r\n                                                                          const f = filterFeaturesOnMilestone(features, m.id)\r\n                                                                          return <Card bottomStatus={f.length ? closedFeatures(f).length + \"/\" + f.length : undefined} color={m.color} status={m.status} title={m.title} link={this.props.url + \"/m/\" + m.id} />\r\n                                                                        }\r\n                                                                    )()\r\n                                                                  }\r\n\r\n                                                                </div>\r\n\r\n                                                                {workflows.map((w) => {\r\n\r\n                                                                  const ss = getSubWorkflowByWorkflow(subWorkflows, w.id)\r\n                                                                  return [\r\n                                                                    <div className=\"flex flex-row pl-1 pr-1\" key={w.id}>\r\n                                                                      {ss.length === 0 ?\r\n                                                                          <div className=\"p-1\">\r\n                                                                            <EmptyCard />\r\n                                                                          </div>\r\n                                                                          : null}\r\n\r\n                                                                      {\r\n                                                                        ss.map(sw => {\r\n                                                                          const ff = filterFeaturesOnMilestoneAndSubWorkflow(features, m.id, sw.id)\r\n                                                                          return [\r\n                                                                            <Droppable key={sw.id} droppableId={\"df*\" + m.id + \"*\" + sw.id} type=\"FEATURE\">\r\n                                                                              {(providedDroppable: DroppableProvided, snapshotDroppable: DroppableStateSnapshot) => (\r\n                                                                                  <div className=\"flex flex-col fm-paren \"\r\n                                                                                       ref={providedDroppable.innerRef}\r\n                                                                                       {...providedDroppable.droppableProps}\r\n                                                                                       style={this.getListStyle(snapshotDroppable.isDraggingOver)}>\r\n                                                                                    {ff.map((f, index) => {\r\n                                                                                          return [\r\n                                                                                            <Draggable\r\n                                                                                                isDragDisabled={viewOnly}\r\n                                                                                                key={f.id}\r\n                                                                                                draggableId={\"f*\" + f.id}\r\n                                                                                                index={index}>\r\n                                                                                              {(providedDraggable: DraggableProvided, snapshotDraggable: DraggableStateSnapshot) => (\r\n                                                                                                  <div>\r\n\r\n                                                                                                    <div className=\"p-1\"\r\n                                                                                                         ref={providedDraggable.innerRef}\r\n                                                                                                         {...providedDraggable.draggableProps}\r\n                                                                                                         {...providedDraggable.dragHandleProps}\r\n                                                                                                         style={this.getItemStyle(\r\n                                                                                                             snapshotDraggable.isDragging,\r\n                                                                                                             providedDraggable.draggableProps.style\r\n                                                                                                         )}>\r\n\r\n                                                                                                      <Card color={f.color} status={f.status} title={f.title} link={this.props.url + \"/f/\" + f.id} bottomLink={index === ff.length - 1 && !viewOnly ? () => this.setState({ showCreateFeatureModal: true, createFeatureModalMilestoneId: m.id, createFeatureModalSubWorkflowId: sw.id }) : undefined} />\r\n                                                                                                    </div>\r\n                                                                                                    {providedDraggable.placeholder}\r\n                                                                                                  </div>\r\n                                                                                              )}\r\n                                                                                            </Draggable>\r\n                                                                                          ]\r\n                                                                                        }\r\n                                                                                    )}\r\n                                                                                    {providedDroppable.placeholder}\r\n\r\n                                                                                    {\r\n                                                                                      ff.length === 0 ?\r\n                                                                                          <div className=\"flex  text-xs p-1\">\r\n                                                                                            {!viewOnly ? <NewDimCard>\r\n                                                                                                  <button className=\" text-gray-400 text-2xl hover:text-gray-800\" onClick={() => this.setState({ showCreateFeatureModal: true, createFeatureModalMilestoneId: m.id, createFeatureModalSubWorkflowId: sw.id })}>+</button>\r\n                                                                                                </NewDimCard>\r\n                                                                                                :\r\n                                                                                                <EmptyCard />\r\n                                                                                            }\r\n                                                                                          </div>\r\n                                                                                          : null\r\n\r\n                                                                                    }\r\n\r\n                                                                                  </div>\r\n                                                                              )}\r\n                                                                            </Droppable>\r\n                                                                          ]\r\n                                                                        })\r\n\r\n                                                                      }\r\n\r\n                                                                    </div>\r\n                                                                  ]\r\n                                                                })}\r\n                                                              </div>\r\n                                                        }\r\n                                                      </div>\r\n                                                    </div>\r\n\r\n                                                )}\r\n                                              </Draggable>\r\n\r\n                                            ]\r\n                                          }\r\n                                      )\r\n                                }\r\n                                {providedDroppable.placeholder}\r\n                                <div className=\"flex   p-2  text-xs \">\r\n\r\n                                  {!viewOnly && <NewCard>\r\n                                    <Button title=\"Add release\" icon=\"add\" noborder handleOnClick={() => this.setState({ showCreateMilestoneModal: true })} />\r\n                                  </NewCard>}\r\n\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                        )\r\n\r\n                      }\r\n                      }\r\n                    </Droppable>\r\n                  </div>\r\n            }\r\n          </div>\r\n\r\n        </DragDropContext>\r\n      </div >\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board)\r\n","import { AppState } from '..'\r\nimport { IMilestone } from './types'\r\nimport { createSelector } from 'reselect'\r\n\r\nconst getMilestonesState = ((state: AppState) => state.milestones)\r\n\r\nexport const milestones = createSelector([getMilestonesState], s => {\r\n    return sortMilestones(s.items)\r\n})\r\n\r\n\r\nexport const sortMilestones = (mm: IMilestone[]) => {\r\n    return mm.sort(function (a, b) {\r\n        return a.rank === b.rank ? 0 : +(a.rank > b.rank) || -1;\r\n    }\r\n    )\r\n}\r\n\r\nexport const getMilestone = (ff: IMilestone[], id: string) => {\r\n    return ff.find(f => f.id === id)!\r\n}\r\n\r\nexport const filterMilestonesOnProject = (ff: IMilestone[], projectId: string) => {\r\n    return ff.filter(f => f.projectId === projectId)\r\n}\r\n\r\n\r\n\r\n","import { AppState } from '..'\r\nimport { createSelector } from 'reselect'\r\nimport { IWorkflow } from './types';\r\n\r\n\r\nconst getWorkflowsState = ((state: AppState) => state.workflows)\r\n\r\nexport const workflows = createSelector([getWorkflowsState], s => {\r\n    return sortWorkflows(s.items)\r\n})\r\n\r\n\r\nexport const sortWorkflows = (mm: IWorkflow[]) => {\r\n    return mm.sort(function (a, b) {\r\n        return a.rank === b.rank ? 0 : +(a.rank > b.rank) || -1;\r\n    }\r\n    )\r\n}\r\n\r\nexport const getWorkflow = (ff: IWorkflow[], id: string) => {\r\n    return ff.find(f => f.id === id)!\r\n}\r\n\r\nexport const filterWorkflowsOnProject = (ff: IWorkflow[], projectId: string) => {\r\n    return ff.filter(f => f.projectId === projectId)\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { AppState } from '../store'\r\nimport { deleteMilestone, updateMilestone, createMilestone } from '../store/milestones/actions';\r\nimport { deleteSubWorkflow, updateSubWorkflow, createSubWorkflow } from '../store/subworkflows/actions';\r\nimport { deleteWorkflow, updateWorkflow, createWorkflow } from '../store/workflows/actions';\r\nimport { deleteFeature, updateFeature, createFeature } from '../store/features/actions';\r\nimport { deleteProject, updateProject, createProject } from '../store/projects/actions';\r\nimport { Formik, FormikActions, FormikProps, Form, Field, FieldProps } from 'formik';\r\nimport { API_RENAME_MILESTONE } from \"../api\";\r\nimport { API_RENAME_SUBWORKFLOW, } from \"../api\";\r\nimport { API_RENAME_WORKFLOW } from \"../api\";\r\nimport { API_RENAME_FEATURE } from \"../api\";\r\nimport { API_RENAME_PROJECT } from \"../api\";\r\nimport * as Yup from 'yup';\r\nimport { IMilestone } from '../store/milestones/types';\r\nimport { application } from '../store/application/selectors';\r\nimport { IApplication } from '../store/application/types';\r\nimport { ISubWorkflow } from '../store/subworkflows/types';\r\nimport { EntityTypes } from '../core/card'\r\nimport { IWorkflow } from '../store/workflows/types';\r\nimport { IFeature } from '../store/features/types';\r\nimport onClickOutside from \"react-onclickoutside\";\r\nimport { IProject } from '../store/projects/types';\r\nimport { FocusEvent } from 'react'\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n    application: application(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    updateMilestone,\r\n    createMilestone,\r\n    deleteMilestone,\r\n    updateSubWorkflow,\r\n    createSubWorkflow,\r\n    deleteSubWorkflow,\r\n    updateWorkflow,\r\n    createWorkflow,\r\n    deleteWorkflow,\r\n    updateFeature,\r\n    createFeature,\r\n    deleteFeature,\r\n    updateProject,\r\n    createProject,\r\n    deleteProject\r\n}\r\n\r\ninterface PropsFromState {\r\n    application: IApplication\r\n}\r\n\r\ninterface PropsFromDispatch {\r\n    updateMilestone: typeof updateMilestone\r\n    createMilestone: typeof createMilestone\r\n    deleteMilestone: typeof deleteMilestone\r\n    updateSubWorkflow: typeof updateSubWorkflow\r\n    createSubWorkflow: typeof createSubWorkflow\r\n    deleteSubWorkflow: typeof deleteSubWorkflow\r\n    updateWorkflow: typeof updateWorkflow\r\n    createWorkflow: typeof createWorkflow\r\n    deleteWorkflow: typeof deleteWorkflow\r\n    updateFeature: typeof updateFeature\r\n    createFeature: typeof createFeature\r\n    deleteFeature: typeof deleteFeature\r\n    updateProject: typeof updateProject\r\n    createProject: typeof createProject\r\n    deleteProject: typeof deleteProject\r\n}\r\n\r\n\r\ninterface SelfProps {\r\n    card: EntityTypes\r\n    app: IApplication\r\n    url: string\r\n    close: () => void\r\n    viewOnly: boolean\r\n    demo: boolean\r\n}\r\ntype Props = PropsFromState & PropsFromDispatch & SelfProps\r\n\r\n\r\ninterface State {\r\n    edit: boolean\r\n}\r\n\r\n\r\nclass EntityDetailsTitle extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.submitForm = () => { }\r\n\r\n        this.state = { edit: false }\r\n    }\r\n\r\n\r\n    handleClickOutside = () => {\r\n        if (this.state.edit) {\r\n            this.setState({ edit: false })\r\n            this.submitForm()\r\n        }\r\n    }\r\n\r\n    submitForm: () => void;\r\n\r\n    submit = (values: { title: string }, actions: FormikActions<{ title: string }>) => {\r\n\r\n        switch (this.props.card.kind) {\r\n\r\n            case \"project\": {\r\n\r\n                const optimistic = this.props.card\r\n                optimistic.title = values.title\r\n                optimistic.lastModified = new Date().toISOString()\r\n                optimistic.lastModifiedByName = this.props.app.account === undefined ? \"demo\" : this.props.app.account!.name\r\n\r\n                this.props.updateProject(optimistic)\r\n\r\n                if (!this.props.demo) {\r\n                    API_RENAME_PROJECT(this.props.card.workspaceId, this.props.card.id, values.title)\r\n                        .then(response => {\r\n                            if (response.ok) {\r\n                                response.json().then((data: IProject) => {\r\n                                    this.props.updateProject(data)\r\n                                }\r\n                                )\r\n                            } else {\r\n                                alert(\"Something went wrong when trying to rename.\")\r\n                            }\r\n                        }\r\n                        )\r\n                }\r\n                break;\r\n            }\r\n\r\n\r\n            case \"milestone\": {\r\n\r\n                const optimistic = this.props.card\r\n                optimistic.title = values.title\r\n                optimistic.lastModified = new Date().toISOString()\r\n                optimistic.lastModifiedByName = this.props.app.account === undefined ? \"demo\" : this.props.app.account!.name\r\n\r\n                this.props.updateMilestone(optimistic)\r\n\r\n                if (!this.props.demo) {\r\n                    API_RENAME_MILESTONE(this.props.card.workspaceId, this.props.card.id, values.title)\r\n                        .then(response => {\r\n                            if (response.ok) {\r\n                                response.json().then((data: IMilestone) => {\r\n                                    this.props.updateMilestone(data)\r\n                                }\r\n                                )\r\n                            } else {\r\n                                alert(\"Something went wrong when trying to rename.\")\r\n                            }\r\n                        }\r\n                        )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"subworkflow\": {\r\n\r\n                const optimistic = this.props.card\r\n                optimistic.title = values.title\r\n                optimistic.lastModified = new Date().toISOString()\r\n                optimistic.lastModifiedByName = this.props.app.account === undefined ? \"demo\" : this.props.app.account!.name\r\n\r\n                this.props.updateSubWorkflow(optimistic)\r\n\r\n                if (!this.props.demo) {\r\n                    API_RENAME_SUBWORKFLOW(this.props.card.workspaceId, this.props.card.id, values.title)\r\n                        .then(response => {\r\n                            if (response.ok) {\r\n                                response.json().then((data: ISubWorkflow) => {\r\n                                    this.props.updateSubWorkflow(data)\r\n                                }\r\n                                )\r\n                            } else {\r\n                                alert(\"Something went wrong when trying to rename.\")\r\n                            }\r\n                        }\r\n                        )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"workflow\": {\r\n\r\n                const optimistic = this.props.card\r\n                optimistic.title = values.title\r\n                optimistic.lastModified = new Date().toISOString()\r\n                optimistic.lastModifiedByName = this.props.app.account === undefined ? \"demo\" : this.props.app.account!.name\r\n\r\n                this.props.updateWorkflow(optimistic)\r\n\r\n                if (!this.props.demo) {\r\n                    API_RENAME_WORKFLOW(this.props.card.workspaceId, this.props.card.id, values.title)\r\n                        .then(response => {\r\n                            if (response.ok) {\r\n                                response.json().then((data: IWorkflow) => {\r\n                                    this.props.updateWorkflow(data)\r\n                                }\r\n                                )\r\n                            } else {\r\n                                alert(\"Something went wrong when trying to rename.\")\r\n                            }\r\n                        }\r\n                        )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"feature\": {\r\n\r\n                const optimistic = this.props.card\r\n                optimistic.title = values.title\r\n                optimistic.lastModified = new Date().toISOString()\r\n                optimistic.lastModifiedByName = this.props.app.account === undefined ? \"demo\" : this.props.app.account!.name\r\n\r\n                this.props.updateFeature(optimistic)\r\n\r\n                if (!this.props.demo) {\r\n                    API_RENAME_FEATURE(this.props.card.workspaceId, this.props.card.id, values.title)\r\n                        .then(response => {\r\n                            if (response.ok) {\r\n                                response.json().then((data: IFeature) => {\r\n                                    this.props.updateFeature(data)\r\n                                }\r\n                                )\r\n                            } else {\r\n                                alert(\"Something went wrong when trying to rename.\")\r\n                            }\r\n                        }\r\n                        )\r\n                }\r\n                break;\r\n            }\r\n\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ edit: false })\r\n        actions.setSubmitting(false)\r\n    }\r\n\r\n    render() {\r\n        let closed = false\r\n        switch (this.props.card.kind) {\r\n            case \"milestone\":\r\n            case \"feature\": {\r\n                closed = this.props.card.status === \"CLOSED\"\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\" self-start w-full  \" >\r\n                <Formik\r\n                    initialValues={{ title: this.props.card.title }}\r\n\r\n                    validationSchema={Yup.object().shape({\r\n                        title: Yup.string()\r\n                            .min(1, 'Minimum 1 characters.')\r\n                            .max(200, 'Maximum 200 characters.')\r\n                            .required('Title required.')\r\n                    })}\r\n\r\n                    onSubmit={this.submit}\r\n                    render={(formikBag: FormikProps<{ title: string }>) => {\r\n\r\n                        this.submitForm = formikBag.submitForm\r\n\r\n                        const handleFocus = (ev: FocusEvent<HTMLInputElement>) => {\r\n                            ev.currentTarget.select()\r\n                        }\r\n\r\n                        return (\r\n                            <Form  >\r\n                                {formikBag.status && formikBag.status.msg && <div>{formikBag.status.msg}</div>}\r\n\r\n                                {this.state.edit ?\r\n                                    <Field\r\n                                        name=\"title\"\r\n                                        render={({ field, form }: FieldProps<{ title: string }>) => (\r\n                                            <div className=\"flex flex-col \">\r\n                                                <div >\r\n                                                    <input autoFocus onFocus={handleFocus} type=\"text\" {...field} placeholder=\"Title\" id=\"title\" className=\"rounded p-2  border w-full  text-xl\t\"/>\r\n                                                </div>\r\n                                                <div className=\"p-1 text-red-500 text-xs font-bold\">{form.touched.title && form.errors.title}</div>\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    :\r\n                                    <div className=\"text-xl mt-2 ml-2 border border-white\">\r\n                                        {this.props.viewOnly || closed ? <span className={closed ? \"line-through\" : \"\"}> {this.props.card.title}</span> : <button onClick={() => this.setState({ edit: true })}>{this.props.card.title}</button>}\r\n                                    </div>\r\n                                }\r\n                            </Form>\r\n\r\n                        )\r\n                    }}\r\n                />\r\n            </div>)\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(onClickOutside(EntityDetailsTitle))","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { AppState } from '../store'\r\nimport { updateMilestone } from '../store/milestones/actions';\r\nimport { updateSubWorkflow } from '../store/subworkflows/actions';\r\nimport { updateWorkflow } from '../store/workflows/actions';\r\nimport { updateFeature } from '../store/features/actions';\r\nimport { updateProject } from '../store/projects/actions';\r\nimport { Formik, FormikActions, FormikProps, Form, Field, FieldProps } from 'formik';\r\nimport { API_UPDATE_MILESTONE_DESCRIPTION, API_UPDATE_PROJECT_DESCRIPTION } from \"../api\";\r\nimport { API_UPDATE_SUBWORKFLOW_DESCRIPTION } from \"../api\";\r\nimport { API_UPDATE_WORKFLOW_DESCRIPTION } from \"../api\";\r\nimport { API_UPDATE_FEATURE_DESCRIPTION } from \"../api\";\r\nimport * as Yup from 'yup';\r\nimport { IMilestone } from '../store/milestones/types';\r\nimport { application } from '../store/application/selectors';\r\nimport { IApplication } from '../store/application/types';\r\nimport { ISubWorkflow } from '../store/subworkflows/types';\r\nimport { EntityTypes } from '../core/card'\r\nimport { IWorkflow } from '../store/workflows/types';\r\nimport { IFeature } from '../store/features/types';\r\nimport onClickOutside from \"react-onclickoutside\";\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { Button } from './elements';\r\nimport { IProject } from '../store/projects/types';\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n    application: application(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    updateMilestone,\r\n    updateSubWorkflow,\r\n    updateWorkflow,\r\n    updateFeature,\r\n    updateProject,\r\n}\r\n\r\ninterface PropsFromState {\r\n    application: IApplication\r\n}\r\n\r\ninterface PropsFromDispatch {\r\n    updateMilestone: typeof updateMilestone\r\n    updateSubWorkflow: typeof updateSubWorkflow\r\n    updateWorkflow: typeof updateWorkflow\r\n    updateFeature: typeof updateFeature\r\n    updateProject: typeof updateProject\r\n}\r\n\r\n\r\ninterface SelfProps {\r\n    entity: EntityTypes\r\n    app: IApplication\r\n    url: string\r\n    close: () => void\r\n    viewOnly: boolean\r\n    demo: boolean\r\n}\r\ntype Props = PropsFromState & PropsFromDispatch & SelfProps\r\n\r\n\r\ninterface State {\r\n    edit: boolean\r\n}\r\n\r\n\r\nclass EntityDetailsDescription extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.submitForm = () => { }\r\n\r\n        this.state = { edit: false }\r\n    }\r\n\r\n\r\n    handleClickOutside = () => {\r\n        if (this.state.edit) {\r\n            this.setState({ edit: false })\r\n            this.submitForm()\r\n        }\r\n    }\r\n\r\n    submitForm: () => void;\r\n\r\n\r\n    render() {\r\n        let closed = false\r\n        switch (this.props.entity.kind) {\r\n            case \"milestone\":\r\n            case \"feature\": {\r\n                closed = this.props.entity.status === \"CLOSED\"\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <div className=\" self-start w-full mb-4 \" >\r\n\r\n                <Formik\r\n                    initialValues={{ description: this.props.entity.description }}\r\n\r\n                    validationSchema={Yup.object().shape({\r\n                        description: Yup.string()\r\n                            .max(10000, 'Maximum 10000 characters.')\r\n                    })}\r\n\r\n                    onSubmit={(values: { description: string }, actions: FormikActions<{ description: string }>) => {\r\n\r\n                        switch (this.props.entity.kind) {\r\n                            case \"project\": {\r\n                                const optimistic = this.props.entity\r\n                                optimistic.description = values.description\r\n                                optimistic.lastModified = new Date().toISOString()\r\n                                optimistic.lastModifiedByName = this.props.app.account === undefined ? \"demo\" : this.props.app.account!.name\r\n\r\n                                this.props.updateProject(optimistic)\r\n\r\n                                if (!this.props.demo) {\r\n                                    API_UPDATE_PROJECT_DESCRIPTION(this.props.entity.workspaceId, this.props.entity.id, values.description)\r\n                                        .then(response => {\r\n                                            if (response.ok) {\r\n                                                response.json().then((data: IProject) => {\r\n                                                    this.props.updateProject(data)\r\n                                                }\r\n                                                )\r\n                                            } else {\r\n                                                alert(\"Something went wrong when updating description.\")\r\n                                            }\r\n                                        }\r\n                                        )\r\n                                }\r\n\r\n                                break;\r\n                            }\r\n\r\n                            case \"milestone\": {\r\n                                const optimistic = this.props.entity\r\n                                optimistic.description = values.description\r\n                                optimistic.lastModified = new Date().toISOString()\r\n                                optimistic.lastModifiedByName = this.props.app.account === undefined ? \"demo\" : this.props.app.account!.name\r\n\r\n                                this.props.updateMilestone(optimistic)\r\n                                if (!this.props.demo) {\r\n                                    API_UPDATE_MILESTONE_DESCRIPTION(this.props.entity.workspaceId, this.props.entity.id, values.description)\r\n                                        .then(response => {\r\n                                            if (response.ok) {\r\n                                                response.json().then((data: IMilestone) => {\r\n                                                    this.props.updateMilestone(data)\r\n                                                }\r\n                                                )\r\n                                            } else {\r\n                                                alert(\"Something went wrong when updating description.\")\r\n                                            }\r\n                                        }\r\n                                        )\r\n                                }\r\n\r\n                                break;\r\n                            }\r\n\r\n                            case \"subworkflow\": {\r\n                                const optimistic = this.props.entity\r\n                                optimistic.description = values.description\r\n                                optimistic.lastModified = new Date().toISOString()\r\n                                optimistic.lastModifiedByName = this.props.app.account === undefined ? \"demo\" : this.props.app.account!.name\r\n\r\n                                this.props.updateSubWorkflow(optimistic)\r\n\r\n                                if (!this.props.demo) {\r\n                                    API_UPDATE_SUBWORKFLOW_DESCRIPTION(this.props.entity.workspaceId, this.props.entity.id, values.description)\r\n                                        .then(response => {\r\n                                            if (response.ok) {\r\n                                                response.json().then((data: ISubWorkflow) => {\r\n                                                    this.props.updateSubWorkflow(data)\r\n                                                }\r\n                                                )\r\n                                            } else {\r\n                                                alert(\"Something went wrong when updating description.\")\r\n                                            }\r\n                                        }\r\n                                        )\r\n                                }\r\n\r\n                                break;\r\n                            }\r\n\r\n                            case \"workflow\": {\r\n                                const optimistic = this.props.entity\r\n                                optimistic.description = values.description\r\n                                optimistic.lastModified = new Date().toISOString()\r\n                                optimistic.lastModifiedByName = this.props.app.account === undefined ? \"demo\" : this.props.app.account!.name\r\n\r\n                                this.props.updateWorkflow(optimistic)\r\n\r\n                                if (!this.props.demo) {\r\n                                    API_UPDATE_WORKFLOW_DESCRIPTION(this.props.entity.workspaceId, this.props.entity.id, values.description)\r\n                                        .then(response => {\r\n                                            if (response.ok) {\r\n                                                response.json().then((data: IWorkflow) => {\r\n                                                    this.props.updateWorkflow(data)\r\n                                                }\r\n                                                )\r\n                                            } else {\r\n                                                alert(\"Something went wrong when updating description.\")\r\n                                            }\r\n                                        }\r\n                                        )\r\n                                }\r\n\r\n                                break;\r\n                            }\r\n\r\n                            case \"feature\": {\r\n                                const optimistic = this.props.entity\r\n                                optimistic.description = values.description\r\n                                optimistic.lastModified = new Date().toISOString()\r\n                                optimistic.lastModifiedByName = this.props.app.account === undefined ? \"demo\" : this.props.app.account!.name\r\n\r\n                                this.props.updateFeature(optimistic)\r\n\r\n                                if (!this.props.demo) {\r\n                                    API_UPDATE_FEATURE_DESCRIPTION(this.props.entity.workspaceId, this.props.entity.id, values.description)\r\n                                        .then(response => {\r\n                                            if (response.ok) {\r\n                                                response.json().then((data: IFeature) => {\r\n                                                    this.props.updateFeature(data)\r\n                                                }\r\n                                                )\r\n                                            } else {\r\n                                                alert(\"Something went wrong when updating description.\")\r\n                                            }\r\n                                        }\r\n                                        )\r\n\r\n                                }\r\n                                break;\r\n                            }\r\n\r\n                            default:\r\n                                break;\r\n                        }\r\n\r\n                        this.setState({ edit: false })\r\n                        actions.setSubmitting(false)\r\n                    }}\r\n                    render={(formikBag: FormikProps<{ description: string }>) => {\r\n\r\n                        this.submitForm = formikBag.submitForm\r\n\r\n                        return (\r\n                            <Form  >\r\n                                {formikBag.status && formikBag.status.msg && <div>{formikBag.status.msg}</div>}\r\n\r\n                                {this.state.edit ?\r\n                                    <Field\r\n                                        name=\"description\"\r\n                                        render={({ field, form }: FieldProps<{ description: string }>) => (\r\n                                            <div className=\"flex flex-col mt-1 \">\r\n                                                <div className=\"markdown\" >\r\n                                                    <textarea autoFocus rows={20} {...field} placeholder=\"Description\" id=\"description\" className=\"rounded p-2  border w-full  \t\"/>\r\n                                                </div>\r\n                                                <span className=\"text-xs right p-1\">The description supports formatting through <a rel=\"noopener noreferrer\" target=\"_blank\" className=\"link\" href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\">Markdown</a>.</span>\r\n                                                <div className=\"p-1 text-red-500 text-xs font-bold\">{form.touched.description && form.errors.description}</div>\r\n                                            </div>\r\n                                        )}\r\n                                    />\r\n                                    :\r\n                                    <div className=\" mt-2 ml-2 border border-white  \">\r\n                                        <div>\r\n                                            {this.props.entity.description.length === 0 ? (\r\n                                                <div>\r\n                                                    <em>No description.</em>\r\n                                                </div>)\r\n                                                :\r\n                                                <div>\r\n                                                    <div className=\"text-left markdown overflow-auto\">\r\n                                                        <ReactMarkdown source={this.props.entity.description} linkTarget=\"_blank\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            }\r\n                                            <div className=\"mt-1\">\r\n                                                {!(this.props.viewOnly || closed) && <Button title=\"Edit description\" icon=\"edit\" handleOnClick={() => this.setState({ edit: true })} />}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                }\r\n                            </Form>\r\n                        )\r\n                    }}\r\n                />\r\n            </div>)\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(onClickOutside(EntityDetailsDescription))","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { AppState } from '../store'\r\nimport { deleteMilestone, updateMilestone, createMilestone } from '../store/milestones/actions';\r\nimport { deleteSubWorkflow, updateSubWorkflow, createSubWorkflow } from '../store/subworkflows/actions';\r\nimport { deleteWorkflow, updateWorkflow, createWorkflow } from '../store/workflows/actions';\r\nimport { deleteFeature, updateFeature, createFeature } from '../store/features/actions';\r\nimport { deleteProject, updateProject, createProject } from '../store/projects/actions';\r\nimport { API_DELETE_MILESTONE, API_DELETE_SUBWORKFLOW, API_DELETE_WORKFLOW, API_DELETE_FEATURE, API_DELETE_PROJECT, API_CLOSE_FEATURE, API_OPEN_FEATURE, API_CLOSE_MILESTONE, API_OPEN_MILESTONE, API_CHANGE_FEATURE_COLOR, API_CHANGE_MILESTONE_COLOR, API_CHANGE_WORKFLOW_COLOR, API_CHANGE_SUBWORKFLOW_COLOR } from \"../api\";\r\nimport TimeAgo from 'react-timeago'\r\nimport { Button } from './elements';\r\nimport { application } from '../store/application/selectors';\r\nimport { IApplication } from '../store/application/types';\r\nimport { EntityTypes } from '../core/card'\r\nimport CardDetailsTitle from './EntityDetailsTitle'\r\nimport CardDetailsDescription from './EntityDetailsDescription';\r\nimport { CardStatus, colorToBackgroundColorClass, Colors, colorToBorderColorClass, Color } from '../core/misc';\r\nimport ContextMenu from './ContextMenu';\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  application: application(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  updateMilestone,\r\n  createMilestone,\r\n  deleteMilestone,\r\n  updateSubWorkflow,\r\n  createSubWorkflow,\r\n  deleteSubWorkflow,\r\n  updateWorkflow,\r\n  createWorkflow,\r\n  deleteWorkflow,\r\n  updateFeature,\r\n  createFeature,\r\n  deleteFeature,\r\n  updateProject,\r\n  createProject,\r\n  deleteProject,\r\n}\r\n\r\ninterface PropsFromState {\r\n  application: IApplication\r\n}\r\n\r\ninterface PropsFromDispatch {\r\n  updateMilestone: typeof updateMilestone\r\n  createMilestone: typeof createMilestone\r\n  deleteMilestone: typeof deleteMilestone\r\n  updateSubWorkflow: typeof updateSubWorkflow\r\n  createSubWorkflow: typeof createSubWorkflow\r\n  deleteSubWorkflow: typeof deleteSubWorkflow\r\n  updateWorkflow: typeof updateWorkflow\r\n  createWorkflow: typeof createWorkflow\r\n  deleteWorkflow: typeof deleteWorkflow\r\n  updateFeature: typeof updateFeature\r\n  createFeature: typeof createFeature\r\n  deleteFeature: typeof deleteFeature\r\n  updateProject: typeof updateProject\r\n  createProject: typeof createProject\r\n  deleteProject: typeof deleteProject\r\n}\r\n\r\n\r\ninterface SelfProps {\r\n  entity: EntityTypes\r\n  url: string\r\n  close: () => void\r\n  viewOnly: boolean\r\n  demo: boolean\r\n}\r\ntype Props = PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n  copySuccess: boolean\r\n  editTitle: boolean\r\n}\r\n\r\ninterface formValues {\r\n  title: string\r\n}\r\n\r\nclass EntityDetailsBody extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this.state = { editTitle: false, copySuccess: false }\r\n  }\r\n\r\n  urlRef = React.createRef<HTMLInputElement>()\r\n\r\n  copyToClipboard = (url: string) => {\r\n    const listener = (e: ClipboardEvent) => {\r\n      e.clipboardData!.setData('text/plain', url);\r\n      e.preventDefault();\r\n    }\r\n\r\n    document.addEventListener('copy', listener)\r\n    document.execCommand('copy');\r\n    document.removeEventListener('copy', listener);\r\n    this.setState({ copySuccess: true })\r\n  }\r\n\r\n  handleDelete = () => {\r\n    const card = this.props.entity\r\n\r\n    switch (card.kind) {\r\n      case \"project\": {\r\n        this.props.deleteProject(card.id)\r\n        if (!this.props.demo) {\r\n          API_DELETE_PROJECT(card.workspaceId, card.id)\r\n            .then(response => {\r\n              if (response.ok) {\r\n\r\n\r\n              } else {\r\n                alert(\"Something went wrong.\")\r\n              }\r\n            })\r\n        }\r\n\r\n        break;\r\n\r\n      }\r\n\r\n\r\n      case \"milestone\": {\r\n\r\n        this.props.deleteMilestone(card.id)\r\n        if (!this.props.demo) {\r\n          API_DELETE_MILESTONE(card.workspaceId, card.id)\r\n            .then(response => {\r\n              if (response.ok) {\r\n\r\n              } else {\r\n                alert(\"Something went wrong.\")\r\n              }\r\n            })\r\n        }\r\n        break;\r\n\r\n      }\r\n\r\n      case \"subworkflow\": {\r\n\r\n        this.props.deleteSubWorkflow(card.id)\r\n        if (!this.props.demo) {\r\n          API_DELETE_SUBWORKFLOW(card.workspaceId, card.id)\r\n            .then(response => {\r\n              if (response.ok) {\r\n\r\n              } else {\r\n                alert(\"Something went wrong.\")\r\n              }\r\n            })\r\n        }\r\n        break;\r\n      }\r\n\r\n      case \"workflow\": {\r\n\r\n        this.props.deleteWorkflow(card.id)\r\n        if (!this.props.demo) {\r\n          API_DELETE_WORKFLOW(card.workspaceId, card.id)\r\n            .then(response => {\r\n              if (response.ok) {\r\n\r\n              } else {\r\n                alert(\"Something went wrong.\")\r\n              }\r\n            })\r\n        }\r\n        break;\r\n      }\r\n\r\n      case \"feature\": {\r\n\r\n        this.props.deleteFeature(card.id)\r\n        if (!this.props.demo) {\r\n          API_DELETE_FEATURE(card.workspaceId, card.id)\r\n            .then(response => {\r\n              if (response.ok) {\r\n\r\n              } else {\r\n                alert(\"Something went wrong.\")\r\n              }\r\n            })\r\n        }\r\n        break;\r\n      }\r\n\r\n\r\n      default:\r\n        break;\r\n    }\r\n    this.props.close()\r\n  }\r\n\r\n  handleClose = () => {\r\n    const card = this.props.entity\r\n\r\n    switch (card.kind) {\r\n      case \"feature\": {\r\n\r\n        this.props.updateFeature({ ...card, status: CardStatus.CLOSED, lastModified: new Date().toISOString(), lastModifiedByName: this.props.application.account === undefined ? \"demo\" : this.props.application.account.name })\r\n        if (!this.props.demo) {\r\n          API_CLOSE_FEATURE(card.workspaceId, card.id)\r\n            .then(response => {\r\n              if (response.ok) {\r\n              } else {\r\n                alert(\"Something went wrong.\")\r\n              }\r\n            })\r\n        }\r\n        break;\r\n      }\r\n\r\n      case \"milestone\": {\r\n\r\n        this.props.updateMilestone({ ...card, status: CardStatus.CLOSED, lastModified: new Date().toISOString(), lastModifiedByName: this.props.application.account === undefined ? \"demo\" : this.props.application.account.name })\r\n        if (!this.props.demo) {\r\n          API_CLOSE_MILESTONE(card.workspaceId, card.id)\r\n            .then(response => {\r\n              if (response.ok) {\r\n              } else {\r\n                alert(\"Something went wrong.\")\r\n              }\r\n            })\r\n        }\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.props.close()\r\n  }\r\n\r\n  handleOpen = () => {\r\n    const card = this.props.entity\r\n\r\n    switch (card.kind) {\r\n      case \"feature\": {\r\n        this.props.updateFeature({ ...card, status: CardStatus.OPEN, lastModified: new Date().toISOString(), lastModifiedByName: this.props.application.account === undefined ? \"demo\" : this.props.application.account.name })\r\n        if (!this.props.demo) {\r\n          API_OPEN_FEATURE(card.workspaceId, card.id)\r\n            .then(response => {\r\n              if (response.ok) {\r\n              } else {\r\n                alert(\"Something went wrong.\")\r\n              }\r\n            })\r\n        }\r\n        break;\r\n      }\r\n\r\n      case \"milestone\": {\r\n        this.props.updateMilestone({ ...card, status: CardStatus.OPEN, lastModified: new Date().toISOString(), lastModifiedByName: this.props.application.account === undefined ? \"demo\" : this.props.application.account.name })\r\n        if (!this.props.demo) {\r\n          API_OPEN_MILESTONE(card.workspaceId, card.id)\r\n            .then(response => {\r\n              if (response.ok) {\r\n              } else {\r\n                alert(\"Something went wrong.\")\r\n              }\r\n            })\r\n        }\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  handleChangeColor = (color: Color) => {\r\n    const card = this.props.entity\r\n\r\n    switch (card.kind) {\r\n      case \"feature\": {\r\n\r\n        this.props.updateFeature({ ...card, color: color, lastModified: new Date().toISOString(), lastModifiedByName: this.props.application.account === undefined ? \"demo\" : this.props.application.account.name })\r\n        if (!this.props.demo) {\r\n          API_CHANGE_FEATURE_COLOR(card.workspaceId, card.id, color)\r\n            .then(response => {\r\n              if (response.ok) {\r\n              } else {\r\n                alert(\"Something went wrong.\")\r\n              }\r\n            })\r\n        }\r\n        break;\r\n      }\r\n\r\n      case \"milestone\": {\r\n        this.props.updateMilestone({ ...card, color: color, lastModified: new Date().toISOString(), lastModifiedByName: this.props.application.account === undefined ? \"demo\" : this.props.application.account.name })\r\n        if (!this.props.demo) {\r\n          API_CHANGE_MILESTONE_COLOR(card.workspaceId, card.id, color)\r\n            .then(response => {\r\n              if (response.ok) {\r\n              } else {\r\n                alert(\"Something went wrong.\")\r\n              }\r\n            })\r\n        }\r\n        break;\r\n      }\r\n\r\n      case \"workflow\": {\r\n        this.props.updateWorkflow({ ...card, color: color, lastModified: new Date().toISOString(), lastModifiedByName: this.props.application.account === undefined ? \"demo\" : this.props.application.account.name })\r\n        if (!this.props.demo) {\r\n          API_CHANGE_WORKFLOW_COLOR(card.workspaceId, card.id, color)\r\n            .then(response => {\r\n              if (response.ok) {\r\n              } else {\r\n                alert(\"Something went wrong.\")\r\n              }\r\n            })\r\n        }\r\n        break;\r\n      }\r\n\r\n      case \"subworkflow\": {\r\n        this.props.updateSubWorkflow({ ...card, color: color, lastModified: new Date().toISOString(), lastModifiedByName: this.props.application.account === undefined ? \"demo\" : this.props.application.account.name })\r\n        if (!this.props.demo) {\r\n          API_CHANGE_SUBWORKFLOW_COLOR(card.workspaceId, card.id, color)\r\n            .then(response => {\r\n              if (response.ok) {\r\n              } else {\r\n                alert(\"Something went wrong.\")\r\n              }\r\n            })\r\n        }\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let open = true\r\n    switch (this.props.entity.kind) {\r\n      case \"milestone\":\r\n      case \"feature\":\r\n        open = this.props.entity.status === CardStatus.OPEN\r\n        break;\r\n      default:\r\n    }\r\n\r\n    return (\r\n      <div className=\"flex flex-col\">\r\n        <div className={\"flex w-full h-4 \" + (this.props.entity.kind === \"project\" ? \"\" : colorToBackgroundColorClass(this.props.entity.color))}/>\r\n        <div className={\"flex w-full h-full flex-row bg-white overflow-auto \"}>\r\n\r\n          <div className=\"flex flex-col w-full p-2  \">\r\n            <CardDetailsTitle demo={this.props.demo} viewOnly={this.props.viewOnly} card={this.props.entity} app={this.props.application} url={this.props.url} close={this.props.close} />\r\n            <CardDetailsDescription demo={this.props.demo} viewOnly={this.props.viewOnly} entity={this.props.entity} app={this.props.application} url={this.props.url} close={this.props.close} />\r\n          </div>\r\n          <div className=\"flex flex-col w-64 bg-gray-200 p-2\">\r\n            <div className=\"flex justify-end items-center\">\r\n              {!this.props.viewOnly ?\r\n                <ContextMenu icon=\"more_horiz\">\r\n                  <div className=\"rounded bg-white shadow-md  absolute mt-8 top-0 right-0 min-w-full text-xs\" >\r\n                    <ul className=\"list-reset\">\r\n                      <li><Button noborder title=\"Delete\" icon=\"delete\" warning handleOnClick={this.handleDelete} /></li>\r\n                    </ul>\r\n                  </div>\r\n                </ContextMenu>\r\n                :\r\n                null\r\n              }\r\n              <div>\r\n                <button onClick={() => this.props.close()}> <i className=\"material-icons \">clear</i></button>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-col text-xs\">\r\n              <div className=\" mb-1 font-bold\">\r\n                Permalink\r\n            </div>\r\n              <div className=\"flex items-center flex-grow\">\r\n                <div className=\"flex flex-grow \" ><input onClick={() => this.urlRef.current!.select()} ref={this.urlRef} readOnly className=\"p-1 w-full  border mr-1\" value={process.env.REACT_APP_BASE_URL + this.props.url} /></div>\r\n                <div>\r\n                  {document.queryCommandSupported('copy') && <button onClick={() => this.copyToClipboard(process.env.REACT_APP_BASE_URL + this.props.url)}><i style={{ fontSize: \"16px\" }} className=\"material-icons text-gray-800\">file_copy</i></button>}\r\n                </div>\r\n                <div >\r\n                  <i style={{ fontSize: \"16px\" }} className={\"material-icons  text-green-500\" + (!this.state.copySuccess ? \" invisible\" : \"\")}>check_circle</i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {!this.props.viewOnly && open ?\r\n              <div>\r\n\r\n                {(() => {\r\n                  switch (this.props.entity.kind) {\r\n                    case \"workflow\":\r\n                    case \"subworkflow\":\r\n                    case \"milestone\":\r\n                    case \"feature\": {\r\n                      const color = this.props.entity.color\r\n                      return <div className=\"flex flex-col text-xs mt-3 \">\r\n                        <div className=\" mb-1 font-bold\">\r\n                          Color</div>\r\n                        <div className=\"flex items-center flex-grow\">\r\n                          <div className=\"flex flex-row\">{\r\n                            Colors.map(x => {\r\n                              return [\r\n                                <div key={x} className=\"flex flex-col  mr-1\">\r\n                                  <button onClick={() => this.handleChangeColor(x)} title={x} className={\"flex h-3 w-3 border \" + colorToBackgroundColorClass(x) + \" \" + colorToBorderColorClass(x)} />\r\n                                  <div className=\"flex justify-center\" >\r\n                                    {(color === x) ? <div>●</div> : null}\r\n                                  </div>\r\n                                </div>\r\n                              ]\r\n                            })} </div>\r\n\r\n                        </div>\r\n                      </div>\r\n                    }\r\n                    default:\r\n                  }\r\n                })()\r\n                }\r\n              </div>\r\n              :\r\n              null\r\n            }\r\n\r\n\r\n            <div className=\"flex flex-col text-xs mt-3 \">\r\n              <div className=\" mb-1 font-bold\">\r\n                Created\r\n            </div>\r\n              <div className=\"flex items-center flex-grow\">\r\n                <span className=\"font-medium\"><TimeAgo date={this.props.entity.createdAt} /> by {this.props.entity.createdByName}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-col text-xs mt-3 \">\r\n              <div className=\" mb-1 font-bold\">\r\n                Last modified\r\n            </div>\r\n              <div className=\"flex items-center flex-grow  \">\r\n                <span className=\"font-medium\"><TimeAgo date={this.props.entity.lastModified} /> by {this.props.entity.lastModifiedByName}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col text-xs mt-3 \">\r\n              <div className=\"flex items-center flex-grow  \">\r\n                {!this.props.viewOnly ?\r\n                  <div>\r\n                    {(() => {\r\n                      switch (this.props.entity.kind) {\r\n                        //case \"feature\" || \"milestone\": {\r\n                        case \"milestone\":\r\n                        case \"feature\":\r\n                          if (this.props.entity.status === \"OPEN\") {\r\n                            return <Button icon=\"check\" iconColor=\"text-green-500\" title=\"Close card\" handleOnClick={this.handleClose} />\r\n                          }\r\n                          if (this.props.entity.status === \"CLOSED\") {\r\n                            return <Button secondary title=\"Reopen card\" handleOnClick={this.handleOpen} />\r\n                          }\r\n\r\n                          break;\r\n                        default:\r\n\r\n                      }\r\n                    })()\r\n                    }\r\n\r\n                  </div>\r\n                  :\r\n                  null\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div >\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EntityDetailsBody)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { AppState } from '../store'\r\nimport onClickOutside from \"react-onclickoutside\";\r\nimport EntityDetailsBody from './EntityDetailsBody';\r\nimport { EntityTypes } from '../core/card'\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\ninterface PropsFromState { }\r\n\r\ninterface PropsFromDispatch {\r\n}\r\n\r\n\r\ninterface SelfProps {\r\n  entity: EntityTypes\r\n  url: string\r\n  close: () => void\r\n  viewOnly: boolean\r\n  demo: boolean\r\n}\r\ntype Props = PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n\r\n}\r\n\r\n\r\nclass EntityDetailsModal extends Component<Props, State> {\r\n\r\n  keydownHandler = (event: KeyboardEvent) => {\r\n    if (event.keyCode === 27) {\r\n      this.props.close()\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.keydownHandler, false);\r\n  }\r\n\r\n  render() {\r\n    const Body = class Body extends Component<{ demo: boolean; viewOnly: boolean, url: string, card: EntityTypes, close: () => void }> {\r\n\r\n      handleClickOutside = () => {\r\n        this.props.close()\r\n      }\r\n\r\n      render() {\r\n        return (\r\n          <div className=\" w-full  max-w-xl   fm-max-dialog  overflow-y-auto \">\r\n            <EntityDetailsBody demo={this.props.demo} viewOnly={this.props.viewOnly} url={this.props.url} entity={this.props.card} close={this.props.close}/>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const DialogWithClickOutside = onClickOutside(Body)\r\n\r\n    return (\r\n      <div style={{ background: ' rgba(0,0,0,.75)' }} className=\"fixed p-5 z-0 top-0 left-0 h-full w-full  flex items-start  bg-gray-100 text-sm\" >\r\n        <DialogWithClickOutside demo={this.props.demo} viewOnly={this.props.viewOnly} url={this.props.url} card={this.props.entity} close={this.props.close}/>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EntityDetailsModal)\r\n","import { IProject } from './types'\r\nimport { AppState } from '..'\r\nimport { createSelector } from 'reselect'\r\n\r\nconst getProjectsState = ((state: AppState) => state.projects)\r\n\r\nexport const projects = createSelector([getProjectsState], s => {\r\n    return sortProjectsByCreateDate(s.items)\r\n})\r\n\r\nexport const sortProjects = (pp: IProject[]): IProject[] => {\r\n    return pp.sort((a, b) => a.title.localeCompare(b.title))\r\n}\r\n\r\nexport const sortProjectsByCreateDate = (pp: IProject[]): IProject[] => {\r\n    return pp.sort((a, b) => (new Date(b.createdAt).getTime() - (new Date(a.createdAt).getTime())))\r\n}\r\n\r\nexport const getProjectById = (pp: IProject[], id: string) => pp.find(x => x.id === id)\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { AppState } from '../store'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { IApplication } from '../store/application/types';\r\nimport { milestones, getMilestone } from '../store/milestones/selectors';\r\nimport { features, getFeature } from '../store/features/selectors';\r\nimport { workflows, getWorkflow } from '../store/workflows/selectors';\r\nimport { IMilestone } from '../store/milestones/types';\r\nimport EntityDetailsModal from '../components/EntityDetailsModal';\r\nimport { getSubWorkflow, subWorkflows } from '../store/subworkflows/selectors';\r\nimport { ISubWorkflow } from '../store/subworkflows/types';\r\nimport { IWorkflow } from '../store/workflows/types';\r\nimport { IFeature } from '../store/features/types';\r\nimport { projects, getProjectById } from '../store/projects/selectors';\r\nimport { IProject } from '../store/projects/types';\r\nimport { getWorkspaceByName, getMembership, application } from '../store/application/selectors';\r\nimport { isEditor } from '../core/misc';\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  application: application(state),\r\n  milestones: milestones(state),\r\n  subWorkflows: subWorkflows(state),\r\n  workflows: workflows(state),\r\n  features: features(state),\r\n  projects: projects(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\ninterface PropsFromState {\r\n  application: IApplication\r\n  milestones: IMilestone[]\r\n  subWorkflows: ISubWorkflow[]\r\n  workflows: IWorkflow[]\r\n  features: IFeature[]\r\n  projects: IProject[]\r\n}\r\n\r\ninterface PropsFromDispatch {\r\n}\r\n\r\ninterface RouterProps extends RouteComponentProps<{\r\n  projectId: string\r\n  projectId2: string\r\n  milestoneId: string\r\n  subWorkflowId: string\r\n  workflowId: string\r\n  featureId: string\r\n  workspaceName: string\r\n}> { }\r\n\r\n\r\ninterface SelfProps {\r\n}\r\n\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n\r\n}\r\n\r\ninterface formValues {\r\n  title: string\r\n}\r\n\r\nclass EntityDetailsPage extends Component<Props, State> {\r\n\r\n  close = () => {\r\n    this.props.history.push(\"/\" + this.props.match.params.workspaceName + \"/projects/\" + this.props.match.params.projectId)\r\n  };\r\n\r\n  render() {\r\n    const ws = getWorkspaceByName(this.props.application, this.props.match.params.workspaceName)!\r\n    const member = getMembership(this.props.application, ws.id)\r\n    const viewOnly = !isEditor(member.level)\r\n\r\n    if (this.props.match.params.milestoneId) {\r\n      const ms = getMilestone(this.props.milestones, this.props.match.params.milestoneId)\r\n      return (\r\n        <EntityDetailsModal demo={false} viewOnly={viewOnly} entity={ms} url={this.props.match.url} close={this.close} />\r\n      )\r\n    }\r\n\r\n    else if (this.props.match.params.subWorkflowId) {\r\n      const ms = getSubWorkflow(this.props.subWorkflows, this.props.match.params.subWorkflowId)\r\n      return (\r\n        <EntityDetailsModal demo={false} viewOnly={viewOnly} entity={ms} url={this.props.match.url} close={this.close} />\r\n      )\r\n    }\r\n\r\n    else if (this.props.match.params.workflowId) {\r\n      const ms = getWorkflow(this.props.workflows, this.props.match.params.workflowId)\r\n      return (\r\n        <EntityDetailsModal demo={false} viewOnly={viewOnly} entity={ms} url={this.props.match.url} close={this.close} />\r\n      )\r\n    }\r\n\r\n    else if (this.props.match.params.featureId) {\r\n      const p = getFeature(this.props.features, this.props.match.params.featureId)\r\n      return (\r\n        <EntityDetailsModal demo={false} viewOnly={viewOnly} entity={p} url={this.props.match.url} close={this.close} />\r\n      )\r\n    }\r\n\r\n    else if (this.props.match.params.projectId2) {\r\n      const p = getProjectById(this.props.projects, this.props.match.params.projectId2)!\r\n      return (\r\n        <EntityDetailsModal demo={false} viewOnly={viewOnly} entity={p} url={this.props.match.url} close={this.close} />\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EntityDetailsPage)\r\n","import React, { Component } from 'react';\r\nimport Board from '../components/Board';\r\nimport EntityDetailsPage from './EntityDetailsPage';\r\nimport { application, getWorkspaceByName, getMembership } from '../store/application/selectors';\r\nimport { projects, getProjectById } from '../store/projects/selectors';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { Route, Switch, Link } from 'react-router-dom'\r\nimport { IProject } from '../store/projects/types';\r\nimport { loadMilestones } from '../store/milestones/actions';\r\nimport { loadWorkflows } from '../store/workflows/actions';\r\nimport { milestones, filterMilestonesOnProject } from '../store/milestones/selectors';\r\nimport { AppState } from '../store'\r\nimport { connect } from 'react-redux'\r\nimport { API_GET_PROJECT, API_GET_PROJECT_RESP } from '../api';\r\nimport { IApplication } from '../store/application/types';\r\nimport { IMilestone } from '../store/milestones/types';\r\nimport { features } from '../store/features/selectors';\r\nimport { filterWorkflowsOnProject } from '../store/workflows/selectors';\r\nimport { subWorkflows } from '../store/subworkflows/selectors';\r\nimport { ISubWorkflow } from '../store/subworkflows/types';\r\nimport { workflows } from '../store/workflows/selectors';\r\nimport { IWorkflow } from '../store/workflows/types';\r\nimport { loadSubWorkflows } from '../store/subworkflows/actions';\r\nimport { loadFeatures } from '../store/features/actions';\r\nimport { IFeature } from '../store/features/types';\r\nimport { isEditor } from '../core/misc';\r\nimport { Button } from '../components/elements';\r\nimport queryString from 'query-string'\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n    application: application(state),\r\n    projects: projects(state),\r\n    milestones: milestones(state),\r\n    subWorkflows: subWorkflows(state),\r\n    workflows: workflows(state),\r\n    features: features(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loadMilestones,\r\n    loadWorkflows,\r\n    loadSubWorkflows,\r\n    loadFeatures\r\n}\r\n\r\ninterface PropsFromState {\r\n    application: IApplication\r\n    projects: IProject[]\r\n    milestones: IMilestone[]\r\n    subWorkflows: ISubWorkflow[]\r\n    workflows: IWorkflow[]\r\n    features: IFeature[]\r\n}\r\ninterface RouterProps extends RouteComponentProps<{\r\n    workspaceName: string\r\n    projectId: string\r\n}> { }\r\ninterface PropsFromDispatch {\r\n    loadMilestones: typeof loadMilestones\r\n    loadWorkflows: typeof loadWorkflows\r\n    loadSubWorkflows: typeof loadSubWorkflows\r\n    loadFeatures: typeof loadFeatures\r\n}\r\ninterface SelfProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n    projectFound: boolean\r\n    loading: boolean\r\n    showClosedMilstones: boolean\r\n    copySuccess: boolean\r\n    demo: boolean\r\n}\r\n\r\nclass ProjectPage extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            projectFound: false,\r\n            loading: true,\r\n            showClosedMilstones: false,\r\n            copySuccess: false,\r\n            demo: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { projectId, workspaceName } = this.props.match.params\r\n        const p = getProjectById(this.props.projects, projectId)\r\n        const ws = getWorkspaceByName(this.props.application, workspaceName)!\r\n\r\n        if (p) {\r\n\r\n            API_GET_PROJECT(ws.id, p.id)\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        response.json().then((data: API_GET_PROJECT_RESP) => {\r\n                            this.props.loadMilestones(data.milestones)\r\n                            this.props.loadWorkflows(data.workflows)\r\n                            this.props.loadSubWorkflows(data.subWorkflows)\r\n                            this.props.loadFeatures(data.features)\r\n                            this.setState({ loading: false })\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n        if (p) this.setState({ projectFound: true })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { projectId } = this.props.match.params\r\n        const proj = getProjectById(this.props.projects, projectId)!\r\n\r\n        if (!proj) {\r\n            this.props.history.push(\"/\" + this.props.match.params.workspaceName)\r\n        }\r\n\r\n        const values = queryString.parse(this.props.location.search)\r\n        const demo = values.demo as string\r\n        if (demo === \"1\") this.setState({ demo: true })\r\n\r\n    }\r\n\r\n\r\n    copyToClipboard = (url: string) => {\r\n        const listener = (e: ClipboardEvent) => {\r\n            e.clipboardData!.setData('text/plain', url);\r\n            e.preventDefault();\r\n        }\r\n\r\n        document.addEventListener('copy', listener)\r\n        document.execCommand('copy');\r\n        document.removeEventListener('copy', listener);\r\n        this.setState({ copySuccess: true })\r\n    }\r\n\r\n    urlRef = React.createRef<HTMLInputElement>()\r\n\r\n    render() {\r\n        const { projectId, workspaceName } = this.props.match.params\r\n        const ws = getWorkspaceByName(this.props.application, workspaceName)!\r\n        const proj = getProjectById(this.props.projects, projectId)!\r\n        const member = getMembership(this.props.application, ws.id)\r\n\r\n        const viewOnly = !isEditor(member.level)\r\n\r\n        return (\r\n            proj ?\r\n                this.state.loading ?\r\n                    <div className=\"p-2\">Loading data...</div>\r\n                    :\r\n                    <div className=\"overflow-x-auto\">\r\n                        <div className=\"flex flex-row p-2 \">\r\n                            <div className=\"flex flex-grow m-1 text-xl items-center\">\r\n                                <div className=\"flex\"><span className=\"font-semibold\">{proj.title}  </span></div>\r\n                                {viewOnly && <div className=\"flex ml-2\"><span className=\"font-semibold p-1 bg-gray-200 text-xs \"> VIEW ONLY  </span></div>}\r\n                            </div>\r\n                            <div className=\"flex items-center\">\r\n                                <div className=\" flex items-center  text-sm\">\r\n\r\n                                    {ws.allowExternalSharing &&\r\n                                        <div >\r\n                                            <div className=\"flex items-center flex-grow\">\r\n                                                <div className=\"flex flex-grow mr-1 \" ><Link target=\"_blank\" className=\"link\" to={\"/link/\" + proj.externalLink}>External link (view only) </Link></div>\r\n                                                <div>\r\n                                                    {document.queryCommandSupported('copy') && <button onClick={() => this.copyToClipboard(process.env.REACT_APP_BASE_URL + \"/link/\" + proj.externalLink)}><i style={{ fontSize: \"16px\" }} className=\"material-icons text-gray-800\">file_copy</i></button>}\r\n                                                </div>\r\n                                                <div >\r\n                                                    <i style={{ fontSize: \"16px\" }} className={\"material-icons  text-green-500\" + (!this.state.copySuccess ? \" invisible\" : \"\")}>check_circle</i>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    }\r\n                                    <div className=\"ml-2\">\r\n                                        {this.state.showClosedMilstones ?\r\n                                            <Button iconColor=\"text-green-500\" icon=\"toggle_on\" title=\"Show closed milestones\" handleOnClick={() => this.setState({ showClosedMilstones: false })} />\r\n                                            :\r\n                                            <Button icon=\"toggle_off \" title=\"Show closed milestones\" handleOnClick={() => this.setState({ showClosedMilstones: true })} />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"ml-4\"><Link to={this.props.match.url + \"/p/\" + this.props.match.params.projectId}><i className=\"material-icons text-gray-600\">settings</i></Link></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Board\r\n                            showClosedMilstones={this.state.showClosedMilstones}\r\n                            viewOnly={viewOnly}\r\n                            url={this.props.match.url}\r\n                            features={this.props.features}\r\n                            workflows={filterWorkflowsOnProject(this.props.workflows, projectId)}\r\n                            subWorkflows={this.props.subWorkflows}\r\n                            milestones={filterMilestonesOnProject(this.props.milestones, projectId)}\r\n                            projectId={projectId}\r\n                            workspaceId={ws.id}\r\n                            demo={this.state.demo}\r\n                        />\r\n\r\n\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={() => null} />\r\n                            <Route exact path={this.props.match.path + \"/m/:milestoneId\"} component={EntityDetailsPage} />\r\n                            <Route exact path={this.props.match.path + \"/sw/:subWorkflowId\"} component={EntityDetailsPage} />\r\n                            <Route exact path={this.props.match.path + \"/f/:featureId\"} component={EntityDetailsPage} />\r\n                            <Route exact path={this.props.match.path + \"/w/:workflowId\"} component={EntityDetailsPage} />\r\n                            <Route exact path={this.props.match.path + \"/p/:projectId2\"} component={EntityDetailsPage} />\r\n\r\n                        </Switch>\r\n                    </div>\r\n                : <div>Project not found</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectPage)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { AppState } from '../store'\r\nimport { application, getWorkspaceByName } from '../store/application/selectors'\r\nimport { createProject } from '../store/projects/actions';\r\nimport { Dispatch } from \"react\";\r\nimport { AllActions } from \"../store\";\r\nimport { IProject } from \"../store/projects/types\";\r\nimport { Formik, FormikActions, FormikProps, Form, Field, FieldProps } from 'formik';\r\nimport { API_CREATE_PROJECT } from \"../api\";\r\nimport { v4 as uuid } from 'uuid'\r\nimport * as Yup from 'yup';\r\nimport { IApplication } from '../store/application/types';\r\nimport { Button } from './elements';\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  application: application(state)\r\n})\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  createProject\r\n}\r\n\r\ninterface PropsFromState {\r\n  application: IApplication\r\n\r\n}\r\n\r\ninterface PropsFromDispatch {\r\n  createProject: typeof createProject,\r\n}\r\ninterface SelfProps {\r\n  workspaceName: string,\r\n  close: () => void\r\n}\r\ntype Props = PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n  show: boolean\r\n}\r\n\r\nconst Schema = Yup.object().shape({\r\n  title: Yup.string()\r\n    .min(1, 'Project minimum 1 characters.')\r\n    .max(200, 'Project  maximum 200 characters.')\r\n    .required('Title required.')\r\n});\r\n\r\n\r\nexport const submit = (dispatch: Dispatch<AllActions>) => {\r\n  return (workspaceId: string, title: string) => {\r\n\r\n    const projectId = uuid()\r\n\r\n    return API_CREATE_PROJECT(workspaceId, projectId, title)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          response.json().then((data: IProject) => {\r\n            dispatch(createProject(data))\r\n          })\r\n        }\r\n      }\r\n      )\r\n  }\r\n}\r\n\r\n\r\ninterface formValues {\r\n  title: string\r\n}\r\n\r\nclass CreateProjectModal extends Component<Props, State> {\r\n\r\n  keydownHandler = (event: KeyboardEvent) => {\r\n    if (event.keyCode === 27) {\r\n      this.props.close()\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.keydownHandler, false);\r\n  }\r\n\r\n  render() {\r\n\r\n    const bg = {\r\n      background: ' rgba(0,0,0,.75)',\r\n    };\r\n\r\n    return (\r\n      <div style={bg} className=\"fixed p-1 z-0 top-0 left-0 w-full h-full flex items-center justify-center bg-gray-100 text-sm\">\r\n        <div className=\"bg-white p-3 w-full  max-w-xs\">\r\n\r\n          <Formik\r\n            initialValues={{ title: '' }}\r\n\r\n            validationSchema={Schema}\r\n\r\n            onSubmit={(values: formValues, actions: FormikActions<formValues>) => {\r\n              const projectId = uuid()\r\n\r\n              const workspaceId = getWorkspaceByName(this.props.application, this.props.workspaceName)!.id\r\n\r\n              API_CREATE_PROJECT(workspaceId, projectId, values.title)\r\n                .then(response => {\r\n                  if (response.ok) {\r\n                    response.json().then((data: IProject) => {\r\n                      this.props.createProject(data)\r\n                      this.props.close()\r\n                    })\r\n                  } else {\r\n                    response.json().then(data => {\r\n                      switch (data.message) {\r\n                        case \"title_invalid\": {\r\n                          actions.setFieldError(\"title\", \"Title is invalid.\")\r\n                          break\r\n                        }\r\n                        default: {\r\n                          break\r\n                        }\r\n                      }\r\n                    })\r\n                  }\r\n                })\r\n\r\n\r\n              actions.setSubmitting(false)\r\n            }}\r\n            render={(formikBag: FormikProps<formValues>) => (\r\n              <Form>\r\n                {formikBag.status && formikBag.status.msg && <div>{formikBag.status.msg}</div>}\r\n\r\n                <div className=\"flex flex-col \">\r\n                  <div className=\"mb-2\"> Create project </div>\r\n\r\n                  <div>\r\n\r\n                    <Field\r\n                      name=\"title\"\r\n                      render={({ field, form }: FieldProps<formValues>) => (\r\n\r\n                        <div className=\"flex flex-col\">\r\n                          <div><input autoFocus type=\"text\" {...field} placeholder=\"Title\" id=\"title\" className=\"rounded p-2 border w-full\t\"/></div>\r\n                          <div className=\"p-1 text-red-500 text-xs font-bold\">{form.touched.title && form.errors.title}</div>\r\n                        </div>\r\n\r\n                      )}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"flex justify-end\">\r\n                    <div className=\"flex flex-row\">\r\n                      <div className=\"mr-1\">\r\n                        <Button submit title=\"Create\" primary />\r\n                      </div>\r\n                      <div>\r\n                        <Button title=\"Cancel\" handleOnClick={this.props.close} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </Form>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProjectModal)\r\n","import { Button, CardLayout } from '../components/elements'\r\nimport React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { AppState } from '../store'\r\nimport { application, getWorkspaceByName, getMembership } from '../store/application/selectors';\r\nimport { connect } from 'react-redux'\r\nimport { IApplication } from '../store/application/types';\r\nimport { projects } from '../store/projects/selectors';\r\nimport { IProject } from '../store/projects/types';\r\nimport { Link } from 'react-router-dom';\r\nimport CreateProjectModal from '../components/CreateProjectModal'\r\nimport TimeAgo from 'react-timeago'\r\nimport { isEditor } from '../core/misc';\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n    application: application(state),\r\n    projects: projects(state)\r\n})\r\n\r\nconst mapDispatchToProps = {}\r\n\r\ninterface PropsFromState {\r\n    application: IApplication\r\n    projects: IProject[]\r\n}\r\ninterface RouterProps extends RouteComponentProps<{\r\n    workspaceName: string\r\n}> { }\r\ninterface PropsFromDispatch {\r\n\r\n}\r\ninterface SelfProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n    show: boolean\r\n    showAddProjectModal: boolean\r\n}\r\n\r\nclass WorkspacePage extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            show: false,\r\n            showAddProjectModal: false\r\n        }\r\n    }\r\n\r\n    openProjectModal = () => {\r\n        this.setState(state => ({\r\n            showAddProjectModal: true\r\n\r\n        }))\r\n    }\r\n\r\n    closeProjectModal = () => {\r\n        this.setState(state => ({\r\n            showAddProjectModal: false\r\n\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const { workspaceName } = this.props.match.params\r\n\r\n        const ws = getWorkspaceByName(this.props.application, this.props.match.params.workspaceName)!\r\n        const member = getMembership(this.props.application, ws.id)\r\n        const viewOnly = !isEditor(member.level)\r\n\r\n        return (\r\n            <div>\r\n\r\n                {this.state.showAddProjectModal ?\r\n                    <CreateProjectModal workspaceName={workspaceName} close={this.closeProjectModal} />\r\n                    : null\r\n                }\r\n\r\n                <div className=\"  \">\r\n                    <div className=\"p-2 flex flex-row mb-2 items-center\">\r\n                        <div ><h3>Projects</h3></div>\r\n                        {!viewOnly && <div className=\"ml-2\"> <Button title=\"New project\" primary icon=\"add\" handleOnClick={() => this.openProjectModal()} />\r\n                        </div>}\r\n\r\n                    </div>\r\n                    <div>\r\n\r\n                    </div>\r\n                    <CardLayout>\r\n                        <div >\r\n                            {(this.props.projects.length > 0) ?\r\n\r\n                                <div className=\"flex flex-col  max-w-lg  \" >\r\n                                    <div className=\"p-2  \">\r\n                                        {this.props.projects.length}  project(s)\r\n\r\n                                    </div>\r\n\r\n                                    <div >\r\n                                        {\r\n                                            this.props.projects.map(x =>\r\n                                                (<div className=\" p-2\" key={x.id}>\r\n                                                    <div className=\"mb-1\">\r\n                                                        <b><Link className=\"\" to={this.props.location.pathname + \"/projects/\" + x.id}>{x.title} </Link></b>\r\n                                                    </div>\r\n                                                    <div className=\"text-xs\">Created <TimeAgo date={x.createdAt} /> by {x.createdByName}</div>\r\n                                                </div>)\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                : \"No projects\"\r\n                            }\r\n                        </div>\r\n                    </CardLayout>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkspacePage)\r\n","import { Button } from '../components/elements'\r\nimport React, { Component, FunctionComponent, useState, Dispatch } from 'react';\r\nimport { RouteComponentProps, } from 'react-router'\r\nimport { AppState, AllActions } from '../store'\r\nimport { application, getWorkspaceByName, getMembership, getSubscription } from '../store/application/selectors';\r\nimport { connect } from 'react-redux'\r\nimport { IApplication, IMembership, IInvite } from '../store/application/types';\r\nimport TimeAgo from 'react-timeago'\r\nimport { API_GET_MEMBERS, API_UPDATE_MEMBER_LEVEL, API_DELETE_MEMBER, API_GET_INVITES, API_CREATE_INVITE, API_DELETE_INVITE, API_LEAVE, API_DELETE_WORKSPACE, API_RESEND_INVITE, API_CHANGE_ALLOW_EXTERNAL_SHARING } from '../api';\r\nimport { Formik, FormikActions, FormikProps, Form, Field, } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { newMessage } from '../store/application/actions';\r\nimport { isEditor, SubscriptionLevels, memberLevelToTitle } from '../core/misc';\r\nimport { CardLayout } from '../components/elements';\r\nimport { receiveApp } from '../store/application/actions';\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n    application: application(state),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AllActions>) => ({\r\n    newMessage: newMessage(dispatch),\r\n    receiveApp: receiveApp\r\n})\r\n\r\ninterface PropsFromState {\r\n    application: IApplication\r\n}\r\ninterface RouterProps extends RouteComponentProps<{\r\n    workspaceName: string\r\n}> { }\r\ninterface PropsFromDispatch {\r\n    newMessage: ReturnType<typeof newMessage>\r\n    receiveApp: typeof receiveApp\r\n}\r\ninterface SelfProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n    myMembership?: IMembership\r\n    members: IMembership[]\r\n    invites: IInvite[]\r\n    showMemberDetails: boolean\r\n    memberId: string\r\n    reallySureWarning: boolean\r\n    allowExternalSharing: boolean\r\n    isCompany: boolean,\r\n    euVat: string,\r\n    country: string\r\n    externalBillingEmail: string\r\n}\r\n\r\nclass WorkspaceSettingsPage extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            members: [],\r\n            invites: [],\r\n            showMemberDetails: false,\r\n            memberId: \"\",\r\n            reallySureWarning: false,\r\n            allowExternalSharing: false,\r\n            isCompany: false,\r\n            euVat: \"\",\r\n            country: \"\",\r\n            externalBillingEmail: \"\"\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.loadMembers()\r\n        this.loadInvites()\r\n\r\n        const ws = getWorkspaceByName(this.props.application, this.props.match.params.workspaceName)!\r\n        this.setState({ allowExternalSharing: ws.allowExternalSharing })\r\n\r\n    }\r\n\r\n    loadInvites() {\r\n        const ws = getWorkspaceByName(this.props.application, this.props.match.params.workspaceName)!\r\n        API_GET_INVITES(ws.id)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    response.json().then((data: IInvite[]) => {\r\n                        this.setState({ invites: data })\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    loadMembers() {\r\n        const ws = getWorkspaceByName(this.props.application, this.props.match.params.workspaceName)!\r\n\r\n        API_GET_MEMBERS(ws.id)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    response.json().then((data: IMembership[]) => {\r\n                        this.setState({ members: data })\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const ws = getWorkspaceByName(this.props.application, this.props.match.params.workspaceName)!\r\n        const m = getMembership(this.props.application, ws.id)\r\n        const s = getSubscription(this.props.application, ws.id)\r\n        const hasExpired = false\r\n        type changeRoleForm = { level: string }\r\n        type inviteForm = { email: string, level: string }\r\n\r\n        type orgInfoForm = { isCompany: boolean, country: string, euVat: string, externalBillingEmail: string }\r\n\r\n        const MemberBox: FunctionComponent<{ member: IMembership }> = (props) => {\r\n            const [show, setShow] = useState(false);\r\n\r\n            const isMyself = props.member.accountId === this.props.application.account!.id\r\n            return (\r\n                <div>\r\n                    <div className=\"flex flex-row  \">\r\n                        <div className=\"flex flex-grow flex-col\">\r\n                            <div className=\"\">{props.member.name} ({props.member.email}) {isMyself && <span className=\"bg-gray-200 text-xs font-bold text-black p-1 \">THIS IS YOU</span>} </div>\r\n                            <div className=\"text-xs mt-1\"> {memberLevelToTitle(props.member.level)}. Joined <TimeAgo date={props.member.createdAt} />.</div>\r\n                        </div>\r\n\r\n                        {!isMyself && <div className=\"\"><button onClick={() => setShow(!show)}> <i className=\"material-icons\">expand_more</i></button> </div>}\r\n\r\n                    </div >\r\n\r\n                    {\r\n                        !isMyself && show &&\r\n                        <div className=\"flex flex-row \">\r\n\r\n                            <div className=\"text-xs mt-3 flex-grow\">\r\n                                {!hasExpired && <Formik\r\n                                    initialValues={{ level: props.member.level }}\r\n\r\n                                    validationSchema={Yup.object().shape({\r\n                                        level: Yup.string()\r\n                                            .required('Required.')\r\n                                    })}\r\n\r\n                                    onSubmit={(values: changeRoleForm, actions: FormikActions<changeRoleForm>) => {\r\n\r\n                                        API_UPDATE_MEMBER_LEVEL(ws.id, props.member.id, values.level)\r\n                                            .then((response) => {\r\n\r\n                                                response.json().then((data: any) => {\r\n                                                    if (response.ok) {\r\n                                                        this.loadMembers()\r\n                                                        this.props.newMessage(\"success\", \"role changed\")\r\n                                                    }\r\n                                                    else {\r\n                                                        this.props.newMessage(\"fail\", data.message)\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                            )\r\n                                    }}\r\n\r\n                                    render={(formikBag: FormikProps<changeRoleForm>) => (\r\n                                        <Form>\r\n                                            {formikBag.status && formikBag.status.msg && <div>{formikBag.status.msg}</div>}\r\n\r\n                                            <div>\r\n                                                <Field\r\n                                                    name=\"level\"\r\n                                                    component=\"select\"\r\n                                                    className=\"rounded p-1 border mr-2\"\r\n                                                >\r\n                                                    <option value=\"VIEWER\">{memberLevelToTitle(\"VIEWER\")}</option>\r\n                                                    <option value=\"EDITOR\">{memberLevelToTitle(\"EDITOR\")}</option>\r\n                                                    <option value=\"ADMIN\">{memberLevelToTitle(\"ADMIN\")}</option>\r\n                                                    <option value=\"OWNER\">{memberLevelToTitle(\"OWNER\")}</option>\r\n                                                </Field>\r\n                                                <Button secondary small submit title=\"Change role\" />\r\n                                            </div>\r\n                                        </Form>\r\n                                    )}\r\n                                />}\r\n\r\n\r\n                            </div>\r\n\r\n                            <div className=\"flex text-xs mt-3 ml-3  justify-right\">\r\n\r\n                                <Formik\r\n                                    initialValues={{ level: props.member.level }}\r\n\r\n                                    validationSchema={Yup.object().shape({\r\n                                        level: Yup.string()\r\n                                            .required('Required.')\r\n                                    })}\r\n\r\n                                    onSubmit={(values: {}, actions: FormikActions<{}>) => {\r\n\r\n                                        API_DELETE_MEMBER(ws.id, props.member.id)\r\n                                            .then((response) => {\r\n                                                if (response.ok) {\r\n                                                    this.loadMembers()\r\n                                                    this.props.newMessage(\"success\", \"membership removed\")\r\n                                                }\r\n                                                else {\r\n                                                    response.json().then((data: any) => {\r\n                                                        this.props.newMessage(\"fail\", data.message)\r\n                                                    })\r\n                                                }\r\n                                            }\r\n                                            )\r\n                                    }}\r\n\r\n                                    render={(formikBag: FormikProps<changeRoleForm>) => (\r\n                                        <Form>\r\n                                            {formikBag.status && formikBag.status.msg && <div>{formikBag.status.msg}</div>}\r\n                                            <div>\r\n                                                <Button warning submit small title=\"Delete\" />\r\n                                            </div>\r\n                                        </Form>\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div >\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div >\r\n                <h3 className=\"p-2\" > Workspace settings</h3 >\r\n\r\n                <CardLayout title=\"My membership\">\r\n                    <p className=\"text-sm\"> {memberLevelToTitle(m.level)}. Joined <TimeAgo date={m.createdAt} />.</p>\r\n                    {\r\n                        m.level !== \"OWNER\" ?   // Owners are not allowed to leave their own workspace\r\n                            <div>\r\n                                <Formik\r\n                                    initialValues={{ email: \"\", level: 10 }}\r\n\r\n                                    onSubmit={(values: {}, actions: FormikActions<{}>) => {\r\n\r\n                                        API_LEAVE(ws.id)\r\n                                            .then((response) => {\r\n                                                if (response.ok) {\r\n                                                    this.props.newMessage(\"success\", \"left workspace\")\r\n                                                    window.location.href = \"/\";\r\n                                                }\r\n                                                else {\r\n                                                    response.json().then((data: any) => {\r\n                                                        this.props.newMessage(\"fail\", data.message)\r\n                                                    })\r\n                                                }\r\n                                            }\r\n                                            )\r\n                                    }}\r\n\r\n                                    render={(formikBag: FormikProps<{}>) => (\r\n                                        <Form>\r\n                                            <p className=\"text-xs\"><Button small warning submit title=\"Leave workspace\" /></p>\r\n                                        </Form>\r\n                                    )}\r\n                                />\r\n\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n                </CardLayout>\r\n\r\n\r\n                {(m.level === \"ADMIN\" || m.level === \"OWNER\") && s.level === SubscriptionLevels.PRO ?\r\n                    <CardLayout title=\"External link\">\r\n                        {\r\n                            (() => {\r\n\r\n                                const submit = () => {\r\n\r\n                                    API_CHANGE_ALLOW_EXTERNAL_SHARING(ws.id, !this.state.allowExternalSharing)\r\n                                        .then((response) => {\r\n                                            if (response.ok) {\r\n                                                this.setState({ allowExternalSharing: !this.state.allowExternalSharing })\r\n\r\n                                                this.props.newMessage(\"success\", \"setting changed\")\r\n                                            }\r\n                                            else {\r\n                                                response.json().then((data: any) => {\r\n                                                    this.props.newMessage(\"fail\", data.message)\r\n                                                })\r\n                                            }\r\n                                        }\r\n                                        )\r\n                                }\r\n\r\n                                return (\r\n                                    <div >\r\n                                        <p><input onChange={submit} checked={this.state.allowExternalSharing} type=\"checkbox\" /> Projects can be shared with people who are not members of the workspace (view only).</p>\r\n                                    </div>\r\n                                )\r\n                            })()\r\n\r\n                        }\r\n                    </CardLayout>\r\n                    :\r\n                    null\r\n                }\r\n\r\n\r\n\r\n                {(m.level === \"ADMIN\" || m.level === \"OWNER\") ?\r\n                    <CardLayout title=\"Workspace invites\">\r\n                        {\r\n                            <div>\r\n                                {!hasExpired &&\r\n                                    <div className=\"\">\r\n                                        <Formik\r\n                                            initialValues={{ email: \"\", level: \"VIEWER\" }}\r\n\r\n                                            validationSchema={Yup.object().shape({\r\n                                                email: Yup.string()\r\n                                                    .email('Invalid.')\r\n                                                    .required('Required.'),\r\n                                                level: Yup.string()\r\n                                                    .required('Required.')\r\n                                            })}\r\n\r\n                                            onSubmit={(values: inviteForm, actions: FormikActions<inviteForm>) => {\r\n                                                API_CREATE_INVITE(ws.id, values.email, values.level)\r\n                                                    .then((response) => {\r\n                                                        if (response.ok) {\r\n                                                            this.loadInvites()\r\n                                                            this.props.newMessage(\"success\", \"invite sent\")\r\n                                                        }\r\n                                                        else {\r\n                                                            response.json().then((data: any) => {\r\n                                                                this.props.newMessage(\"fail\", data.message)\r\n                                                            })\r\n                                                        }\r\n                                                    }\r\n                                                    )\r\n                                            }}\r\n\r\n                                            render={(formikBag: FormikProps<inviteForm>) => (\r\n                                                <Form>\r\n                                                    {formikBag.status && formikBag.status.msg && <div>{formikBag.status.msg}</div>}\r\n\r\n                                                    <div className=\"flex flex-col \">\r\n                                                        <div className=\"flex flex-col m-1\">\r\n\r\n                                                            <Field\r\n                                                                name=\"email\"\r\n                                                                component=\"input\"\r\n                                                                className=\"rounded p-2 border  w-64  \"\r\n                                                                placeholder=\"email\"\r\n                                                            >\r\n                                                            </Field>\r\n                                                            {formikBag.touched.email && formikBag.errors.email && <div className=\"text-red-500 font-bold text-xs\">{formikBag.errors.email}</div>}\r\n                                                        </div>\r\n\r\n                                                        <div className=\"flex flex-col m-1\">\r\n                                                            <Field\r\n                                                                name=\"level\"\r\n                                                                component=\"select\"\r\n                                                                className=\"rounded p-2 border  w-64  bg-white  \"\r\n                                                            >\r\n                                                                <option value=\"VIEWER\">{memberLevelToTitle(\"VIEWER\")}</option>\r\n                                                                <option value=\"EDITOR\">{memberLevelToTitle(\"EDITOR\")}</option>\r\n                                                                <option value=\"ADMIN\">{memberLevelToTitle(\"ADMIN\")}</option>\r\n                                                                <option value=\"OWNER\">{memberLevelToTitle(\"OWNER\")}</option>\r\n                                                            </Field>\r\n                                                        </div>\r\n                                                        <div className=\"text-xs m-1\"><Button submit secondary title=\"Send invitation\" /></div>\r\n                                                    </div>\r\n                                                </Form>\r\n                                            )}\r\n                                        />\r\n                                    </div>\r\n                                }\r\n\r\n                                <div className=\"mt-2\">\r\n                                    <div className=\"flex flex-col  max-w-2xl  \" >\r\n                                        <div className=\"p-3 text-sm \">\r\n                                            {this.state.invites.length}  pending invite(s)\r\n                                        </div>\r\n                                        <div className=\" p-1  \">\r\n                                            {\r\n                                                this.state.invites.map(x =>\r\n                                                    (<div className=\" p-2 w-full\" key={x.id}>\r\n                                                        <p>{x.email}</p>\r\n                                                        <p className=\"\">Invited as <b>{memberLevelToTitle(x.level)}</b> by {x.createdByName} <TimeAgo date={x.createdAt} />. </p>\r\n                                                        <div className=\"flex flex-row  mt-1\">\r\n                                                            <div>\r\n                                                                <Formik\r\n                                                                    initialValues={{ email: \"\", level: 10 }}\r\n\r\n                                                                    onSubmit={(values: {}, actions: FormikActions<{}>) => {\r\n\r\n\r\n                                                                        API_DELETE_INVITE(ws.id, x.id)\r\n                                                                            .then((response) => {\r\n                                                                                if (response.ok) {\r\n                                                                                    this.loadInvites()\r\n                                                                                    this.props.newMessage(\"success\", \"invite canceled\")\r\n                                                                                }\r\n                                                                                else {\r\n                                                                                    response.json().then((data: any) => {\r\n                                                                                        this.props.newMessage(\"fail\", data.message)\r\n                                                                                    })\r\n                                                                                }\r\n                                                                            }\r\n                                                                            )\r\n                                                                    }}\r\n\r\n                                                                    render={(formikBag: FormikProps<{}>) => (\r\n                                                                        <Form>\r\n                                                                            <span className=\"text-xs\"><Button small secondary submit title=\"Cancel invite\" /></span>\r\n                                                                        </Form>\r\n                                                                    )}\r\n                                                                />\r\n                                                            </div>\r\n                                                            {!hasExpired && <div className=\"ml-1\">\r\n                                                                <Formik\r\n                                                                    initialValues={{}}\r\n                                                                    onSubmit={(values: {}, actions: FormikActions<{}>) => {\r\n                                                                        API_RESEND_INVITE(ws.id, x.id)\r\n                                                                            .then((response) => {\r\n                                                                                if (response.ok) {\r\n                                                                                    this.loadInvites()\r\n                                                                                    this.props.newMessage(\"success\", \"invite resent\")\r\n                                                                                }\r\n                                                                                else {\r\n                                                                                    response.json().then((data: any) => {\r\n                                                                                        this.props.newMessage(\"fail\", data.message)\r\n                                                                                    })\r\n                                                                                }\r\n                                                                            }\r\n                                                                            )\r\n                                                                    }}\r\n\r\n                                                                    render={(formikBag: FormikProps<{}>) => (\r\n                                                                        <Form>\r\n                                                                            <span className=\"text-xs\"><Button small secondary submit title=\"Resend invite\" /></span>\r\n                                                                        </Form>\r\n                                                                    )}\r\n                                                                />\r\n                                                            </div>}\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        }\r\n\r\n                    </CardLayout>\r\n                    :\r\n                    null\r\n                }\r\n\r\n                {(m.level === \"ADMIN\" || m.level === \"OWNER\") ? // Admin or higher}\r\n                    <CardLayout title=\"Members\">\r\n                        {\r\n\r\n                            <div>\r\n\r\n                                <div className=\"flex flex-col  text-sm mt-2   max-w-2xl \" >\r\n                                    <div className=\"p-2  \">\r\n                                        {this.state.members.length}  member(s),  {this.state.members.filter(x => isEditor(x.level)).length} editor(s)\r\n                                    </div>\r\n                                    <div className=\" text-sm   \">\r\n                                        {\r\n                                            this.state.members.map(x =>\r\n                                                (<div className=\" p-2 w-full\" key={x.id}>\r\n                                                    <MemberBox member={x} />\r\n                                                </div>\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </CardLayout>\r\n                    :\r\n                    null\r\n                }\r\n\r\n\r\n\r\n                {\r\n                    (m.level === \"OWNER\") ? // Admin or higher\r\n                        <CardLayout title=\"Delete workspace\">\r\n                            <div>\r\n                                <p >All projects in this workspace will be deleted permanently. You need to cancel any active subscriptions before the workspace can be deleted.  </p>\r\n\r\n                                <Formik\r\n                                    initialValues={{}}\r\n                                    onSubmit={(values: {}, actions: FormikActions<{}>) => {\r\n                                        API_DELETE_WORKSPACE(ws.id)\r\n                                            .then((response) => {\r\n                                                if (response.ok) {\r\n                                                    this.props.newMessage(\"success\", \"workspace deleted\")\r\n                                                    window.location.href = \"/\";\r\n                                                }\r\n                                                else {\r\n                                                    response.json().then((data: any) => {\r\n                                                        this.props.newMessage(\"fail\", data.message)\r\n                                                    })\r\n                                                }\r\n                                            }\r\n                                            )\r\n                                    }}\r\n\r\n                                    render={(formikBag: FormikProps<{}>) => (\r\n                                        <Form>\r\n                                            <p className=\"text-xs\"><Button secondary button handleOnClick={() => this.setState({ reallySureWarning: true })} title=\"Delete workspace\" /> {this.state.reallySureWarning && <Button submit warning title=\"Yes, I am really sure!\" />} </p>\r\n                                        </Form>\r\n                                    )}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </CardLayout>\r\n                        :\r\n                        null\r\n                }\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkspaceSettingsPage)","import React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { AppState } from '../store'\r\nimport { getWorkspaceByName, application } from '../store/application/selectors';\r\nimport { connect } from 'react-redux'\r\nimport NotFound from './NotFound';\r\nimport ProjectPage from './ProjectPage';\r\nimport Header from '../components/Header';\r\nimport { IApplication } from '../store/application/types';\r\nimport { loadProjects } from '../store/projects/actions';\r\nimport { projects } from '../store/projects/selectors';\r\nimport { IProject } from '../store/projects/types';\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport ProjectsPage from './ProjectsPage';\r\nimport { API_GET_PROJECTS } from '../api'\r\nimport WorkspaceSettingsPage from './WorkspaceSettingsPage';\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n    application: application(state),\r\n    projects: projects(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    loadProjects: loadProjects\r\n}\r\n\r\ninterface PropsFromState {\r\n    application: IApplication\r\n    projects: IProject[]\r\n}\r\ninterface RouterProps extends RouteComponentProps<{\r\n    workspaceName: string\r\n}> { }\r\ninterface PropsFromDispatch {\r\n    //loadProjectsRequest: typeof loadProjectsRequest\r\n    loadProjects: typeof loadProjects\r\n}\r\ninterface SelfProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n    loading: boolean\r\n    notFound: boolean\r\n}\r\n\r\nclass WorkspacePage extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            notFound: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { workspaceName } = this.props.match.params\r\n        const ws = getWorkspaceByName(this.props.application, workspaceName)\r\n\r\n        if (!ws) this.setState({ notFound: true })\r\n\r\n        if (ws) {\r\n            API_GET_PROJECTS(ws.id)\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        response.json().then((data: IProject[]) => {\r\n                            this.props.loadProjects(data)\r\n                            this.setState({ loading: false })\r\n                        })\r\n                    }\r\n                }\r\n                )\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { workspaceName } = this.props.match.params\r\n\r\n        return (\r\n            this.state.notFound ?\r\n                <div><Redirect to=\"/\" /></div>\r\n                :\r\n                this.state.loading ?\r\n                    <div className=\"p-2\">Loading data...</div>\r\n                    :\r\n                    (\r\n                        <div>\r\n                            <div>\r\n                                <Header account={this.props.application.account!} workspaceName={workspaceName} />\r\n\r\n                                <Switch>\r\n                                    <Route exact strict path={this.props.match.path} component={ProjectsPage} />\r\n                                    <Route exact strict path={this.props.match.path + \"/settings\"} component={WorkspaceSettingsPage} />\r\n                                    <Route strict path={this.props.match.path + \"/projects/:projectId\"} component={ProjectPage} />\r\n                                    <Route path={this.props.match.path} component={NotFound} />\r\n                                </Switch>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkspacePage)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { AppState } from '../store'\r\nimport { application } from '../store/application/selectors'\r\nimport { Dispatch } from \"react\";\r\nimport { AllActions } from \"../store\";\r\nimport { Formik, FormikActions, FormikProps, Form, Field, FieldProps, } from 'formik';\r\nimport { API_CREATE_WORKSPACE } from \"../api\";\r\nimport * as Yup from 'yup';\r\nimport { IApplication, IWorkspace } from '../store/application/types';\r\nimport { Button } from './elements';\r\n\r\nimport { getApp, newMessage } from \"../store/application/actions\";\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AllActions>) => (\r\n  {\r\n    getApp: getApp(dispatch),\r\n    newMessage: newMessage(dispatch)\r\n  }\r\n)\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  application: application(state)\r\n})\r\n\r\n\r\ninterface PropsFromState {\r\n  application: IApplication\r\n\r\n}\r\n\r\ninterface PropsFromDispatch {\r\n  getApp: ReturnType<typeof getApp>\r\n  newMessage: ReturnType<typeof newMessage>\r\n}\r\n\r\ninterface SelfProps {\r\n  close: () => void\r\n}\r\ntype Props = PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n  show: boolean\r\n}\r\n\r\nconst Schema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .matches(/^[a-z0-9]+$/, \"Lowercase alphanumerics only. Spaces not allowed.\")\r\n    .min(2, 'Minimum 2 characters.')\r\n    .max(200, 'Maximum 200 characters.')\r\n    .required('Required.'),\r\n});\r\n\r\ninterface formValues {\r\n  name: string\r\n}\r\n\r\nclass CreateWorkspaceModal extends Component<Props, State> {\r\n  keydownHandler = (event: KeyboardEvent) => {\r\n    if (event.keyCode === 27) {\r\n      this.props.close()\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.keydownHandler, false);\r\n  }\r\n\r\n  render() {\r\n\r\n    const bg = {\r\n      background: ' rgba(0,0,0,.75)',\r\n    };\r\n\r\n    return (\r\n      <div style={bg} className=\"fixed p-1 z-0 top-0 left-0 w-full h-full flex items-center justify-center bg-gray-100 text-sm\">\r\n        <div className=\"bg-white p-3 w-full  max-w-xs\">\r\n\r\n          <Formik\r\n            initialValues={{ name: '' }}\r\n\r\n            validationSchema={Schema}\r\n\r\n            onSubmit={(values: formValues, actions: FormikActions<formValues>) => {\r\n\r\n              API_CREATE_WORKSPACE(values.name)\r\n                .then(response => {\r\n                  if (response.ok) {\r\n                    response.json().then((data: IWorkspace) => {\r\n                      // noinspection JSIgnoredPromiseFromCall\r\n                      this.props.getApp()\r\n                      this.props.close()\r\n                    })\r\n                  } else {\r\n                    response.json().then(data => {\r\n                      switch (data.message) {\r\n                        case \"name_invalid\": {\r\n                          actions.setFieldError(\"name\", \"Name is invalid.\")\r\n                          break\r\n                        }\r\n                        case \"workspace_taken\": {\r\n                          actions.setFieldError(\"name\", \"The name is already taken.\")\r\n                          break\r\n                        }\r\n                        default: {\r\n                          break\r\n                        }\r\n                      }\r\n                    })\r\n                  }\r\n                })\r\n\r\n\r\n              actions.setSubmitting(false)\r\n            }}\r\n            render={(formikBag: FormikProps<formValues>) => (\r\n              <Form>\r\n                {formikBag.status && formikBag.status.msg && <div>{formikBag.status.msg}</div>}\r\n\r\n                <div className=\"flex flex-col \">\r\n                  <div className=\"mb-2\"> Create workspace </div>\r\n\r\n                  <div>\r\n\r\n                    <Field\r\n                      name=\"name\"\r\n                      render={({ field, form }: FieldProps<formValues>) => (\r\n\r\n                        <div className=\"flex flex-col\">\r\n                          <div className=\"flex flex-row items-center\">\r\n                            <div className=\"mr-1 font-bold  whitespace-no-wrap\">\r\n                              {process.env.REACT_APP_BASE_URL}  /\r\n                           </div>\r\n                            <div >\r\n                              <input autoFocus type=\"text\" {...field} placeholder=\"Name\" id=\"name\" className=\"rounded p-2 border w-full\t\" />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"p-1 text-red-500 text-xs font-bold\">{form.touched.name && form.errors.name}</div>\r\n                        </div>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex justify-end\">\r\n                    <div className=\"flex flex-row\">\r\n                      <div className=\"mr-1\">\r\n                        <Button submit title=\"Create\" primary />\r\n                      </div>\r\n                      <div>\r\n                        <Button title=\"Cancel\" handleOnClick={this.props.close} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </Form>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateWorkspaceModal)\r\n","import React, { Component } from 'react';\r\nimport Header from '../components/Header';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { AppState } from '../store'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, CardLayout } from '../components/elements';\r\nimport CreateWorkspaceModal from '../components/CreateWorkspaceModal';\r\nimport TimeAgo from 'react-timeago'\r\n\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n    state: state\r\n})\r\n\r\ninterface PropsFromState {\r\n    state: AppState\r\n}\r\ninterface RouterProps extends RouteComponentProps<{\r\n}> { }\r\ninterface PropsFromDispatch { }\r\ninterface OwnProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & OwnProps\r\n\r\ninterface State {\r\n    showCreate: boolean\r\n}\r\n\r\nclass WorkspacesPage extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            showCreate: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { application } = this.props.state.application\r\n\r\n        return (\r\n            <div>\r\n                <Header account={application.account!}/>\r\n\r\n                {this.state.showCreate ?\r\n                    <CreateWorkspaceModal close={() => this.setState({ showCreate: false })}/>\r\n                    : null\r\n                }\r\n\r\n                <div>\r\n                    <div className=\"p-2 flex flex-row mb-2 items-center\">\r\n                        <div ><h3>Workspaces</h3></div>\r\n                        <div className=\"ml-2\"> <Button title=\"New workspace\" primary icon=\"add\" handleOnClick={() => { this.setState({ showCreate: true }) }} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <CardLayout>\r\n\r\n                        <div className=\"\">\r\n                            {(application.workspaces && application.workspaces.length > 0) ?\r\n\r\n                                <div className=\"flex flex-col max-w-lg  \" >\r\n                                    <div className=\"p-2  \">\r\n                                        {application.workspaces.length}  workspace(s)\r\n\r\n                                    </div>\r\n\r\n                                    <div >\r\n                                        {\r\n                                            application.workspaces.map(x =>\r\n                                                (<div className=\"  p-2\" key={x.id}>\r\n                                                    <div className=\"mb-1\">\r\n                                                        <p><b><Link className=\"\" to={\"/\" + x.name}>{x.name} </Link></b></p>\r\n                                                        <p className=\"text-xs\">Created <TimeAgo date={x.createdAt} />.  </p>\r\n                                                    </div>\r\n                                                </div>)\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                : \"No workspaces\"\r\n                            }\r\n                        </div>\r\n                    </CardLayout>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkspacesPage); ","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"flex p-2 text-xs justify-center\">\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport AccountPage from './AccountPage';\r\nimport WorkspacePage from './WorkspacePage';\r\nimport WorkspacesPage from './WorkspacesPage';\r\nimport NotFound from './NotFound';\r\nimport Footer from '../components/Footer';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { AppState } from '../store'\r\nimport { connect } from 'react-redux'\r\nimport { IApplication } from '../store/application/types'\r\nimport { receiveApp } from '../store/application/actions';\r\nimport { API_FETCH_APP, API_FETCH_APP_RESP } from '../api';\r\n\r\nconst mapDispatchToProps = {\r\n    applicationReceived: receiveApp\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n    application: state.application.application\r\n})\r\n\r\ninterface PropsFromState {\r\n    application: IApplication\r\n}\r\ninterface RouterProps extends RouteComponentProps<{\r\n}> { }\r\ninterface PropsFromDispatch {\r\n    applicationReceived: typeof receiveApp\r\n}\r\ninterface SelfProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n    loading: boolean\r\n}\r\n\r\nclass Index extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        API_FETCH_APP()\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    response.json().then((data: API_FETCH_APP_RESP) => {\r\n                        this.props.applicationReceived(data)\r\n                        this.setState({ loading: false })\r\n                    })\r\n                } else {\r\n                    this.props.history.push(\"/account/login\")\r\n                }\r\n            }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (<div className=\"p-2\">Loading data...</div>)\r\n        } else if (this.props.application.account) {\r\n            return (\r\n                <div>\r\n\r\n                    <Switch>\r\n\r\n                        <Route exact path={this.props.match.path + \"\"} render={\r\n                            () => {\r\n                                const app = this.props.application\r\n\r\n                                if (app.workspaces && app.workspaces.length === 1) {\r\n                                    return (<Redirect to={app.workspaces[0].name}/>)\r\n                                }\r\n                                return (\r\n                                    <Redirect to={this.props.match.path + \"account/workspaces\"}/>\r\n                                )\r\n                            }\r\n\r\n                        } />\r\n                        <Route exact path={this.props.match.path + \"account/workspaces\"} component={WorkspacesPage} />\r\n                        <Route exact path={this.props.match.path + \"account/settings\"} component={AccountPage} />\r\n                        <Route path={this.props.match.path + \"account/\"} component={NotFound} />\r\n                        <Route path={this.props.match.path + \":workspaceName\"} component={WorkspacePage} />\r\n                        <Route path={this.props.match.path} component={NotFound} />\r\n                    </Switch>\r\n                    <Footer/>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (<Redirect to=\"/account/login\"/>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Index); ","import React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport * as Yup from 'yup';\r\nimport { Formik, FormikActions, FormikProps, Form, Field, FieldProps } from 'formik';\r\nimport { API_PASSWORD_RESET } from '../api'\r\nimport { Link } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\nimport { Button } from '../components/elements';\r\n\r\n\r\nconst Schema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email('Email invalid.')\r\n        .required('Email required.'),\r\n});\r\n\r\ninterface PropsFromState { }\r\ninterface RouterProps extends RouteComponentProps<{\r\n}> { }\r\ninterface PropsFromDispatch { }\r\ninterface SelfProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n    email: string\r\n    showSent: boolean\r\n}\r\n\r\nclass ResetPasswordPage extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = { showSent: false, email: \"\" }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const values = queryString.parse(this.props.location.search)\r\n        const email = values.email as string\r\n        if (email) this.setState({ email: email })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.showSent ?\r\n                <div className=\"p-4 w-full justify-center\"><em>An email has been sent with further instructions on how to reset your password. </em> <br/><br/>Back to <Link className=\"link\" to=\"/\">Featmap</Link>   </div>\r\n                :\r\n                <div className=\"flex p-2  w-full  justify-center items-center flex-col \">\r\n                    <div className=\"flex  p-3  max-w-xl w-full   items-center  flex-col  \">\r\n                        <div className=\"flex  p-2 flex-col items-baseline\">\r\n                            <div className=\"p-1 \"><h1 className={\"text-3xl font-medium\"}>Reset password</h1></div>\r\n                        </div>\r\n                        <div className=\"flex  p-2 flex-col items-baseline text-center\">\r\n                            <div className=\"p-1 \">Enter your <b>email</b> below.<br/> An email with instructions on how to reset your password will be sent. </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Formik\r\n                                initialValues={{ email: this.state.email }}\r\n                                enableReinitialize={true}\r\n\r\n                                validationSchema={Schema}\r\n\r\n                                onSubmit={(values: { email: string }, actions: FormikActions<{ email: string }>) => {\r\n                                    API_PASSWORD_RESET(values.email)\r\n                                        .then(response => {\r\n                                            this.setState({ showSent: true })\r\n                                        })\r\n\r\n\r\n                                    actions.setSubmitting(false)\r\n                                }}\r\n                                render={(formikBag: FormikProps<{ email: string }>) => (\r\n                                    <Form>\r\n                                        {formikBag.status && formikBag.status.msg && <div>{formikBag.status.msg}</div>}\r\n                                        <Field\r\n                                            name=\"email\"\r\n                                            render={({ field, form }: FieldProps<{ email: string }>) => (\r\n                                                <div className=\"flex flex-row items-baseline\">\r\n                                                    <div className=\"flex flex-col w-full\">\r\n                                                        <div><input type=\"email\" {...field} placeholder=\"email\" id=\"password\" className=\"rounded p-2 border w-64 text-lg \t\"/></div>\r\n                                                        <div className=\"p-1 text-red-500 text-xs font-bold\">{form.touched.email && form.errors.email && form.errors.email}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                        />\r\n                                        <div className=\"flex   flex-row items-baseline justify-center\">\r\n                                            <Button submit primary title=\"Reset password\"/>\r\n                                        </div>\r\n\r\n                                    </Form>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetPasswordPage","import React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport * as Yup from 'yup';\r\nimport { Formik, FormikActions, FormikProps, Form, Field, FieldProps } from 'formik';\r\nimport { API_NEW_PASSWORD_REQ, API_SET_PASSWORD } from '../api'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from '../components/elements';\r\n\r\n\r\nconst Schema = Yup.object().shape({\r\n    password: Yup.string()\r\n        .min(6, 'Password minimum 6 characters.')\r\n        .max(200, 'Password maximum 200 characters.')\r\n        .required('Password required.'),\r\n});\r\n\r\ninterface PropsFromState { }\r\ninterface RouterProps extends RouteComponentProps<{\r\n    key: string\r\n}> { }\r\ninterface PropsFromDispatch { }\r\ninterface SelfProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n    showDone: boolean\r\n}\r\n\r\nclass ResetPasswordPage extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = { showDone: false }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.showDone ?\r\n                <div className=\"p-2\"><em>The password has been changed.</em> <br/><br/>Back to <Link className=\"link\" to=\"/\">Featmap</Link> </div>\r\n                :\r\n\r\n                <div className=\"flex p-2  w-full  justify-center items-center flex-col \">\r\n                    <div className=\"flex  p-3  max-w-2xl w-full   items-center  flex-col  \">\r\n                        <div className=\"flex  p-2 flex-col items-baseline\">\r\n                            <div className=\"p-1 \"><h1 className={\"text-3xl font-medium\"}>Reset password</h1></div>\r\n                        </div>\r\n                        <div className=\"flex  p-2 flex-col items-baseline\">\r\n                            <div className=\"p-1 \">Enter your <b>new password</b> below.</div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Formik\r\n                                initialValues={{ password: '', key: this.props.match.params.key }}\r\n\r\n                                validationSchema={Schema}\r\n\r\n                                onSubmit={(values: API_NEW_PASSWORD_REQ, actions: FormikActions<API_NEW_PASSWORD_REQ>) => {\r\n                                    API_SET_PASSWORD(values)\r\n                                        .then(response => {\r\n                                            if (response.ok) {\r\n                                                this.setState({ showDone: true })\r\n                                            } else {\r\n                                                response.json().then(data => {\r\n                                                    switch (data.message) {\r\n                                                        case \"password_invalid\": {\r\n                                                            actions.setFieldError(\"password\", \"Password is invalid.\")\r\n                                                            break\r\n                                                        }\r\n                                                        default: {\r\n                                                            break\r\n                                                        }\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        })\r\n\r\n\r\n                                    actions.setSubmitting(false)\r\n                                }}\r\n                                render={(formikBag: FormikProps<API_NEW_PASSWORD_REQ>) => (\r\n                                    <Form>\r\n                                        {formikBag.status && formikBag.status.msg && <div>{formikBag.status.msg}</div>}\r\n                                        <Field\r\n                                            name=\"password\"\r\n                                            render={({ field, form }: FieldProps<API_NEW_PASSWORD_REQ>) => (\r\n                                                <div className=\"flex flex-row items-baseline\">\r\n                                                    <div className=\"flex flex-col w-full\">\r\n                                                        <div><input type=\"password\" {...field} placeholder=\"password\" id=\"password\" className=\"rounded p-2 border w-64 text-lg \t\"/></div>\r\n                                                        <div className=\"p-1 text-red-500 text-xs font-bold\">{form.touched.password && form.errors.password && form.errors.password}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                        />\r\n                                        <div className=\"flex   flex-row justify-center\">\r\n                                            <Button submit primary title=\"Change password\"/>\r\n                                        </div>\r\n                                    </Form>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetPasswordPage","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { AppState } from '../store'\r\nimport { application } from '../store/application/selectors'\r\nimport { IApplication } from '../store/application/types';\r\n\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  application: application(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\ninterface PropsFromState {\r\n  application: IApplication\r\n}\r\n\r\ninterface PropsFromDispatch {\r\n\r\n}\r\ninterface SelfProps {\r\n}\r\ntype Props = PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n}\r\n\r\nclass Messages extends Component<Props, State> {\r\n\r\n  render() {\r\n    if (this.props.application.messages.length > 0) {\r\n      return (\r\n        <div className=\"flex fixed w-full  justify-center p-5  z-0 top-0 left-0\" >\r\n          <div className=\"flex flex-col bg-gray-200 \">\r\n            {this.props.application.messages.map(x => (\r\n              <div className=\"flex flex-row   p-1  items-center \" key={x.id}>\r\n                {x.type === \"success\" && <div className=\"mr-1\"><i className=\"material-icons text-green-500\">done</i> </div>}\r\n                {x.type === \"fail\" && <div className=\"mr-1\"><i className=\"material-icons text-red\">error</i> </div>}\r\n                <div className=\"flex  flex-grow\">{x.message} </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else return null\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages)\r\n","import React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { Formik, FormikActions, FormikProps, Form } from 'formik';\r\nimport { API_ACCEPT_INVITE, API_GET_INVITE } from '../api'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from '../components/elements';\r\nimport { memberLevelToTitle } from \"../core/misc\";\r\nimport { IInvite } from '../store/application/types';\r\n\r\n\r\ninterface PropsFromState { }\r\ninterface RouterProps extends RouteComponentProps<{\r\n    code: string\r\n}> { }\r\ninterface PropsFromDispatch {\r\n}\r\ninterface SelfProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n    invite?: IInvite\r\n    notFound: boolean\r\n    success: boolean\r\n}\r\n\r\nclass AcceptInvitePage extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            invite: undefined,\r\n            notFound: false,\r\n            success: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        API_GET_INVITE(this.props.match.params.code)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    response.json().then((data: IInvite) => {\r\n                        this.setState({ invite: data })\r\n\r\n                    })\r\n                } else {\r\n                    this.setState({ notFound: true })\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.notFound) {\r\n            return <div className=\"p-2\"> Invitation not found. Back to <Link className=\"link\" to=\"/\">Featmap</Link>. </div>\r\n        }\r\n\r\n        if (this.state.success) {\r\n            return <div className=\"p-2\"> You are now a member of <b> {this.state.invite!.workspaceName}</b>! Back to <Link className=\"link\" to=\"/\">Featmap</Link>. </div>\r\n        }\r\n\r\n        if (this.state.invite) {\r\n\r\n            return (\r\n\r\n                <div className=\"flex p-2  w-full  justify-center items-center flex-col \">\r\n                    <div className=\"flex  p-3  max-w-xl w-full   items-center  flex-col  \">\r\n                        <div className=\"flex  p-2 flex-col items-baseline\">\r\n                            <div className=\"p-1 \"><h1 className={\"text-3xl font-medium\"}>Invitation to join workspace</h1></div>\r\n                        </div>\r\n                        <p>\r\n                            The workspace name is <b>{this.state.invite!.workspaceName}</b> and you will join as <b>{memberLevelToTitle(this.state.invite!.level)}</b>.\r\n                        </p>\r\n\r\n                        <div>\r\n                            <Formik\r\n                                initialValues={{}}\r\n\r\n                                onSubmit={(values: {}, actions: FormikActions<{}>) => {\r\n                                    actions.setStatus(\"\")\r\n                                    API_ACCEPT_INVITE(this.props.match.params.code)\r\n                                        .then(response => {\r\n                                            if (response.ok) {\r\n                                                this.setState({ success: true })\r\n                                            } else {\r\n                                                response.json().then((data: { message: string }) => {\r\n                                                    actions.setStatus(data.message)\r\n                                                })\r\n                                            }\r\n                                        })\r\n\r\n                                    actions.setSubmitting(false)\r\n                                }}\r\n                                render={(formikBag: FormikProps<{}>) => (\r\n                                    <Form>\r\n                                        <div className=\"p-2 font-bold  text-red\">{formikBag.status}</div>\r\n                                        <div className=\"flex  w-full text-lg justify-center \">\r\n                                            <div><Button title=\"Accept invite\" primary submit  /></div>\r\n                                        </div>\r\n                                    </Form>\r\n                                )}\r\n                            />\r\n                        </div>\r\n                        <div className=\"flex  p-2 flex-col \">\r\n                            <div className=\"p-1 text-center\">Not a member? <Link target=\"_blank\" className=\"link\" to=\"/account/signup\">Create an account</Link></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        }\r\n        else {\r\n            return (<div>Loading</div>)\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default AcceptInvitePage","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { AppState } from '../store'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { IApplication } from '../store/application/types';\r\nimport { milestones, getMilestone } from '../store/milestones/selectors';\r\nimport { features, getFeature } from '../store/features/selectors';\r\nimport { workflows, getWorkflow } from '../store/workflows/selectors';\r\nimport { IMilestone } from '../store/milestones/types';\r\nimport EntityDetailsModal from '../components/EntityDetailsModal';\r\nimport { getSubWorkflow, subWorkflows } from '../store/subworkflows/selectors';\r\nimport { ISubWorkflow } from '../store/subworkflows/types';\r\nimport { IWorkflow } from '../store/workflows/types';\r\nimport { IFeature } from '../store/features/types';\r\nimport { projects, getProjectById } from '../store/projects/selectors';\r\nimport { IProject } from '../store/projects/types';\r\nimport { application } from '../store/application/selectors';\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  application: application(state),\r\n  milestones: milestones(state),\r\n  subWorkflows: subWorkflows(state),\r\n  workflows: workflows(state),\r\n  features: features(state),\r\n  projects: projects(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\ninterface PropsFromState {\r\n  application: IApplication\r\n  milestones: IMilestone[]\r\n  subWorkflows: ISubWorkflow[]\r\n  workflows: IWorkflow[]\r\n  features: IFeature[]\r\n  projects: IProject[]\r\n}\r\n\r\ninterface PropsFromDispatch {\r\n}\r\n\r\ninterface RouterProps extends RouteComponentProps<{\r\n  projectId2: string\r\n  milestoneId: string\r\n  subWorkflowId: string\r\n  workflowId: string\r\n  featureId: string\r\n  key: string\r\n}> { }\r\n\r\n\r\ninterface SelfProps {\r\n  demo: boolean\r\n}\r\n\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n\r\n}\r\n\r\ninterface formValues {\r\n  title: string\r\n}\r\n\r\nclass ExternalEntityDetailsPage extends Component<Props, State> {\r\n\r\n  close = () => {\r\n    this.props.history.push(\"/link/\" + this.props.match.params.key + (this.props.demo ? \"?demo=1\" : \"\"))\r\n  };\r\n\r\n  render() {\r\n    const viewOnly = !this.props.demo\r\n\r\n    if (this.props.match.params.milestoneId) {\r\n      const ms = getMilestone(this.props.milestones, this.props.match.params.milestoneId)\r\n      return (\r\n        <EntityDetailsModal demo={this.props.demo} viewOnly={viewOnly} entity={ms} url={this.props.match.url} close={this.close} />\r\n      )\r\n    }\r\n\r\n    else if (this.props.match.params.subWorkflowId) {\r\n      const ms = getSubWorkflow(this.props.subWorkflows, this.props.match.params.subWorkflowId)\r\n      return (\r\n        <EntityDetailsModal demo={this.props.demo} viewOnly={viewOnly} entity={ms} url={this.props.match.url} close={this.close} />\r\n      )\r\n    }\r\n\r\n    else if (this.props.match.params.workflowId) {\r\n      const ms = getWorkflow(this.props.workflows, this.props.match.params.workflowId)\r\n      return (\r\n        <EntityDetailsModal demo={this.props.demo} viewOnly={viewOnly} entity={ms} url={this.props.match.url} close={this.close} />\r\n      )\r\n    }\r\n\r\n    else if (this.props.match.params.featureId) {\r\n      const p = getFeature(this.props.features, this.props.match.params.featureId)\r\n      return (\r\n        <EntityDetailsModal demo={this.props.demo} viewOnly={viewOnly} entity={p} url={this.props.match.url} close={this.close} />\r\n      )\r\n    }\r\n\r\n    else if (this.props.match.params.projectId2) {\r\n      const p = getProjectById(this.props.projects, this.props.match.params.projectId2)!\r\n      return (\r\n        <EntityDetailsModal demo={this.props.demo} viewOnly={viewOnly} entity={p} url={this.props.match.url} close={this.close} />\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExternalEntityDetailsPage)\r\n","import React, { Component } from 'react';\r\nimport { loadMilestones } from '../store/milestones/actions';\r\nimport { loadWorkflows } from '../store/workflows/actions';\r\nimport { loadSubWorkflows } from '../store/subworkflows/actions';\r\nimport { loadFeatures } from '../store/features/actions';\r\nimport { loadProjects } from '../store/projects/actions';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { Route, Switch, Link } from 'react-router-dom'\r\nimport { AppState } from '../store'\r\nimport { connect } from 'react-redux'\r\nimport { IApplication } from '../store/application/types'\r\nimport { API_GET_EXTERNAL_LINK, API_GET_PROJECT_RESP } from '../api';\r\nimport { IProject } from '../store/projects/types';\r\nimport { IMilestone } from '../store/milestones/types';\r\nimport { IWorkflow } from '../store/workflows/types';\r\nimport { ISubWorkflow } from '../store/subworkflows/types';\r\nimport { IFeature } from '../store/features/types';\r\nimport { features } from '../store/features/selectors';\r\nimport Board from '../components/Board';\r\nimport { filterWorkflowsOnProject, workflows } from '../store/workflows/selectors';\r\nimport { filterMilestonesOnProject, milestones } from '../store/milestones/selectors';\r\nimport { projects, getProjectById } from '../store/projects/selectors';\r\nimport { subWorkflows } from '../store/subworkflows/selectors';\r\nimport { Button } from '../components/elements';\r\nimport ExternalEntityDetailsPage from './ExternalEntityDetailsPage';\r\nimport queryString from 'query-string'\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    loadProjects,\r\n    loadMilestones,\r\n    loadWorkflows,\r\n    loadSubWorkflows,\r\n    loadFeatures\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n    application: state.application.application,\r\n    features: features(state),\r\n    projects: projects(state),\r\n    milestones: milestones(state),\r\n    workflows: workflows(state),\r\n    subWorkflows: subWorkflows(state)\r\n});\r\n\r\ninterface PropsFromState {\r\n    application: IApplication\r\n    features: IFeature[]\r\n    projects: IProject[]\r\n    milestones: IMilestone[]\r\n    workflows: IWorkflow[]\r\n    subWorkflows: ISubWorkflow[]\r\n}\r\ninterface RouterProps extends RouteComponentProps<{\r\n    key: string\r\n}> { }\r\ninterface PropsFromDispatch {\r\n    loadProjects: typeof loadProjects\r\n    loadMilestones: typeof loadMilestones\r\n    loadWorkflows: typeof loadWorkflows\r\n    loadSubWorkflows: typeof loadSubWorkflows\r\n    loadFeatures: typeof loadFeatures\r\n}\r\ninterface SelfProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n    loading: boolean\r\n    projectId?: string\r\n    showClosedMilestones: boolean\r\n    demo: boolean\r\n}\r\n\r\nclass ExternalLinkPage extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            projectId: undefined,\r\n            showClosedMilestones: false,\r\n            demo: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const values = queryString.parse(this.props.location.search);\r\n        const demo = values.demo as string;\r\n        if (demo === \"1\") this.setState({ demo: true });\r\n\r\n        API_GET_EXTERNAL_LINK(this.props.match.params.key)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.setState({loading: false})\r\n                } else {\r\n                    response.json().then((data: API_GET_PROJECT_RESP) => {\r\n                        this.props.loadProjects([data.project]);\r\n                        this.props.loadFeatures(data.features);\r\n                        this.props.loadMilestones(data.milestones);\r\n                        this.props.loadWorkflows(data.workflows);\r\n                        this.props.loadSubWorkflows(data.subWorkflows);\r\n                        this.setState({projectId: data.project.id});\r\n                        this.setState({loading: false})\r\n                    })\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (<div className=\"p-2\">Loading data...</div>)\r\n        } else if (this.state.projectId) {\r\n\r\n            const project = getProjectById(this.props.projects, this.state.projectId)!;\r\n\r\n\r\n            return (\r\n                <div>\r\n                    <header className=\"text-black\">\r\n                        <div className=\"flex items-center p-1 bg-gray-200\">\r\n                            <div className=\"flex text-lg mt-2 mb-2   m-1 w-24 \">\r\n                                <b><Link to=\"/\">Featmap</Link></b>\r\n                            </div>\r\n                        </div>\r\n                    </header>\r\n                    <div className=\"\">\r\n                        <div className=\"flex flex-row p-2 \">\r\n                            <div className=\"flex flex-grow m-1 text-xl items-center\">\r\n                                <div className=\"flex\"><span className=\"font-semibold\">{project.title}  </span></div>\r\n                                <div className=\"flex ml-2\"><span className=\"font-semibold p-1 bg-gray-200 text-xs \"> VIEW ONLY  </span></div>\r\n                                {this.state.demo && <div className=\"flex ml-2\"><span className=\"font-semibold p-1 bg-pink-400 text-xs text-white \"> DEMO MODE  </span></div>}\r\n                            </div>\r\n                            <div className=\"flex items-center\">\r\n                                <div className=\" flex items-center  text-sm\">\r\n                                    <div>\r\n                                        {this.state.showClosedMilestones ?\r\n                                            <Button iconColor=\"text-green-500-500\" icon=\"toggle_on\" title=\"Show closed milestones\" handleOnClick={() => this.setState({ showClosedMilestones: false })} />\r\n                                            :\r\n                                            <Button icon=\"toggle_off \" title=\"Show closed milestones\" handleOnClick={() => this.setState({ showClosedMilestones: true })} />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"ml-4\"><Link to={this.props.match.url + \"/p/\" + this.state.projectId}><i className=\"material-icons text-gray-600\">settings</i></Link></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n\r\n                            <Board\r\n                                showClosedMilstones={this.state.showClosedMilestones}\r\n                                viewOnly={true}\r\n                                url={this.props.match.url}\r\n                                features={this.props.features}\r\n                                workflows={filterWorkflowsOnProject(this.props.workflows, project.id)}\r\n                                subWorkflows={this.props.subWorkflows}\r\n                                milestones={filterMilestonesOnProject(this.props.milestones, project.id)}\r\n                                projectId={project.id}\r\n                                workspaceId={project.workspaceId}\r\n                                demo={this.state.demo}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={() => null} />\r\n                        <Route exact path={this.props.match.path + \"/m/:milestoneId\"} render={(props) => <ExternalEntityDetailsPage {...props} demo={this.state.demo} />} />\r\n                        <Route exact path={this.props.match.path + \"/sw/:subWorkflowId\"} render={(props) => <ExternalEntityDetailsPage {...props} demo={this.state.demo} />} />\r\n                        <Route exact path={this.props.match.path + \"/f/:featureId\"} render={(props) => <ExternalEntityDetailsPage {...props} demo={this.state.demo} />} />\r\n                        <Route exact path={this.props.match.path + \"/w/:workflowId\"} render={(props) => <ExternalEntityDetailsPage {...props} demo={this.state.demo} />} />\r\n                        <Route exact path={this.props.match.path + \"/p/:projectId2\"} render={(props) => <ExternalEntityDetailsPage {...props} demo={this.state.demo} />} />\r\n\r\n                    </Switch>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (<div className=\"p-2\">Project not found. </div>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExternalLinkPage); ","import React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport * as Yup from 'yup';\r\nimport { Formik, FormikActions, FormikProps, Form, Field, FieldProps } from 'formik';\r\nimport { API_CONTACT } from '../api'\r\nimport { Button } from '../components/elements';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface PropsFromState { }\r\ninterface RouterProps extends RouteComponentProps<{\r\n}> { }\r\ninterface PropsFromDispatch { }\r\ninterface SelfProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n    sent: boolean\r\n}\r\nclass ContactPage extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = { sent: false }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            < div className=\"flex p-2  w-full  justify-center items-center flex-col \" >\r\n\r\n                <div className=\"flex  p-3  max-w-xl w-full   items-center  flex-col   \">\r\n                    <div className=\"flex  p-2 flex-col items-baseline\">\r\n                        <div className=\"p-1 \"><h1 className={\"text-3xl font-medium\"}>Contact the Featmap team</h1></div>\r\n                    </div>\r\n\r\n                    {this.state.sent ?\r\n                        <div>\r\n                            <p>Thank you for your message, we will get back to you shortly!</p>\r\n                            <p>Back to <Link className=\"link\" to=\"/\">Featmap</Link></p></div>\r\n                        :\r\n                        <div>\r\n                            <div className=\"flex  p-2 flex-col items-baseline\">\r\n                                <div className=\"p-1 \">Specify a <b>topic</b>,  <b>message</b> and your <b>email adress</b>.</div>\r\n                            </div>\r\n\r\n                            <div className=\"mt-2 w-full\">\r\n                                <Formik\r\n                                    initialValues={{ topic: \"general\", body: \"\", sender: \"\" }}\r\n\r\n                                    validationSchema={Yup.object().shape({\r\n\r\n\r\n                                        body: Yup.string()\r\n                                            .min(1, 'Minimum 1 characters.')\r\n                                            .max(10000, 'Maximum 10000 characters.')\r\n                                            .required('Required.'),\r\n\r\n                                        sender: Yup.string()\r\n                                            .email('Invalid email adress.')\r\n                                            .required('Required.'),\r\n                                    })}\r\n\r\n                                    onSubmit={(values: API_CONTACT, actions: FormikActions<API_CONTACT>) => {\r\n                                        API_CONTACT(values)\r\n                                            .then(response => {\r\n                                                if (response.ok) {\r\n                                                    this.setState({ sent: true })\r\n                                                } else {\r\n                                                    response.json().then(data => {\r\n                                                        switch (data.message) {\r\n                                                            case \"email invalid\": {\r\n                                                                actions.setFieldError(\"sender\", data.message)\r\n                                                                break\r\n                                                            }\r\n                                                            case \"message too short\": {\r\n                                                                actions.setFieldError(\"body\", data.message)\r\n                                                                break\r\n                                                            }\r\n                                                            case \"message too long\": {\r\n                                                                actions.setFieldError(\"body\", data.message)\r\n                                                                break\r\n                                                            }\r\n                                                            default: {\r\n                                                                break\r\n                                                            }\r\n                                                        }\r\n                                                    })\r\n                                                }\r\n                                            })\r\n\r\n\r\n                                        actions.setSubmitting(false)\r\n                                    }}\r\n                                    render={(formikBag: FormikProps<API_CONTACT>) => (\r\n                                        <Form>\r\n                                            {formikBag.status && formikBag.status.msg && <div>{formikBag.status.msg}</div>}\r\n                                            <div className=\"mb-3\">\r\n                                                <Field\r\n                                                    name=\"topic\"\r\n                                                    component=\"select\"\r\n                                                    className=\"rounded p-2 border w-full text-lg    \"\r\n                                                >\r\n                                                    <option value=\"general\">General </option>\r\n                                                    <option value=\"sales\">Sales</option>\r\n                                                    <option value=\"support\">Support</option>\r\n                                                </Field>\r\n                                            </div>\r\n\r\n                                            <Field\r\n                                                name=\"body\"\r\n                                                render={({ field, form }: FieldProps<API_CONTACT>) => (\r\n                                                    <div className=\"flex  flex-row items-baseline\">\r\n                                                        <div className=\" flex flex-col w-full\">\r\n                                                            <div><textarea autoFocus rows={20} {...field} placeholder=\"Message\" id=\"body\" className=\"rounded p-2  border w-full  \t\"/></div>\r\n                                                            <div className=\"m-1 text-red-500 text-xs font-bold\">{form.touched.body && form.errors.body && form.errors.body}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n                                            />\r\n                                            <Field\r\n                                                name=\"sender\"\r\n                                                render={({ field, form }: FieldProps<API_CONTACT>) => (\r\n                                                    <div className=\"flex  flex-row items-baseline\">\r\n\r\n                                                        <div className=\"flex flex-col w-full\">\r\n                                                            <div><input type=\"text\" {...field} placeholder=\"Your email adress\" id=\"sender\" className=\"rounded p-2 border w-full text-lg\t\"/></div>\r\n                                                            <div className=\"p-1 text-red-500 text-xs font-bold\">{form.touched.sender && form.errors.sender && form.errors.sender}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n                                            />\r\n                                            <div className=\"flex justify-center\">\r\n                                                <Button submit primary title=\"Send message\"/>\r\n                                            </div>\r\n\r\n                                        </Form>\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactPage","import React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\ninterface PropsFromState { }\r\ninterface RouterProps extends RouteComponentProps<{\r\n}> { }\r\ninterface PropsFromDispatch { }\r\ninterface SelfProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n}\r\n\r\nclass SuccessPage extends Component<Props, State> {\r\n    render() {\r\n        return (\r\n            < div className=\"flex p-2  w-full  justify-center items-center flex-col \" >\r\n                <div className=\"flex  p-3  max-w-xl w-full   items-center  flex-col \">\r\n                    <div className=\"flex  p-2 flex-col items-baseline\">\r\n                        <div className=\"p-1 \"><h2><i className=\"material-icons text-3xl text-green-500\">check</i> Subscription change successful!</h2></div>\r\n                        <div className=\"p-1 \">Back to <Link className=\"link\" to=\"/\">Featmap</Link>.</div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default SuccessPage","import React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\ninterface PropsFromState { }\r\ninterface RouterProps extends RouteComponentProps<{\r\n}> { }\r\ninterface PropsFromDispatch { }\r\ninterface SelfProps { }\r\ntype Props = RouterProps & PropsFromState & PropsFromDispatch & SelfProps\r\n\r\ninterface State {\r\n    sent: boolean\r\n}\r\n\r\nclass CancelPage extends Component<Props, State> {\r\n    render() {\r\n        return (\r\n            < div className=\"flex p-2  w-full  justify-center items-center flex-col \" >\r\n                <div className=\"flex  p-3  max-w-xl w-full   items-center  flex-col   \">\r\n                    <div className=\"flex  p-2 flex-col items-baseline\">\r\n                        <div className=\"p-1 \">  <h2> <i className=\"material-icons text-3xl text-red\">error</i> Something went wrong</h2></div>\r\n                        <div className=\"p-1 \">Please try again or contact <Link className=\"link\" to=\"/contact\">support</Link>.</div>\r\n                        <div className=\"p-1 \">Back to <Link className=\"link\" to=\"/\">Featmap</Link>.</div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default CancelPage","import React, { Component } from 'react';\r\nimport LoginPage from './pages/LogInPage';\r\nimport SignUpPage from './pages/SignUpPage';\r\nimport LogoutPage from './pages/LogOutPage';\r\nimport VerifyEmailPage from './pages/VerifyEmailPage';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport './App.css';\r\nimport IndexPage from './pages/IndexPage';\r\nimport ResetPasswordPage from './pages/ResetPasswordPage';\r\nimport ResetPasswordWithKeyPage from './pages/ResetPasswordWithKeyPage';\r\nimport { AppState } from './store'\r\nimport { application } from './store/application/selectors';\r\nimport { IApplication } from './store/application/types';\r\nimport { connect } from 'react-redux';\r\nimport Messages from './components/Messages';\r\nimport AcceptInvitePage from './pages/AcceptInvitePage';\r\nimport ExternalLinkPage from './pages/ExternalLinkPage';\r\nimport ContactPage from './pages/ContactPage';\r\nimport SuccessPage from './pages/SuccessPage';\r\nimport CancelPage from './pages/CancelPage';\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  application: application(state)\r\n})\r\n\r\ninterface Props {\r\n  application: IApplication\r\n}\r\n\r\nclass App extends Component<Props, {}> {\r\n  render() {\r\n    return (\r\n      <div id=\"main\">\r\n        <Switch>\r\n          <Route path=\"/link/:key\" component={ExternalLinkPage} />\r\n          <Route exact path=\"/account/success\" component={SuccessPage} />\r\n          <Route exact path=\"/account/cancel\" component={CancelPage} />\r\n          <Route exact path=\"/account/contact\" component={ContactPage} />\r\n          <Route exact path=\"/account/logout\" component={LogoutPage} />\r\n          <Route exact path=\"/account/signup\" component={SignUpPage} />\r\n          <Route exact path=\"/account/login\" component={LoginPage} />\r\n          <Route exact path=\"/account/reset\" component={ResetPasswordPage} />\r\n          <Route exact path=\"/account/reset/:key\" component={ResetPasswordWithKeyPage} />\r\n          <Route exact path=\"/account/invitation/:code\" component={AcceptInvitePage} />\r\n          <Route path={\"/account/verify/:key\"} component={VerifyEmailPage} />\r\n          <Route path=\"/\" component={IndexPage} />\r\n        </Switch>\r\n        <Messages />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { IProject } from \"./types\";\r\nimport { Actions, ProjectsActions, } from \"./actions\";\r\n\r\nexport interface State {\r\n    items: IProject[]\r\n}\r\n\r\nexport const initialState: State = {\r\n    items: []\r\n}\r\n\r\nexport function reducer(state: State = initialState, action: Actions) {\r\n\r\n    switch (action.type) {\r\n        case ProjectsActions.CREATE_PROJECT: {\r\n            const project = action.payload\r\n            project.kind = \"project\"\r\n\r\n            return {\r\n                ...state,\r\n                items: [...state.items, project]\r\n            }\r\n        }\r\n\r\n        case ProjectsActions.LOAD_PROJECTS: {\r\n            const items = action.payload.map(x => ({ ...x, kind: \"project\" } as IProject)) // tag them appropriately            \r\n\r\n            return {\r\n                ...state,\r\n                items: items\r\n            }\r\n        }\r\n\r\n        case ProjectsActions.UPDATE_PROJECT: {\r\n            const project = action.payload\r\n\r\n            project.kind = \"project\"\r\n\r\n            return {\r\n                ...state,\r\n                items: state.items.map(x => x.id === project.id ? project : x)\r\n\r\n            }\r\n        }\r\n\r\n        case ProjectsActions.DELETE_PROJECT: {\r\n            const id = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(x => x.id !== id)\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n","const alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\r\nconst minChar = alphabet[0]\r\nconst maxChar = alphabet[alphabet.length - 1]\r\n\r\n\r\nconst Rank = (prev: string, next: string): { rank: string, rebalance: boolean } => {\r\n    if (prev === \"\") {\r\n        prev = minChar\r\n    }\r\n\r\n    if (next === \"\") {\r\n        next = maxChar\r\n    }\r\n\r\n    let rank = \"\"\r\n    let i = 0\r\n\r\n    while (true) {\r\n        let prevChar = getChar(prev, i, minChar)\r\n        let nextChar = getChar(next, i, maxChar)\r\n\r\n        if (prevChar === nextChar) {\r\n            rank += prevChar\r\n            i++\r\n            continue\r\n        }\r\n\r\n        let midChar = mid(prevChar, nextChar)\r\n\r\n        if (midChar === prevChar || midChar === nextChar) {\r\n            rank += prevChar\r\n            i++\r\n            continue\r\n        }\r\n\r\n        rank += midChar\r\n        break\r\n    }\r\n\r\n    if (rank >= next) {\r\n        return { rank: prev, rebalance: true }\r\n\r\n    }\r\n\r\n    return { rank: rank, rebalance: false }\r\n}\r\n\r\nconst mid = (prev: string, next: string): string => {\r\n\r\n    let prevIndex = alphabet.findIndex(x => x === prev)\r\n    let nextIndex = alphabet.findIndex(x => x === next)\r\n\r\n    return alphabet[Math.floor((prevIndex + nextIndex) / 2)]\r\n}\r\n\r\n\r\nconst getChar = (s: string, i: number, defaultChar: string): string => {\r\n    if (i >= s.length) {\r\n        return defaultChar\r\n    }\r\n    return s[i]\r\n}\r\n\r\nexport { Rank }","import { IFeature } from \"./types\";\r\nimport { Actions, ActionTypes } from \"./actions\";\r\nimport { sortFeatures, getFeature, filterFeaturesOnMilestoneAndSubWorkflow } from \"./selectors\";\r\nimport { Rank } from '../../core/lexorank'\r\n\r\nexport interface State {\r\n    items: IFeature[]\r\n}\r\n\r\nexport const initialState: State = {\r\n    items: [\r\n    ]\r\n}\r\n\r\nexport function reducer(state: State = initialState, action: Actions) {\r\n\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.CREATE_FEATURE: {\r\n            const feature = action.payload\r\n            let featureList = sortFeatures(filterFeaturesOnMilestoneAndSubWorkflow(state.items, feature.milestoneId, feature.subWorkflowId))\r\n            feature.rank = featureList.length === 0 ? Rank(\"\", \"\").rank : Rank(featureList[featureList.length - 1].rank, \"\").rank\r\n            return {\r\n                ...state,\r\n                items: [...state.items, feature]\r\n            }\r\n        }\r\n        case ActionTypes.LOAD_FEATURES: {\r\n            const features = action.payload.map(x => ({ ...x, kind: \"feature\" } as IFeature)) // tag them appropriately            \r\n            return {\r\n                ...state,\r\n                items: features\r\n            }\r\n        }\r\n        case ActionTypes.UPDATE_FEATURE: {\r\n            const feature = action.payload\r\n            feature.kind = \"feature\"\r\n\r\n            return {\r\n                ...state,\r\n                items: state.items.map(x => x.id === feature.id ? feature : x)\r\n            }\r\n        }\r\n        case ActionTypes.DELETE_FEATURE: {\r\n            const id = action.payload\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(x => x.id !== id)\r\n            }\r\n        }\r\n        case ActionTypes.MOVE_FEATURE: {\r\n            const { id, toMilestoneId, toSubWorkflowId, index, ts, by } = action.payload\r\n\r\n            const f = getFeature(state.items, id)\r\n            let ff = sortFeatures(filterFeaturesOnMilestoneAndSubWorkflow(state.items, toMilestoneId, toSubWorkflowId))\r\n\r\n            // If the move is within the same list, we need to remove it from the list\r\n            if (f.milestoneId === toMilestoneId && f.subWorkflowId === toSubWorkflowId) {\r\n                ff = ff.filter(x => x.id !== f.id)\r\n            }\r\n\r\n            const prevRank = ff[index - 1] === undefined ? \"\" : ff[index - 1].rank\r\n            const nextRank = ff[index] === undefined ? \"\" : ff[index].rank\r\n\r\n            f.milestoneId = toMilestoneId\r\n            f.subWorkflowId = toSubWorkflowId\r\n            f.rank = Rank(prevRank, nextRank).rank\r\n            f.lastModified = ts\r\n            f.lastModifiedByName = by\r\n\r\n            return {\r\n                ...state,\r\n                items: state.items.map(x => x.id === f.id ? f : x)\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import { IWorkflow } from \"./types\";\r\nimport { Actions, ActionTypes } from \"./actions\";\r\nimport { sortWorkflows, filterWorkflowsOnProject, getWorkflow } from \"./selectors\";\r\nimport { Rank } from '../../core/lexorank'\r\n\r\nexport interface State {\r\n    items: IWorkflow[]\r\n}\r\n\r\nexport const initialState: State = {\r\n    items: []\r\n}\r\n\r\nexport function reducer(state: State = initialState, action: Actions) {\r\n    switch (action.type) {\r\n        case ActionTypes.CREATE_WORKFLOW: {\r\n            const ms = action.payload\r\n            const ll = sortWorkflows(filterWorkflowsOnProject(state.items, ms.projectId))\r\n            ms.rank = ll.length === 0 ? Rank(\"\", \"\").rank : Rank(ll[ll.length - 1].rank, \"\").rank\r\n            return {\r\n                ...state,\r\n                items: [...state.items, ms]\r\n            }\r\n        }\r\n\r\n        case ActionTypes.LOAD_WORKFLOWS: {\r\n            const workflows = action.payload.map(x => ({ ...x, kind: \"workflow\" } as IWorkflow)) // tag them appropriately                        \r\n            return {\r\n                ...state,\r\n                items: workflows\r\n            }\r\n        }\r\n\r\n        case ActionTypes.UPDATE_WORKFLOW: {\r\n            const workflow = action.payload\r\n            workflow.kind = \"workflow\"\r\n            return {\r\n                ...state,\r\n                items: state.items.map(x => x.id === workflow.id ? workflow : x)\r\n            }\r\n        }\r\n\r\n        case ActionTypes.DELETE_WORKFLOW: {\r\n            const id = action.payload\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(x => x.id !== id)\r\n            }\r\n        }\r\n\r\n        case ActionTypes.MOVE_WORKFLOW: {\r\n            const p = action.payload\r\n            const m = getWorkflow(state.items, p.id)\r\n            const ff = sortWorkflows(filterWorkflowsOnProject(state.items, m.projectId)).filter(x => x.id !== m.id)\r\n            const prevRank = ff[p.index - 1] === undefined ? \"\" : ff[p.index - 1].rank\r\n            const nextRank = ff[p.index] === undefined ? \"\" : ff[p.index].rank\r\n            m.rank = Rank(prevRank, nextRank).rank\r\n            m.lastModified = p.ts\r\n            m.lastModifiedByName = p.ts\r\n\r\n            return {\r\n                ...state,\r\n                items: state.items.map(x => x.id === m.id ? m : x)\r\n            }\r\n\r\n        }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport { reducer as workflowsReducer }","import { ISubWorkflow } from \"./types\";\r\nimport { Actions, ActionTypes } from \"./actions\";\r\nimport { getSubWorkflowByWorkflow, sortSubWorkflows, getSubWorkflow } from './selectors'\r\nimport { Rank } from '../../core/lexorank'\r\n\r\nexport interface State {\r\n    items: ISubWorkflow[]\r\n}\r\n\r\nexport const initialState: State = {\r\n    items: []\r\n}\r\n\r\nexport function reducer(state: State = initialState, action: Actions) {\r\n    switch (action.type) {\r\n        case ActionTypes.CREATE_SUBWORKFLOW: {\r\n            const ms = action.payload\r\n            const ll = sortSubWorkflows(getSubWorkflowByWorkflow(state.items, ms.workflowId))\r\n            ms.rank = ll.length === 0 ? Rank(\"\", \"\").rank : Rank(ll[ll.length - 1].rank, \"\").rank\r\n            return {\r\n                ...state,\r\n                items: [...state.items, ms]\r\n            }\r\n        }\r\n\r\n        case ActionTypes.LOAD_SUBWORKFLOWS: {\r\n            const workflows = action.payload.map(x => ({ ...x, kind: \"subworkflow\" } as ISubWorkflow)) // tag them appropriately            \r\n\r\n            return {\r\n                ...state,\r\n                items: workflows\r\n            }\r\n        }\r\n\r\n        case ActionTypes.UPDATE_SUBWORKFLOW: {\r\n            const workflow = action.payload\r\n            workflow.kind = \"subworkflow\"\r\n            return {\r\n                ...state,\r\n                items: state.items.map(x => x.id === workflow.id ? workflow : x)\r\n            }\r\n        }\r\n\r\n        case ActionTypes.DELETE_SUBWORKFLOW: {\r\n            const id = action.payload\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(x => x.id !== id)\r\n            }\r\n        }\r\n\r\n        case ActionTypes.MOVE_SUBWORKFLOW: {\r\n            const p = action.payload\r\n            const m = getSubWorkflow(state.items, p.id)\r\n            const ff = sortSubWorkflows(getSubWorkflowByWorkflow(state.items, p.toWorkflowId)).filter(x => x.id !== m.id)\r\n            const prevRank = ff[p.index - 1] === undefined ? \"\" : ff[p.index - 1].rank\r\n            const nextRank = ff[p.index] === undefined ? \"\" : ff[p.index].rank\r\n            m.rank = Rank(prevRank, nextRank).rank\r\n            m.workflowId = p.toWorkflowId\r\n            m.lastModified = p.ts\r\n            m.lastModifiedByName = p.ts\r\n\r\n            return {\r\n                ...state,\r\n                items: state.items.map(x => x.id === m.id ? m : x)\r\n            }\r\n\r\n        }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport { reducer as subWorkflowReducer }","import { IMilestone } from \"./types\";\r\nimport { Actions, ActionTypes } from \"./actions\";\r\nimport { sortMilestones, getMilestone, filterMilestonesOnProject } from \"./selectors\";\r\nimport { Rank } from '../../core/lexorank'\r\n\r\nexport interface State {\r\n    items: IMilestone[]\r\n}\r\n\r\nexport const milestonesInitialState = {\r\n    items: [\r\n    ]\r\n}\r\n\r\nexport function reducer(state: State = milestonesInitialState, action: Actions) {\r\n    switch (action.type) {\r\n        case ActionTypes.CREATE_MILESTONE: {\r\n            const ms = action.payload\r\n            const ll = sortMilestones(filterMilestonesOnProject(state.items, ms.projectId))\r\n            ms.rank = ll.length === 0 ? Rank(\"\", \"\").rank : Rank(ll[ll.length - 1].rank, \"\").rank\r\n            return {\r\n                ...state,\r\n                items: [...state.items, ms]\r\n            }\r\n        }\r\n\r\n        case ActionTypes.LOAD_MILESTONES: {\r\n            const milestones = action.payload.map(x => ({ ...x, kind: \"milestone\" } as IMilestone)) // tag them appropriately            \r\n            return {\r\n                ...state,\r\n                items: milestones\r\n            }\r\n        }\r\n\r\n        case ActionTypes.UPDATE_MILESTONE: {\r\n            const milestone = action.payload\r\n            milestone.kind = \"milestone\"\r\n\r\n            return {\r\n                ...state,\r\n                items: state.items.map(x => x.id === milestone.id ? milestone : x)\r\n            }\r\n        }\r\n\r\n        case ActionTypes.DELETE_MILESTONE: {\r\n            const id = action.payload\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(x => x.id !== id)\r\n            }\r\n        }\r\n\r\n        case ActionTypes.MOVE_MILESTONE: {\r\n            const p = action.payload\r\n            const m = getMilestone(state.items, p.id)\r\n            const ff = sortMilestones(filterMilestonesOnProject(state.items, m.projectId)).filter(x => x.id !== m.id)\r\n            const prevRank = ff[p.index - 1] === undefined ? \"\" : ff[p.index - 1].rank\r\n            const nextRank = ff[p.index] === undefined ? \"\" : ff[p.index].rank\r\n            m.rank = Rank(prevRank, nextRank).rank\r\n            m.lastModified = p.ts\r\n            m.lastModifiedByName = p.by\r\n\r\n            return {\r\n                ...state,\r\n                items: state.items.map(x => x.id === m.id ? m : x)\r\n            }\r\n\r\n        }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport { reducer as milestonesReducer }","import { IApplication } from \"./types\";\r\nimport { AppActions, Actions } from \"./actions\";\r\n\r\nexport interface State {\r\n    application: IApplication\r\n}\r\n\r\nexport const applicationInitialState: State = {\r\n    application: {\r\n        workspaces: [],\r\n        memberships: [],\r\n        messages: [],\r\n        subscriptions: [],\r\n    }\r\n}\r\n\r\nexport function reducer(state: State = applicationInitialState, action: Actions) {\r\n    switch (action.type) {\r\n        case AppActions.LOAD_APPLICATION: {\r\n            const app = action.payload\r\n            app.messages = []\r\n            return {\r\n                ...state,\r\n                application: app\r\n            }\r\n        }\r\n\r\n        case AppActions.RESET_APPLICATION: {\r\n            return {\r\n                ...state,\r\n                application: applicationInitialState.application\r\n            }\r\n\r\n        }\r\n\r\n        case AppActions.CREATE_MESSAGE: {\r\n            const message = action.payload\r\n            return {\r\n                ...state,\r\n                application: { ...state.application, messages: [...state.application.messages, message] }\r\n            }\r\n\r\n        }\r\n\r\n        case AppActions.DELETE_MESSAGE: {\r\n            const id = action.payload\r\n            return {\r\n                ...state,\r\n                application: { ...state.application, messages: state.application.messages.filter(x => x.id !== id) }\r\n            }\r\n\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport { reducer as applicationReducer }","import * as fromProjects from './projects/reducers'\r\nimport * as fromFeatures from './features/reducers'\r\nimport * as fromWorkflows from './workflows/reducers'\r\nimport * as fromSubWorkflows from './subworkflows/reducers'\r\nimport * as fromMilestones from './milestones/reducers'\r\nimport * as fromApplication from './application/reducers'\r\nimport { combineReducers } from 'redux';\r\nimport { RouterState, connectRouter } from 'connected-react-router'\r\nimport { History } from 'history'\r\n\r\nimport { Actions as ApplicationActions } from \"./application/actions\"\r\nimport { Actions as FeaturesActions } from \"./features/actions\"\r\nimport { Actions as MilestonesActions } from \"./milestones/actions\"\r\nimport { Actions as ProjectsActions } from \"./projects/actions\"\r\nimport { Actions as WorkflowsActions } from \"./workflows/actions\"\r\nimport { Actions as SubworkflowsActions } from \"./workflows/actions\"\r\n\r\n\r\nexport interface AppState {\r\n    projects: fromProjects.State,\r\n    features: fromFeatures.State,\r\n    workflows: fromWorkflows.State,\r\n    subWorkflows: fromSubWorkflows.State,\r\n    milestones: fromMilestones.State\r\n    application: fromApplication.State\r\n    router: RouterState\r\n}\r\n\r\nexport const reducer = (history: History) => combineReducers<AppState>({\r\n    projects: fromProjects.reducer,\r\n    features: fromFeatures.reducer,\r\n    workflows: fromWorkflows.reducer,\r\n    subWorkflows: fromSubWorkflows.reducer,\r\n    milestones: fromMilestones.reducer,\r\n    application: fromApplication.reducer,\r\n    router: connectRouter(history)\r\n})\r\n\r\nexport type AllActions = ApplicationActions | FeaturesActions | MilestonesActions | ProjectsActions | WorkflowsActions | SubworkflowsActions\r\n","import { createBrowserHistory } from 'history'\r\nimport { createStore, compose, applyMiddleware } from 'redux'\r\nimport { routerMiddleware } from 'connected-react-router'\r\nimport { reducer } from './store'\r\n\r\nexport const history = createBrowserHistory()\r\n\r\nexport default function configureStore(\r\n    initialState?: any\r\n) {\r\n    const enhancer = (window as any)[\"__REDUX_DEVTOOLS_EXTENSION__\"] ? (window as any)[\"__REDUX_DEVTOOLS_EXTENSION__\"]()(createStore) : createStore;\r\n    // noinspection UnnecessaryLocalVariableJS\r\n    return enhancer(\r\n        reducer(history),\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(\r\n                routerMiddleware(history)\r\n            ),\r\n        ),\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport configureStore, { history } from './configureStore'\r\nimport { Router } from 'react-router-dom'\r\n\r\nconst store = configureStore()\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router history={history}>\r\n            <App />\r\n        </Router>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}